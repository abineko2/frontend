{"version":3,"sources":["store/Store.js","users/setting.js","users/PcIndex.jsx","users/PhoneIndex.jsx","users/Index.jsx","Login.jsx","users/New.jsx","users/Edit.jsx","users/MyPagination.jsx","users/History.jsx","users/Show.jsx","users/EmpShow.jsx","users/PhoneEmpShow.jsx","setting.js","users/Reservation.jsx","users/Order.jsx","items/PcIndex.jsx","items/PhoneIndex.jsx","items/Index.jsx","items/New.jsx","items/Edit.jsx","items/Process.jsx","items/setItemData.js","orders/PcIndex.jsx","orders/PhoneIndex.jsx","orders/Index.jsx","orders/New.jsx","orders/setItem.js","orders/Edit.jsx","images/fishs2.jpg","customer/PCIndex.jsx","customer/phoneStyle.js","customer/PhoneIndex.jsx","customer/Index.jsx","customer/setting.js","customer/Show.jsx","customer/PhoneShow.jsx","customer/NoData.jsx","customer/confirm.jsx","customer/PhoneConfirm.jsx","shopping/settiing.js","shopping/PcIndex.jsx","shopping/PhoneIndex.jsx","shopping/Index.jsx","shopping/Show.jsx","shopping/Reservation.jsx","sale/setting.js","sale/PcIndex.jsx","sale/PhoneIndex.jsx","sale/Index.jsx","App.js","reportWebVitals.js","index.js"],"names":["init_data","userData","orderItem","buyCarts","historyData","pageData","chartData","loginReducer","state","action","newData","slice","splice","push","user","logoutReducer","ordersReducer","data","ordersStockChangeReducer","datas","map","name","stock","Number","num","cartReducer","cartResetReducer","cartUpdateReducer","items","forEach","item","cartDeleteReducer","userHistoryReducer","history","searchReducer","chartReducer","sendLoginData","type","cartsAdd","ordersSend","ordersStockChange","cartDeleteCart","index","cartUpdate","historyDataSend","searchSend","chartSend","createStore","ordercheck","count","date","status","shopping_date","orderHistoryStatus","className","daySetting","newDate","Date","getFullYear","getMonth","getDate","todayParams","today","year","month","day","customerTodayOrders","allData","todayOrder","createDate","c_year","c_month","c_day","customerTomorrowOrders","tomorrowOrder","setDate","customerOrders","Orders","customers","users","customerUsers","admin","totalMoneyCalc","orders","total","order","price","statusView","userLink","border","background","color","outline","fontWeight","textDecoration","withRouter","connect","props","useState","localStorage","getItem","JSON","parse","data-testid","Row","Col","md","span","offset","length","Table","striped","bordered","hover","value","style","onClick","i","id","axios","get","then","res","dispatch","catch","error","console","log","email","Button","variant","editPage","window","confirm","delete","response","alert","message","deleteUser","buttonWidth","width","marginRight","class","colSpan","editIdget","minDeviceWidth","maxDeviceWidth","password","setState","inputText","e","target","Form","onSubmit","preventDefault","post","confirmation","data2","user_id","setItem","stringify","removeItem","err","Group","Label","Control","placeholder","onChange","required","display","show","setShow","userInput","getuserData","patch","first","last","Math","floor","active","Pagination","Item","seachDatarequest","process","loginUserCheck","create","rowSpan","timeSetting","baseData","hour","getHours","min","getMinutes","toDoubleDigits","ulArea","marginTop","image","height","Image","src","alt","roundedCircle","receiving_time","itemLink","imageShow","localData","modalData","itemData","openModal","category","processItem","deleteItem","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","rounded","processes","info","itemEditIdget","processIdget","file","setImage","itemInput","params","FormData","append","headers","File","label","multiple","accept","files","as","cols","rows","useEffect","setProcess","options","selectedOption","setSelectedOption","obj","isMulti","defaultValue","processing_name","deleteProcess","deleteOrder","margin","mt-3","orderEditIdget","formSelectItems","dochange","sendData","defaultvalue","getitemData","rightAreaTable","overflow","nameTitle","padding","maxWidth","buycheck","fontSize","textAlign","borderLeft","buttonHeight","fixItemData","sendCustomerData","buyItem","icon","faCartPlus","itemTotalMoney","sendCartItemToConfirm","faCashRegister","HeaderImagePhone","ArticlePhone","marginBottom","UlPhone","listStyle","LlPhone","phoneBuyCartMain","margimBottom","sameItemCheck","sameItemCount","selectItemCheck","localstorageChange","table","number","time","propData","check","minusNumber","changeItemData","array","stockOption","split","NoData","title","fontFamily","th","orderData","cartNum","setNumber","timesChange","carts","faShoppingCart","faFish","faYenSign","faCalculator","faUtensils","size","custom","currentNumber","changeNumber","calcNumber","cartItemName","stateData","dataNumber","propOrders","buycart","thiscartData","delAction","numArray","doSelect","selectNumber","n","action2","viewDataBranch","todayOdrersChecker","shoppings","shopping","todayOrderExisting","todayObjects","t_date","t_year","t_month","t_day","customButton","borderBottom","shopingData","orderStatus","onMouseOver","document","getElementById","hoverButton","onMouseOut","outButton","showShoppingStatus","user_name","sendShoppingData","font","sendStatusNumber","statusLayout","faTruck","faClipboard","totalSales","合計","salesRate","allTotal","ResponsiveContainer","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","week","editId","deleteId","itemEditId","processId","OrderEditId","customerItem","shoppingShow","cartItem","changeItem","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","faUser","to","cartAction","exact","path","render","getEditId","component","userNew","UserShow","PhoneEmpShow","UserOrder","OrderEdit","getItemEditId","getProcessId","ItemNew","getOrderEditId","OrderNew","shoppingData","SalesIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","datastore","onBeforeunload"],"mappings":"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","file":"static/js/main.13d5cf32.chunk.js","sourcesContent":["import { createStore } from \"redux\";\n\nlet init_data ={\n  userData: [],\n  orderItem: null,\n  buyCarts: [],\n  historyData: null,\n  pageData: null,\n  chartData: null\n}\n\nconst storeReducer = (state = init_data, action)=>{\n  switch (action.type) {\n    case 'LOGIN':\n      return loginReducer(state, action);\n    case 'LOGOUT':\n      return logoutReducer(state, action);\n    case 'ORDER':\n      return ordersReducer(state, action);\n    case 'ORDERSTOCK':\n      return ordersStockChangeReducer(state, action);\n    case 'CARTADD':\n      return cartReducer(state, action);\n    case 'CARTRESET':\n      return cartResetReducer(state, action);\n    case 'CARTDELETE':\n      return cartDeleteReducer(state, action);\n    case 'CARTUPDATE':\n      return cartUpdateReducer(state, action);\n    case 'USERHISTORY':\n      return userHistoryReducer(state, action);  \n    case 'SEARCHDATA':\n      return searchReducer(state, action);  \n    case 'CHART':\n      return chartReducer(state, action);  \n    default:\n      return state\n  }\n}\n/**************[-----redux処理---------]*********************************************************************** */\nconst loginReducer = (state, action)=>{\n  let newData = state.userData.slice();\n  newData.splice(0);\n  newData.push(action.user);\n \n  return{\n    userData: newData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst logoutReducer =(state, action)=>{\n    let newData = state.userData.slice();\n    newData.splice(0);\n    return{\n      userData: newData,\n      buyCarts: state.buyCarts,historyData: state.historyData\n    }\n  }\nconst ordersReducer = (state, action)=>{\n  let data = state.orderItem;\n  data = action.data;\n \n  return{\n    userData: state.userData,\n    orderItem: data,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\n/*買い物確認削除ボタン*/\nconst ordersStockChangeReducer = (state, action) =>{\n  let datas = state.orderItem.slice();\n  datas.map((data)=>{\n    if(data.name === action.name){\n      let stock = Number(data.stock);\n      stock += Number(action.num); /*在庫元に戻す*/\n      data.stock = stock;\n    }\n  });\n  return{\n    userData: state.userData,\n    orderItem: datas,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst cartReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.push(action.data);\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst cartResetReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst cartUpdateReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  action.items.forEach((item) => {\n    data.push(item);\n  });\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst cartDeleteReducer = (state, action)=>{\n  let datas = state.buyCarts.slice();\n  datas.splice(action.num, 1);\n  \n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: datas,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\n\nconst userHistoryReducer = (state, action)=>{\n  let history = action.data;\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: history,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\n/*ページネーション検索*/\nconst searchReducer = (state, action)=>{\n  let data = action.data;\n  \n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: data,\n    chartData: state.chartData\n  }\n}\n/*グラフ用*/\nconst  chartReducer = (state, action)=>{\n  let data = action.data;\n  \n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: data\n  }\n}\n/**************[-----コンポーネント送受メソッド処理---------]*********************************************************************** */\nexport  const sendLoginData = (user)=>{\n  return{\n    type:'LOGIN',\n    user: user\n  };\n}\nexport const logoutAction =()=>{\n  return{\n    type: 'LOGOUT'\n  }\n}\nexport const cartsAdd = (item)=>{\n  return{\n    type: 'CARTADD',\n    data: item\n  }\n}\nexport const ordersSend = (data)=>{\n  return{\n    type: 'ORDER',\n    data: data\n  }\n}\nexport const ordersStockChange = (name, num)=>{\n  return{\n    type: 'ORDERSTOCK',\n    name: name,\n    num: num\n  }\n}\nexport const cartEmpty = ()=>{\n  return{\n    type: 'CARTRESET'\n  }\n}\nexport const cartDeleteCart = (index)=>{\n  return{\n    type: 'CARTDELETE',\n    num: index\n  }\n}\nexport const cartUpdate = (items)=>{\n  return{\n    type: 'CARTUPDATE',\n    items: items\n  }\n}\nexport const historyDataSend = (data)=>{\n  return{\n    type: 'USERHISTORY',\n    data: data\n  }\n}\nexport const searchSend = (data)=>{\n  return{\n    type: 'SEARCHDATA',\n    data: data\n  }\n}\n/*グラフ用*/\nexport const chartSend = (data)=>{\n  return{\n    type: 'CHART',\n    data: data\n  }\n}\nexport default createStore(storeReducer)","import React from 'react';\n\n/*注文された商品中受け渡し済み以外申請中と加工済みの件数検知*/\n\nexport const ordercheck = (datas) =>{\n   let count = 0;\n   let date = null;\n  if(datas){\n    datas.forEach(data => {\n        if(data.status === 0 || data.status === 1){\n            count += 1;\n            date = data.shopping_date;\n        }\n    });\n    return {\n        count:  count + '件注文',\n        date: date\n    }\n  }\n  else{\n    return '履歴なし';\n  }\n}\n/* 注文された商品の履歴状況分岐  */\n\nexport const orderHistoryStatus = (status) =>{\n  switch (status) {\n    case 0:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 1:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 2:\n      return <div className=\"font-weight-bold\">完了済み</div>\n    default:\n      break;\n  }\n}\n/****************************************************************************************************** */\n/*日付の表示設定*/\nexport const daySetting = (date)=>{\n  let newDate = new Date(date);\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let day = newDate.getDate();\n  return year + '年' + month + '月' +day +'日';\n}\n/***************************************************************************************************** */\n/*共通パラメーター*/\nconst todayParams =()=>{\n  /*本日*/\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n  return{\n    year: year,\n    month: month,\n    day: day\n  }\n}\n\n/*当日日付のみのデータ抽出 */\n\nexport const customerTodayOrders = (allData)=>{\n  let todayOrder = [];\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( todayParams().year === c_year && todayParams().month === c_month && todayParams().day === c_day){\n        todayOrder.push(data);\n      }\n    })\n  }\n  return todayOrder;\n}\n\n/*明日日付のみのデータ抽出 */\n\nexport const customerTomorrowOrders = (allData)=>{\n  let tomorrowOrder = [];\n  const today = new Date();\n  today.setDate(today.getDate() + 1);\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( year === c_year && month === c_month && day === c_day){\n        tomorrowOrder.push(data);\n      }\n    })\n  }\n  return tomorrowOrder;\n}\n\n\n\n\n\n  /*当日以外の日付のみのデータ抽出 */\n\nexport const customerOrders = (allData)=>{\n  let Orders = [];\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if(todayParams().year >= c_year && todayParams().month >= c_month && todayParams().day > c_day){\n        Orders.push(data);\n      }\n    })\n  }\n  return Orders;\n}\n/*お客様一覧でユーザーのうち従業員を省いた一覧*/\n\nexport const customers =(users)=>{\n  let customerUsers = [];\n  users.forEach((user)=>{\n    if(!(user.admin === true)){\n      customerUsers.push(user);\n    }\n  });\n  return customerUsers;\n}\n/*お客様注文確認ページにて合計金額計算 */\n\nexport const totalMoneyCalc =(orders)=>{\n  let total = 0;\n  orders.map((order)=>{\n    total += order.price * order.num;\n  })\n  return total;\n}\n\nexport const statusView = (status)=>{\n  switch (status) {\n    case 0:\n      return <div className=\"bg-info\">申請中</div>;\n    case 1:\n      return <div className=\"bg-warning\">加工済みです</div>;\n    case 2:\n      return <div className=\"bg-danger\">受け渡し済み</div>;\n    default:\n      break;\n  }\n}\n","import {  useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport {historyDataSend} from '../store/Store';\nimport { customers } from './setting';\n\n\nconst userLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\n function PcIndex(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function userCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/users')\n       .then((res)=>{\n          localStorage.setItem('users', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('users'))\n      })\n  }\n    useState(userCall());*/\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editPage(id);\n     props.history.push(\"/users/edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteUser(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/users/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   const userShowaccess = (id)=>{\n    axios\n    .get(`https://uematsu-backend.herokuapp.com/history/show/${id}`)\n    .then((res)=>{\n       const action = historyDataSend(res.data);\n       props.dispatch(action);\n\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n     props.history.push('/users_empshow');\n   }\n \n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">会員一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">名前</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">メールアドレス</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {customers(state.data).map((value)=>(\n                  <tr key={value.name}>\n                     <td className=\"text-center align-middle\">\n                       <button \n                         style={userLink} \n                         onClick={(i)=>userShowaccess(value.id)}\n                       >{value.name}</button>\n                    </td>\n                    <td  className=\"text-center align-middle\">\n                      {value.email}\n                    </td>\n                    <td className=\"text-center\">\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3 w-25\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteUser(value.id)}\n                        className=\"ml-3 w-25\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import {  useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport {historyDataSend} from '../store/Store';\nimport { customers } from './setting';\n\n\nconst userLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst buttonWidth={\n  width: '45%',\n  marginRight:'5%'\n}\n\n\n function PhoneIndex(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function userCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/users')\n       .then((res)=>{\n          localStorage.setItem('users', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('users'))\n      })\n  }\n    useState(userCall());*/\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editPage(id);\n     props.history.push(\"/users/edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteUser(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/users/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   const userShowaccess = (id)=>{\n    axios\n    .get(`https://uematsu-backend.herokuapp.com/history/show/${id}`)\n    .then((res)=>{\n       const action = historyDataSend(res.data);\n       props.dispatch(action);\n\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n     props.history.push('/users_phone_empshow');\n   }\n \n  return(\n    <div className=\"w-100\">\n      <div className=\"text-center mt-2 mb-4\">\n        <h2 data-testid=\"usertitle\">会員一覧</h2>\n      </div>\n      <div class=\"bg-white\"></div>\n      <div className=\"w-100 bg-white\">\n          {state.data.length > 0 ?\n            <Table striped bordered hover>\n              <tbody>\n                {customers(state.data).map((value)=>(\n                  <tr key={value.name}>\n                    <Table bordered>\n                      <tbody>\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">名前</th>\n                          <td className=\"text-center align-middle\">\n                            <button \n                              style={userLink} \n                              onClick={(i)=>userShowaccess(value.id)}\n                            >{value.name}</button>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">メールアドレス</th>\n                          <td  className=\"text-center align-middle\">\n                            {value.email}\n                          </td>\n                        </tr>\n\n                        <tr>\n                            <td colSpan=\"2\">\n                              <Button \n                                variant=\"primary\"\n                                onClick={(i)=>editPage(value.id)}\n                                style={buttonWidth}\n                              >編集</Button>\n\n                              <Button \n                                variant=\"danger\"\n                                onClick={(i)=>deleteUser(value.id)}\n                                style={buttonWidth}\n                              >削除</Button>\n                          </td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n      </div>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneIndex))","import {  useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\nimport MediaQuery from \"react-responsive\";\n\n\n function Index(props){\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editIdget(id);\n     props.history.push(\"/users/edit\");\n   } \n\n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          editPage={(i)=>editPage(i)}\n        />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex \n          editPage={(i)=>editPage(i)}\n        />\n      </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport './App.css'\nimport { withRouter } from 'react-router'\nimport axios from 'axios'\nimport { connect} from 'react-redux';\nimport { sendLoginData, searchSend, ordersSend, chartSend } from './store/Store';\n\nconst  Login = (props)=>{\n\n  const[state, setState] = useState({\n    email: '',\n    password: ''\n  })\n\n  const newUserComponent = ()=>{\n    props.history.push('/users/new');  \n  }\n  const accesslogin = (e)=>{\n    e.preventDefault();\n    let data = {\n      email: state.email,\n      password: state.password,\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/sessions', data)\n      .then(function (response) {\n\n        if(response.data.name){\n            let action = sendLoginData(response.data);\n            props.dispatch(action);\n            /*railsからメッセージ*/\n            alert('ログインしました'); \n            setState({\n              name: '',\n              email: '',\n              password: '',\n              confirmation: ''\n            })\n            let data2 = {\n              user_id: response.data.id,\n              num: 1\n            }\n            axios\n                .get('https://uematsu-backend.herokuapp.com/users')\n                .then((res)=>{\n                    localStorage.setItem('users', JSON.stringify(res.data));\n                    \n                })\n                .catch((error)=>{\n                    console.log(error);\n                })       \n            axios.post('https://uematsu-backend.herokuapp.com/history/search', data2)\n            .then(function (response) {\n              let action = searchSend(response.data);\n              props.dispatch(action);\n            })\n            .catch(function(){\n              alert('error');\n            })\n             axios\n            .get('https://uematsu-backend.herokuapp.com/users')\n            .then((res)=>{\n                localStorage.setItem('users', JSON.stringify(res.data));\n                \n            })\n            .catch((error)=>{\n                console.log(error);\n            })\n           axios\n            .get('https://uematsu-backend.herokuapp.com/items')\n            .then((res)=>{\n              localStorage.removeItem('items');\n              setState(res.data);\n              localStorage.setItem('items', JSON.stringify(res.data));\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n          \n          axios\n          .get('https://uematsu-backend.herokuapp.com/orders')\n          .then((res)=>{\n              localStorage.setItem('orders', JSON.stringify(res.data));\n              let action = ordersSend(res.data);\n              props.dispatch(action);\n              if(localStorage.getItem('orders') && localStorage.getItem('users')){\n                response.data.admin === true? props.history.push('/orders') :  props.history.push('/users/show');\n              }\n             \n          })\n          .catch((error)=>{\n              console.log(error);\n          })\n          axios\n            .get('https://uematsu-backend.herokuapp.com/shoppings')\n            .then((res)=>{\n              localStorage.removeItem('shoppings');\n              setState(res.data);\n              localStorage.setItem('shoppings', JSON.stringify(res.data));\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n          axios\n            .get('https://uematsu-backend.herokuapp.com/sales')\n            .then((res)=>{\n                let action = chartSend(res.data);\n                props.dispatch(action);\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n       setState({\n        \n      })\n        \n          }\n          else{\n            alert('ログイン失敗');\n          }\n      })\n      .catch(function(err){\n        alert(err);\n      })\n      \n  }\n  const inputText = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]:value});\n  }\n  return(\n   <>\n    <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-secondary\" data-testid=\"logintitle\">ログイン</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n          <Form onSubmit={accesslogin} data-testid=\"loginForm\">\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control \n                type=\"email\" \n                name=\"email\"\n                placeholder=\"(例)sample@example.com\" \n                className=\"h8\" \n                onChange={inputText}\n                required\n                value={state.email}\n                data-testid=\"ml\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label>\n              <Form.Control\n                 type=\"password\" \n                 name=\"password\"\n                 placeholder=\"(例)password\" \n                 onChange={inputText}\n                 required\n                 value={state.password}\n                 data-testid=\"ps\"\n              />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              <Button \n                variant=\"primary\" \n                onClick={newUserComponent}\n                className=\"btn-block mt-3\">\n                新規登録\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Login))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmation: ''\n  })\n  \n\n  const loginComponent = ()=>{\n    props.history.push('/login')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.post('https://uematsu-backend.herokuapp.com/users', data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規会員登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={loginComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(New)","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  Edit = (props)=>{\n\n const getuserData = ()=>{\n  let user = []\n  let datas = JSON.parse(localStorage.getItem('users'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     user.push(data);\n    }\n  });\n  return user\n }\n  let user = getuserData();\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: user.length>0? user[0].name : '',\n    email: user.length>0?  user[0].email : '',\n    password: '',\n    confirmation: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n\n  const homeComponent = ()=>{\n    props.history.push('/')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.patch(`https://uematsu-backend.herokuapp.com/users/${props.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2>{state.name}情報編集</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={homeComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Edit));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { searchSend } from '../store/Store';\n\nconst  MyPagination = (props)=>{\n  let items = [];\n  const[state, setState] = useState({\n    first: 1,\n    last: ((props.userData[0].orders[0]) && props.userData[0].orders[0].length>=5)? \n    Math.floor(props.userData[0].orders[0].length/5 >10)?  10 : Math.floor(props.userData[0].orders[0].length/5)   : 1,\n    active: 1\n  });\n  for(let i=state.first; i<=state.last; i++){\n    items.push(\n      <Pagination.Item key={i} active={i == state.active} onClick={()=>seachDatarequest(i)}>{i}</Pagination.Item>\n    )\n  }\n  const seachDatarequest = (i)=>{\n    let data = {\n      user_id: props.userData[0].id,\n      num: i\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/history/search', data)\n    .then(function (response) {\n      let action = searchSend(response.data);\n      props.dispatch(action);\n    })\n    .catch(function(){\n      alert('error');\n    })\n    setState({\n      first: state.first,\n      last: state.last,\n      active: i\n    })\n  }  \n  \n  return(\n   <>\n    <Pagination >{items}</Pagination>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(MyPagination))","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { orderHistoryStatus } from \"./setting\";\nimport MyPagination from './MyPagination';\n\nconst  History = (props)=>{\n\n  return(\n   <div>\n     <MyPagination />\n    {props.pageData? \n      <>\n       <Table bordered className=\"mt-3\">\n         <thead>\n           <tr>\n             <th className=\"bg-primary text-white text-center\">注文日</th>\n             <th className=\"bg-primary text-white text-center\">注文商品</th>\n             <th className=\"bg-primary text-white text-center\">加工法</th>\n             <th className=\"bg-primary text-white text-center\">価格</th>\n             <th className=\"bg-primary text-white text-center\">注文数</th>\n             <th className=\"bg-primary text-white text-center\">状況</th>\n           </tr>\n         </thead>\n         <tbody>\n           {props.pageData.map((data)=>(\n             <tr>\n               <td className=\"font-weight-bold text-center\">{data.shopping_date}</td>\n               <td className=\"font-weight-bold text-center\">{data.name}</td>\n               <td className=\"font-weight-bold text-center\">{data.process}</td>\n               <td className=\"font-weight-bold text-center\">{data.price}</td>\n               <td className=\"font-weight-bold text-center\">{data.num}</td>\n               <td className=\"font-weight-bold text-center\">{orderHistoryStatus(data.status)}</td>\n             </tr>\n           ))}\n         </tbody>\n       </Table>\n      </>\n      : \n      <div className=\"p-5 bg-secondary mt-3 text-white font-weight-bold\">履歴がありません。</div>\n    }\n   </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(History))","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { historyDataSend, ordersSend } from '../store/Store';\nimport { ordercheck, daySetting } from './setting';\nimport History from './History';\nimport MyPagination from './MyPagination';\n\n\n/**************************************************************************************** */\nconst  Show = (props)=>{\n const sendShoppindData = ()=>{\n  axios\n  .get('https://uematsu-backend.herokuapp.com/orders')\n  .then((res)=>{\n     let action = ordersSend(res.data);\n     props.dispatch(action);\n     \n  })\n  .catch((error)=>{\n     console.log(error);\n  })\n }\n useState(sendShoppindData);\n   \n  /*************APIによるuser一覧**********************************/\n   async function orderCall(){\n     \n    await axios\n      .get(`https://uematsu-backend.herokuapp.com/history/show/${props.userData[0].id}`)\n      .then((res)=>{\n         const action = historyDataSend(res.data);\n         props.dispatch(action);\n\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n }\n \n\n\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck)\n  return(\n   <>\n      {props.userData.length >0?\n       <>\n        <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n          <h2 className=\"text-white font-weight-bold\">{props.userData[0].name}さんページ</h2>\n        </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <Row>\n            <Col md={{span :7}}>\n              <p className=\"font-weight-bold\">会員情報</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">名前</th>\n                   <td>{props.userData[0].name}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">メールアドレス</th>\n                   <td>{props.userData[0].email}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用開始日</th>\n                   <td>{daySetting(props.userData[0].create)}</td>\n                 </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col md={{span :5}}>\n            <p className=\"font-weight-bold\">ご利用状況</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用回数</th>\n                   <td className=\"text-center\">{props.userData[0].orders[0]? props.userData[0].orders[0].length : 0 }</td>\n                 </tr>\n               \n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">現在注文有無</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).count? ordercheck(props.userData[0].orders[0]).count : '未使用'}</td>\n                 </tr>\n\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">注文日</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).date? ordercheck(props.userData[0].orders[0]).date : '未使用'}</td>\n                 </tr>\n               \n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>    \n      </Row>\n      </>\n        : \n        loginUserCheck()\n      }\n      {/* 履歴エリア */}\n\n      <div className=\"text-center mt-3 font-weight-bold\">\n          <h2 className=\"text-light font-weight-bold\">商品依頼履歴</h2>\n      </div>\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 mt-2 pb-4 bg-light shadow\">\n          {/* ログアウト中は無効 */}\n          \n          {props.userData.length >0? <History /> : ''}\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { daySetting, customerTodayOrders,customerOrders } from './setting';\n\n\n\n/**************************************************************************************** */\nconst  EmpShow = (props)=>{\n   \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\" className=\"text-light font-weight-bold\">{props.historyData? props.historyData.name : ''}&nbsp;注文履歴</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【現在注文中の表品一覧】</p>\n         {(props.historyData && customerTodayOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerTodayOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n      {/* 当日以外の履歴 */}\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【過去の注文一覧】</p>\n         {(props.historyData && customerOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(EmpShow))\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { daySetting, customerTodayOrders,customerOrders } from './setting';\n\n\n\n/**************************************************************************************** */\nconst  EmpShow = (props)=>{\n   \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\" className=\"text-light font-weight-bold\">{props.historyData? props.historyData.name : ''}&nbsp;注文履歴</h2>\n      </div>\n      <div className=\"w-100 bg-white\">\n         <p className=\"font-weight-bold text-center\">【現在注文中の表品一覧】</p>\n         {(props.historyData && customerTodayOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered className=\"w-100\"> \n              <tbody>\n                {customerTodayOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <Table bordered>\n                        <tbody>\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">日付</th>\n                          <td colSpan=\"4\" className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">品名</th>\n                          <td className=\"text-center font-weight-bold\">{data.name}</td>\n                          <th className=\"text-white text-center bg-primary align-middle\">加工名</th>\n                          <td colSpan=\"2\" className=\"text-center font-weight-bold\">{data.process}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">価格</th>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                             {data.price}<br/>(単価)\n                          </td>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                            {Number(data.num) * Number(data.price)}<br/>(合計)\n                          </td>\n                          <th className=\"text-white text-center bg-primary align-middle\">数</th>\n                          <td className=\"text-center font-weight-bold align-middle\">{data.num}</td>\n                        </tr>\n                      </tbody>\n                     \n                    </Table>\n                    \n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }  \n      </div>\n\n      {/* 当日以外の履歴 */}\n\n      <div class=\"w-100 bg-light\">\n         <p className=\"font-weight-bold text-center\">【過去の注文一覧】</p>\n         {(props.historyData && customerOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered className=\"w-100\">\n              <tbody>\n                {customerOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <Table bordered>\n                    <tbody>\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">日付</th>\n                          <td colSpan=\"4\" className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">品名</th>\n                          <td className=\"text-center font-weight-bold\">{data.name}</td>\n                          <th className=\"text-white text-center bg-primary align-middle\">加工名</th>\n                          <td colSpan=\"2\" className=\"text-center font-weight-bold\">{data.process}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">価格</th>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                             {data.price}<br/>(単価)\n                          </td>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                            {Number(data.num) * Number(data.price)}<br/>(合計)\n                          </td>\n                          <th className=\"text-white text-center bg-primary align-middle\">数</th>\n                          <td className=\"text-center font-weight-bold align-middle\">{data.num}</td>\n                        </tr>\n                      </tbody>\n                    </Table>\n    \n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n      </div>\n\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(EmpShow))\n","\nexport const timeSetting = (baseData)=>{\n   let date = new Date(baseData);\n   let hour = date.getHours();\n   let min = date.getMinutes();\n   return hour + \":\" + toDoubleDigits(min);\n}\nconst toDoubleDigits = function(num) {\n   num += \"\";\n   if (num.length === 1) {\n     num = \"0\" + num;\n   }\n  return num;     \n} ","import React, { useState } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport {customerTomorrowOrders , totalMoneyCalc } from './setting';\nimport { timeSetting } from '../setting';\n\nconst ulArea ={\n  marginTop: '-4%'\n}\nconst image={\n  width: '100px',\n  height: '100px'\n}\n\n/*****************************お客様用注文一覧ページ*********************************************************** */\nconst  Reservation = (props)=>{\n  return(\n    <>  \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <div className=\"text-center\">【明日予約商品】</div>\n          {((props.userData.length>0) && ( customerTomorrowOrders (props.userData[0].orders[0]).length >0))? \n           <h3 className=\"mt-2\">【注文合計金額: \n           <span className=\"text-danger font-weight-bold\">\n             {totalMoneyCalc(customerTomorrowOrders(props.userData[0].orders[0]))}\n           </span>円】</h3>\n          : \n          ''\n          }\n         \n          <ul class=\"list-group\" style={ulArea}>\n          {((props.userData.length>0) && ( customerTomorrowOrders (props.userData[0].orders[0]).length >0))? customerTomorrowOrders(props.userData[0].orders[0]).map((data)=>(\n            <li className=\"list-group-item mt-5\">\n              <Row>\n                <Col md=\"12\">\n                  <ul className=\"list-inline\">\n                    <li className=\"list-inline-item h4 ml-5\">\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${data.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </li>\n                    <li className=\"list-inline-item h5 mr-5\">商品名:{data.name}</li>\n                    <li className=\"list-inline-item h5 mr-3\">価格:<span className=\"text-danger\">{data.price}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">注文数:{data.num}</li>\n                    <li className=\"list-inline-item h5 mr-3\">合計:<span className=\"text-danger\">{data.price *data.num}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">依頼加工:{data.process}</li>\n                    <li className=\"list-inline-item h5 mr-3\">受け取り時間:{timeSetting(data.receiving_time)}</li>\n                  </ul>\n                \n                </Col>\n              </Row>\n            </li>\n          )) :   <div className=\"p-5 text-white text-center mt-5 bg-secondary font-weight-bold\">データがありません</div>}\n          </ul>\n        </Col>\n      </Row>\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(Reservation));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport { customerTodayOrders, totalMoneyCalc, statusView } from './setting';\nimport Reservation from './Reservation';\nimport { timeSetting } from '../setting';\n\nconst ulArea ={\n  marginTop: '-4%'\n}\nconst image={\n  width: '100px',\n  height: '100px'\n}\n\n/*****************************お客様用注文一覧ページ*********************************************************** */\nconst  Order = (props)=>{\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  \n  return(\n    <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"font-weight-bold text-light\">現在注文商品</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <div className=\"text-center\">【本日受取商品】</div>\n          {((props.userData.length>0) && (customerTodayOrders(props.userData[0].orders[0]).length >0))?\n           <h3 className=\"mt-2\">【注文合計金額: \n           <span className=\"text-danger font-weight-bold\">\n             {totalMoneyCalc(customerTodayOrders(props.userData[0].orders[0]))}\n           </span>円】</h3>\n           : \n           ''}\n          \n          <ul class=\"list-group\" style={ulArea}>\n          {((props.userData.length>0) && (customerTodayOrders(props.userData[0].orders[0]).length >0))? customerTodayOrders(props.userData[0].orders[0]).map((data)=>(\n            <li className=\"list-group-item mt-5\">\n              <Row>\n                <Col md=\"12\">\n                  <ul className=\"list-inline\">\n                    <li className=\"list-inline-item h4 ml-5\">\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${data.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </li>\n                    <li className=\"list-inline-item h5 mr-5\">商品名:{data.name}</li>\n                    <li className=\"list-inline-item h5 mr-3\">価格:<span className=\"text-danger\">{data.price}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">注文数:{data.num}</li>\n                    <li className=\"list-inline-item h5 mr-3\">合計:<span className=\"text-danger\">{data.price *data.num}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">依頼加工:{data.process}</li>\n                    <li className=\"list-inline-item h5 mr-3\">受け取り時間:{timeSetting(data.receiving_time)}</li>\n                    <li className=\"list-inline-item text-white pt-2 pb-2 mr-3\">{ statusView(data.status) }</li>\n                  </ul>\n                \n                </Col>\n              </Row>\n            </li>\n          )) :   <div className=\"p-5 text-white text-center mt-5 bg-secondary font-weight-bold\">データがありません</div>}\n          </ul>\n        </Col>\n      </Row>\n      <br/>\n      <Reservation />\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(Order));\n/***************************************************************************************************** */","import { useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst itemLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst image={\n  width: '80px',\n  height: '80px'\n}\nconst imageShow={\n  width: '150px',\n  height: '150px'\n}\n\n\n function PcIndex(props){\n  let localData = JSON.parse(localStorage.getItem('items'))\n  let modalData = [];\n\n\n  /************************ステート*************************************** */\n  const[itemData, setState] = useState(\n    localData ? localData : []\n  )\n  /*--モーダル--*/\n  const [show, setShow] = useState({\n    status: false,\n    data: []\n  });\n\n  const handleClose = () => setShow({status: false, data: show.data});\n  \n  /*************APIによるitem一覧**********************************/\n  /*async function itemsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n         localStorage.removeItem('items');\n         setState(res.data);\n         localStorage.setItem('items', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(itemsCall()); */\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.editPage(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************削除********************************************* */\n  const deleteItem = (i)=>{\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/items/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n  }\n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processItem(item);\n    props.history.push('/items_process');\n  }\n  /*****************************モーダル開く********************************************** */\n  const openModal = (item)=>{\n    modalData.splice(0);\n    modalData.push(item);\n  \n    setShow({\n      status: true,\n      data: modalData\n    })\n  }\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\">商品一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Button \n            variant=\"primary\"\n            onClick={newPage}\n          >新規商品登録</Button>\n         \n          {itemData.length > 0 ?\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">画像</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">カテゴリー</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {itemData.map((item,i)=>(\n                  <tr>\n                    <td>\n                      <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </td>\n                    <td className=\"align-middle\">\n                      <button \n                         style={itemLink} \n                         onClick={(i)=>openModal(item)}\n                       >{item.name}</button>\n                    </td>\n                    <td className=\"text-right text-danger align-middle font-weight-bold\">{item.price}</td>\n                    <td className=\"align-middle\">{item.category}</td>\n                    <td className=\"align-middle\">\n                    <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(item)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                     <Button \n                        variant=\"primary\"\n                        onClick={(i)=>processItem(item)}\n                        className=\"ml-3\"\n                      >加工法管理</Button>\n                    \n                    <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteItem(item.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n               \n            </Table>\n            :\n            <div className=\"text-center bg-info text-white font-weight-bold p-5 mt-3\">\n              データを表示できません。\n            </div>\n            }\n        </Col>\n      </Row>\n      <Modal\n         show={show.status}\n         onHide={handleClose}\n         backdrop=\"static\"\n         keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"font-weight-bold\">\n             {show.data.length ===0? '' : `${show.data[0].name}詳細`}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table bordered>\n           <tbody>  \n             <tr>\n               <td colSpan=\"2\" className=\"text-center\">\n                <Image \n                  src={show.data.length ===0? '' : `http://yukiabineko.sakura.ne.jp/react/${show.data[0].name}.jpg`} \n                  alt=\"表示できません\" \n                  style={imageShow} \n                  rounded \n                />\n               </td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">商品名</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].name}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">価格</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].price}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">カテゴリー</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].category}</td>\n             </tr>\n             {show.data.length ===0? \n               '' \n                : \n               <tr>\n                 <th className=\"bg-primary text-white align-middle\">可能調理法</th>\n                 <td>\n                   {show.data[0].processes.map((process)=>(\n                     <td>{process}</td>\n                   ))}\n                 </td>\n               </tr>\n             }\n             <tr>\n               <th colSpan=\"2\" className=\"text-center bg-primary text-white\">商品説明</th>\n             </tr>\n             <tr>\n               <td colSpan=\"2\">{show.data.length ===0? '' : show.data[0].info}</td>\n             </tr>\n           </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst itemLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst image={\n  width: '80px',\n  height: '80px'\n}\nconst imageShow={\n  width: '150px',\n  height: '150px'\n}\nconst buttonWidth={\n  width: '31%'\n}\n\n\n function PcIndex(props){\n  let localData = JSON.parse(localStorage.getItem('items'))\n  let modalData = [];\n\n\n  /************************ステート*************************************** */\n  const[itemData, setState] = useState(\n    localData ? localData : []\n  )\n  /*--モーダル--*/\n  const [show, setShow] = useState({\n    status: false,\n    data: []\n  });\n\n  const handleClose = () => setShow({status: false, data: show.data});\n  \n  /*************APIによるitem一覧**********************************/\n  /*async function itemsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n         localStorage.removeItem('items');\n         setState(res.data);\n         localStorage.setItem('items', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(itemsCall());*/\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0 && props.itemData === null){\n        props.history.push('/login');  \n      }\n    }\n\n  useState(loginUserCheck());\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.editPage(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************削除********************************************* */\n  const deleteItem = (i)=>{\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/items/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n  }\n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processItem(item);\n    props.history.push('/items_process');\n  }\n  /*****************************モーダル開く********************************************** */\n  const openModal = (item)=>{\n    modalData.splice(0);\n    modalData.push(item);\n  \n    setShow({\n      status: true,\n      data: modalData\n    })\n  }\n  return(\n    <div className=\"w-100\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\">商品一覧</h2>\n      </div>\n      <div class=\"bg-white p-2\"></div>\n      <div className=\"bg-white w-100\">\n          <Button \n            className=\"mb-1\"\n            variant=\"primary\"\n            onClick={newPage}\n          >新規商品登録</Button>\n          <p>【商品一覧】</p>\n         \n          {itemData.length > 0 ?\n            <Table bordered hover>\n              <tbody>\n                {itemData.map((item,i)=>(\n                  <tr>\n                    <Table bordered>\n                      <tbody>\n                        <tr>\n                          <td>\n                            <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                          </td>\n\n                          <td colSpan=\"4\" className=\"align-middle\">\n                            <button \n                              style={itemLink} \n                              onClick={(i)=>openModal(item)}\n                            >商品名:{item.name}</button>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                          <td className=\"text-right text-danger align-middle font-weight-bold\">{item.price}</td>\n                          <th className=\"text-center align-middle bg-dark text-white\">分類</th>\n                          <td className=\"align-middle\">{item.category}</td>\n                        </tr>\n\n                        <tr>\n                          <td colSpan=\"4\" className=\"align-middle\">\n                            <Button \n                                style={buttonWidth}\n                                variant=\"primary\"\n                                onClick={(i)=>editPage(item)}\n                                \n                              >編集</Button>\n\n                            <Button \n                                style={buttonWidth}\n                                variant=\"primary\"\n                                onClick={(i)=>processItem(item)}\n                                className=\"ml-2 mr-2\"\n                              >加工法管理</Button>\n                            \n                            <Button \n                                style={buttonWidth}\n                                variant=\"danger\"\n                                onClick={(i)=>deleteItem(item.id)}\n                               \n                              >削除</Button>\n                          </td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                   \n                   \n                  </tr>\n                ))}\n              </tbody>\n               \n            </Table>\n            :\n            <div className=\"text-center bg-info text-white font-weight-bold p-5 mt-3\">\n              データを表示できません。\n            </div>\n            }\n      </div>\n      <Modal\n         show={show.status}\n         onHide={handleClose}\n         backdrop=\"static\"\n         keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"font-weight-bold\">\n             {show.data.length ===0? '' : `${show.data[0].name}詳細`}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table bordered>\n           <tbody>  \n             <tr>\n               <td colSpan=\"2\" className=\"text-center\">\n                <Image \n                  src={show.data.length ===0? '' : `http://yukiabineko.sakura.ne.jp/react/${show.data[0].name}.jpg`} \n                  alt=\"表示できません\" \n                  style={imageShow} \n                  rounded \n                />\n               </td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">商品名</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].name}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">価格</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].price}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">カテゴリー</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].category}</td>\n             </tr>\n             {show.data.length ===0? \n               '' \n                : \n               <tr>\n                 <th className=\"bg-primary text-white align-middle\">可能調理法</th>\n                 <td>\n                   {show.data[0].processes.map((process)=>(\n                     <td>{process}</td>\n                   ))}\n                 </td>\n               </tr>\n             }\n             <tr>\n               <th colSpan=\"2\" className=\"text-center bg-primary text-white\">商品説明</th>\n             </tr>\n             <tr>\n               <td colSpan=\"2\">{show.data.length ===0? '' : show.data[0].info}</td>\n             </tr>\n           </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\nimport MediaQuery from \"react-responsive\";\n\n\n function Index(props){\n\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n\n  useState(loginUserCheck());\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.itemEditIdget(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processIdget(item);\n    props.history.push('/items_process');\n  }\n  \n  return(\n    <div>\n      <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          editPage={(item)=>editPage(item)}\n          processItem ={(item)=>processItem (item)}\n        />\n      </MediaQuery>\n    \n    <MediaQuery maxDeviceWidth={767}>\n      <PhoneIndex \n          editPage={(item)=>editPage(item)}\n          processItem ={(item)=>processItem (item)}\n      />\n    </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[image, setImage] = useState({\n    file: null\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    price: '',\n    category: '',\n    info: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const indexComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const itemInput = (e)=>{\n   const target = e.target;\n   const name = target.name;\n   const value = target.value;\n   setState({...state, [name]: value})\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n      /* PHPへの送信 */\n      const params = new FormData();\n      params.append('file', image.file);\n      params.append('name', state.name);\n      axios.post('https://yukiabineko.sakura.ne.jp/send-react.php',\n      　　　　　　　params,\n                  {\n                    headers:{\n                      'content-type': 'multipart/form-data',\n                    },\n                  }\n      ).then((res)=>{\n          console.log(res.data);\n      }).catch(()=>{\n      })\n\n\n      /* rails側への送信*/\n      \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.post('https://uematsu-backend.herokuapp.com/items', data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n      setShow({display: 'none'});\n    }\n    setImage({\n      file: null\n    })\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規商品登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={indexComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendItemParameter}>\n            <Form.Group>\n              <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>カテゴリー</Form.Label>\n              <div class=\"balloon1\" style={show}>\n                <p>選択してください。</p>\n              </div>\n                <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                  <option value=\"\">選択してください  </option>\n                 {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                   <option key={i} value={value}>{value}</option>\n                 )}\n                </Form.Control>\n            </Form.Group>\n               \n            <Form.Group>\n              <Form.Label>商品説明</Form.Label>\n              <textarea \n                name=\"info\" \n                cols=\"30\" \n                rows=\"10\" \n                value={state.info}\n                onChange={itemInput}\n                className=\"form-control\">{state.info}</textarea>\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  ItemEdit = (props)=>{\n\n \n   let item = props.item;\n/*********************************state******************************************************* */\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[state, setState] = useState({\n    name: item.name,\n    price: item.price,\n    category: item.category,\n    info: item.info\n  })\n\n  const[image, setImage] = useState({\n    file: null\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\n\nuseState(loginUserCheck());\n\n\n  const homeComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const itemInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n       /* PHPへの送信 */\n       const params = new FormData();\n       params.append('file', image.file);\n       params.append('name', state.name);\n       axios.post('http://yukiabineko.sakura.ne.jp/send-react.php',\n       　　　　　　　params,\n                   {\n                     headers:{\n                       'content-type': 'multipart/form-data',\n                     },\n                   }\n       ).then((res)=>{\n           console.log(res.data);\n       }).catch(()=>{\n         alert('ERROR');\n       })\n\n       /* rails側への送信*/ \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/items/${props.item.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n        props.history.push('/items');\n      })\n      .catch(function(){\n        alert('error');\n      })\n      setShow({display: 'none'});\n    }\n    \n  }\n  return(\n    <>\n       <div className=\"text-center mt-5 mb-4\">\n         <h2 data-testid=\"userNewtitle\">{state.name}編集</h2>\n       </div>\n       <Row>\n         <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <Button \n           variant=\"secondary\" \n           onClick={homeComponent}\n           className=\"mb-3\"\n         >\n          戻る\n         </Button>\n           <Form onSubmit={sendItemParameter}>\n             <Form.Group>\n               <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n             </Form.Group>\n             <Form.Group>\n               <Form.Label>商品名</Form.Label>\n               <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>価格</Form.Label>\n               <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>カテゴリー</Form.Label>\n               <div class=\"balloon1\" style={show}>\n                 <p>選択してください。</p>\n               </div>\n                 <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                   <option value=\"\">選択してください  </option>\n                  {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                    <option key={i} value={value}>{value}</option>\n                  )}\n                 </Form.Control>\n             </Form.Group>\n                \n             <Form.Group>\n               <Form.Label>商品説明</Form.Label>\n               <textarea \n                 name=\"info\" \n                 cols=\"30\" \n                 rows=\"10\" \n                 value={state.info}\n                 onChange={itemInput}\n                 className=\"form-control\">{state.info}</textarea>\n             </Form.Group>\n \n               <Button \n                 type=\"submit\" \n                 variant=\"primary\" \n                 className=\"btn-block mt-4\">\n                   送信\n               </Button>\n           </Form>\n           \n         </Col>\n       </Row>\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(ItemEdit));\n/***************************************************************************************************** */","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Table, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { getOption } from './setItemData';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\n\nconst Process = (props)=>{\n/********************加工データ************************************************************** */\n  const getProcessData = ()=>{\n     axios\n        .get(`https://uematsu-backend.herokuapp.com/processings/${props.item.id}`)\n        .then((res)=>{\n           \n           localStorage.removeItem('process');\n           localStorage.setItem('process', JSON.stringify(res.data));\n           setProcess(res.data);\n        \n        })\n        .catch((error)=>{\n           console.log(error);\n        })\n     }\n\n/*************************ステートおよび各種セット************************************************ */\n   useEffect(()=>{\n     getProcessData();\n   })\n   let item = props.item;\n   let options = getOption();\n\n   const[process, setProcess] = useState([]);\n   const [selectedOption, setSelectedOption] = useState(null);\n/***********************加工データサーバー送信**************************************** */\n   const addProcess = (e)=>{\n     e.preventDefault();\n     let data = selectedOption;\n     let obj={};\n     obj[\"id\"] = props.item.id;\n     obj[\"data\"] = selectedOption;\n     axios.post('https://uematsu-backend.herokuapp.com/processings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n    \n   }\n   /******************************ログイン/未ログイン切り替え********************************************************** */\n   const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n  useEffect(()=>{\n    loginUserCheck();\n  })\n /****************************************削除加工法*************************************************************** */\n    const deleteProcess = (i,count)=>{\n      if(window.confirm('削除してよろしいですか？')){\n        axios\n          .delete(`https://uematsu-backend.herokuapp.com/processings/${i}`)\n          .then((response)=>{\n            alert(response.data.message); \n            let data = process.slice();\n            data.splice(count,1);\n            setProcess(data);\n          })\n          .catch((error)=>{\n            console.log(error);\n          })\n      }\n    }\n\n  return(\n   <>\n    <div className=\"text-center font-weight-bold h2 mt-5 mb-3\">{item.name}加工法管理画面</div>\n    <Row>\n      <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n      <Form onSubmit={addProcess}>\n        <Form.Group>\n          <Form.Label>加工法の登録</Form.Label>\n          <Select\n          　isMulti\n            defaultValue={selectedOption}\n            onChange={setSelectedOption}\n            options={options}\n          />\n        </Form.Group>\n        <Form.Control type=\"submit\" className=\"bg-primary text-white\"  value=\"追加\" />\n      </Form>\n      {process.length >0?\n       <>\n         <div className=\"text-center font-weight-bold mt-5\">登録加工法一覧</div>\n         <Table bordered>\n           <thead>\n             <tr>\n               <th className=\"text-white bg-dark text-center\">加工法</th>\n               <th className=\"text-white bg-dark text-center\"></th>\n             </tr>\n           </thead>\n           <tbody>\n             {process.map((data,count)=>(\n               <tr>\n                 <td className=\"text-center\">{data.processing_name}</td>\n                 <td>\n                   <Button\n                    variant=\"danger\"\n                    className=\"btn-block\"\n                    onClick={(i)=>deleteProcess(data.id, count)}\n                   >削除</Button>\n                 </td>\n               </tr>\n             ))}\n           </tbody>\n         </Table>\n       </>\n       : \n       <></>\n       }\n      </Col>\n    </Row>  \n\n\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Process))","\n export const getOption = ()=>{\n   return [\n    { value: '刺身', label: '刺身' },\n    { value: '切り身', label: '切り身' },\n    { value: '煮物用', label: '煮物用' },\n    { value: '塩焼き用', label: '塩焼き用' },\n    { value: 'フライ用', label: 'フライ用' },\n    { value: '刺身/切り身', label: '刺身/切り身' },\n   ];\n }","import { useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ordersSend } from '../store/Store';\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function orderCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/orders')\n       .then((res)=>{\n          localStorage.setItem('orders', JSON.stringify(res.data));\n          let action = ordersSend(res.data);\n          props.dispatch(action);\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('orders')) \n      })\n      \n  }\n    useState(orderCall());*/\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editPage(id);\n     props.history.push(\"/orders_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteOrder(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/orders/${i}`)\n       .then((response)=>{\n        /*削除後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            let orders = state.data.slice();\n            orders.splice(0);\n            res.data.forEach((order) => {\n              orders.push(order)\n            });\n            setState({\n              data: orders\n            })\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n         alert(response.data.message); \n         \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   /****************************商品全リセット*********************************************** */\n   function ResetOrder(){\n    if(window.confirm('リセットしてよろしいですか？')){\n      axios\n       .get('https://uematsu-backend.herokuapp.com/orders/deleteAll')\n       .then((response)=>{\n        localStorage.removeItem('orders');\n        /*削除後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            setState({\n              data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n            })\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    }\n   }\n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">店頭商品一覧</h2>\n      </div>\n      <Row>\n\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Button \n            variant=\"primary\"\n            onClick={()=>props.history.push('orders_new')}\n            className=\"mr-2\"\n          >店頭商品追加</Button>\n           {/*状況によりリセットボタン*/}\n\n          {state.data.length >0? \n            <Button \n              variant=\"danger\"\n              onClick={ResetOrder}\n             >リセット</Button>\n             : \n             ''\n            }\n          {/*テーブル*/}\n\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">合計金額</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">在庫</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {state.data.map((value)=>(\n                  <tr key={value.name}>\n                    <td className=\"text-center align-middle\">{value.name}</td>\n                    <td  className=\"text-center align-middle\">{value.price}</td>\n                    <td  className=\"text-center align-middle\">{Number(value.price) * Number(value.stock)}</td>\n                    <td  className=\"text-center align-middle\">{value.stock}</td>\n                    <td>\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteOrder(value.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div className=\"bg-secondary p-5 text-center text-white font-weight-bold mt-1\">データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import { useState } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ordersSend } from '../store/Store';\n\nconst buttonWidth ={\n  width: '48%',\n  margin: '0',\n  marginRight:'2%'\n}\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function orderCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/orders')\n       .then((res)=>{\n          localStorage.setItem('orders', JSON.stringify(res.data));\n          let action = ordersSend(res.data);\n          props.dispatch(action);\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('orders'))\n      })\n  }\n    useState(orderCall());*/\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.orderEditIdget(id);\n     props.history.push(\"/orders_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteOrder(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/orders/${i}`)\n       .then((response)=>{\n          /*削除後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            setState({\n              data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n            })\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   /****************************商品全リセット*********************************************** */\n   function ResetOrder(){\n    if(window.confirm('リセットしてよろしいですか？')){\n      axios\n       .get('https://uematsu-backend.herokuapp.com/orders/deleteAll')\n       .then((response)=>{\n        localStorage.removeItem('orders');\n           /*削除後更新*/\n           axios\n           .get('https://uematsu-backend.herokuapp.com/orders')\n           .then((res)=>{\n               localStorage.setItem('orders', JSON.stringify(res.data));\n               let action = ordersSend(res.data);\n               props.dispatch(action);\n               setState({\n                 data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n               })\n               \n           })\n           .catch((error)=>{\n               console.log(error);\n           })\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    }\n   }\n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">店頭商品一覧</h2>\n      </div>\n      <div className=\"p-2 bg-white\"></div>\n      <div className=\"w-100 bg-white\">\n          <Button \n            variant=\"primary\"\n            onClick={()=>props.history.push('orders_new')}\n            className=\"mr-2\"\n          >店頭商品追加</Button>\n           {/*状況によりリセットボタン*/}\n\n          {state.data.length >0? \n            <Button \n              variant=\"danger\"\n              onClick={ResetOrder}\n             >リセット</Button>\n             : \n             ''\n            }\n          {/*テーブル*/}\n\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover mt-3>\n              <tbody>\n                {state.data.map((value)=>(\n                  <tr key={value.name}>\n                     <Table bordered>\n                        <tbody>\n                          <tr>\n                            <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                            <td colSpan=\"3\" className=\"text-center align-middle\">{value.name}</td>\n                          </tr>\n\n                          <tr>\n                            <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                            <td className=\"text-center align-middle\">{value.price}</td>\n                            <th className=\"text-center align-middle bg-dark text-white\">在庫</th>\n                            <td className=\"text-center align-middle\">{value.stock}</td>\n                            \n                          </tr>\n                          <tr>\n                            <th className=\"text-center align-middle bg-dark text-white\">合計金額</th>\n                            <td colSpan=\"3\" className=\"text-center align-middle\">{Number(value.price) * Number(value.stock)}</td>\n                          </tr>\n\n                          <tr>\n                            <td colSpan=\"4\">\n                              <Button \n                                variant=\"primary\"\n                                onClick={(i)=>editPage(value.id)}\n                                style={buttonWidth}\n                              >編集</Button>\n\n                              <Button \n                                variant=\"danger\"\n                                onClick={(i)=>deleteOrder(value.id)}\n                                style={buttonWidth}\n                              >削除</Button>\n                            </td>\n                          </tr>\n                        </tbody>\n                     </Table>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div className=\"bg-secondary p-5 text-center text-white font-weight-bold mt-1\">データなし</div>\n            }\n      </div>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\nimport MediaQuery from \"react-responsive\";\n\n function Index(props){\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.orderEditIdget(id);\n     props.history.push(\"/orders_edit\");\n   } \n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          editPage={(i)=>editPage(i)}\n        />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex \n          editPage={(i)=>editPage(i)} \n        />\n      </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.browser.cjs';\nimport { formSelectItems } from './setItem';\nimport { connect } from 'react-redux';\nimport {  ordersSend } from '../store/Store';\n\nconst  New = (props)=>{\n  const[state, setState] = useState({\n    price: '',\n    stock: ''\n  });\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = formSelectItems();\n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const backIndex = ()=>{\n    props.history.push('/orders');\n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name: selectedOption.value, price: state.price, stock: state.stock};\n    axios.post('https://uematsu-backend.herokuapp.com/orders', sendData)\n      .then(function (response) {\n        /*追加後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n      /*props.history.push('/orders');*/\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">店頭商品追加</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={backIndex}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Select\n                options={options}\n                defaultvalue={selectedOption}\n                onChange={setSelectedOption}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import axios from 'axios';\n\nexport const formSelectItems = ()=>{\n  const itemData =JSON.parse(localStorage.getItem('items'));\n  if(!itemData){\n    axios\n    .get('https://uematsu-backend.herokuapp.com/items')\n    .then((res)=>{\n       localStorage.removeItem('items');\n       localStorage.setItem('items', JSON.stringify(res.data));\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n  }\n  let options = [];\n  itemData.forEach(item=>{\n    options.push({value: item.name, label: item.name});\n  })\n  return options;\n  \n}","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport {  ordersSend } from '../store/Store';\n\n/**************************************************************************************** */\nconst  OrderEdit = (props)=>{\n\n const getitemData = ()=>{\n  let orders = []\n  let datas = JSON.parse(localStorage.getItem('orders'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     orders.push(data);\n    }\n  });\n  return orders\n }\n let orders = getitemData();\n \n\n/*********************************state******************************************************* */\n  \n  const[state, setState] = useState({\n    name: orders.length>0? orders[0].name : [],\n    price:orders.length>0? orders[0].price :[],\n    stock: orders.length>0? orders[0].stock : []\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  const homeComponent = ()=>{\n    props.history.push('/orders')  \n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name:state.name, price: state.price, stock: state.stock};\n    axios.patch(`https://uematsu-backend.herokuapp.com/orders/${props.id}`, sendData)\n      .then(function (response) {\n           /*編集後更新*/\n           axios\n           .get('https://uematsu-backend.herokuapp.com/orders')\n           .then((res)=>{\n               localStorage.setItem('orders', JSON.stringify(res.data));\n               let action = ordersSend(res.data);\n               props.dispatch(action);\n               props.history.push('/orders');\n               setState({\n                 data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n               })\n               \n           })\n           .catch((error)=>{\n               console.log(error);\n           })\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n  \n  }\n  \n  return(\n    <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">{orders.length>0? orders[0].name : ''}編集</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={homeComponent}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <div className=\"font-weight-bold\">{state.name}</div>\n              <Form.Control \n                type=\"hidden\"\n                name=\"name\"\n                value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n   )\n}\nexport default withRouter(connect(state=>state)(OrderEdit));\n/***************************************************************************************************** */","export default __webpack_public_path__ + \"static/media/fishs2.d6a1f15c.jpg\";","import { useEffect, useState } from 'react';\nimport { Image, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport { connect } from 'react-redux';\nimport image from '../images/fishs2.jpg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart } from '../store/Store';\n\n\nconst rightAreaTable={\n  height: '200px',\n  overflow: 'scroll'\n}\n\nconst nameTitle={\n  background: '#136FFF',\n  padding: '5px',\n  color:'white',\n  border:'1px solid #f0f0f0',\n  maxWidth: '100%',\n  margin: '0'\n}\nconst buycheck={\n  padding: '5px 0',\n  background: 'brown',\n  color:'white',\n  fontSize:'16px',\n  textAlign: 'center',\n  borderLeft:'6px solid #c0c0c0'\n\n}\nconst buttonHeight={\n  height:'100px'\n}\n\n function PcIndex(props){\n  let localData = null;\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id == data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n\n  /***********************ステート*************************************** */\n  const[itemData, setState] = useState(\n    props.orderItem? props.orderItem : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n/*******************************************買い物ボタン*********************************************************************** */\n  const buyItem = (item)=>{\n    props.sendCustomerData(item);\n    props.history.push('/customor_show');\n  }\n/*******************************************買い物カゴアイテム削除*********************************************************************** */\nconst deleteCartItem = (index)=>{\n  let action = cartDeleteCart(index);\n  props.dispatch(action);\n}\n/********************************************買い物カゴ合計金額*************************************************************************************** */\n const itemTotalMoney = ()=>{\n   let total = 0;\n   props.buyCarts.map((data)=>{\n     total += Number(data.price) * Number(data.num);\n   })\n   return total;\n }\n /********************************************に買い物確認情報送信*************************************************************************************** */\n const sendShoppingData =()=>{\n   props.sendCartItemToConfirm(itemData);\n   props.history.push('/customer_confirm');\n }\n  return(\n    <div >\n      <img src={image} alt=\"画像\" className=\"costomer-imag\"/>\n       <div className=\"customor-main\">\n    　　　<h1 className=\"customor-main-title\">本日入荷商品紹介</h1>\n         <article>\n           <section class=\"gallery\">\n             {itemData.length>0? <h2 className=\"customer-article-title\">商品紹介</h2> : <div className=\"bg-secondary text-center text-white p-5 font-weight-bold\">ただいま入荷商品がありません。</div>}\n             {itemData.length > 0 ? \n               <ul>\n                 {itemData.map((item)=>(\n                   <li>\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" roundedCircle /><br/>\n                       <ul>\n                         <li style={nameTitle}>{`商品名${item.name}`}</li>\n                         <li style={nameTitle}>\n                           価格&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.price}</span>円\n                         </li>\n                         <li style={nameTitle}>\n                           在庫&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.stock}</span>(尾/個)\n                         </li>\n                         <li style={nameTitle} className=\"bg-white\">\n                           {props.userData.length>0 && props.userData[0].admin? \n                             '' \n                             : \n                             Number(item.stock) > 0? \n                              <button \n                                className=\"btn btn-success btn-block\"\n                                onClick={()=>buyItem(item)}\n                              >\n                               <FontAwesomeIcon icon={faCartPlus}  />買い物する\n                              </button>\n                             : \n                             <span className=\"text-danger font-weight-bold\">売り切れ</span>\n                           }\n                         </li>\n                       </ul>\n                     \n                   </li>\n                 ))}\n               </ul>\n                :\n               ''\n              }\n            \n           </section>\n\n         </article>\n\n         {props.userData.length>0 && props.userData[0].admin? \n            <div className=\"customor-right\">\n              <h5 style={buycheck}>管理者表示</h5>\n              <div className=\"p-3 bg-lignt font-weight-bold\">管理者のため表示されません</div>\n            </div>\n            : \n            <div className=\"customor-right\">\n            <h5 style={buycheck}>買い物確認</h5>\n             <p className=\"font-weight-bold text-center\">{props.userData.length>0? props.userData[0].name : ''}さん</p>\n             <p className=\"font-weight-bold bg-light p-2\">買い物点数&emsp;<span className=\"text-danger\">{props.buyCarts.length}</span>件</p>\n             \n             {props.buyCarts.length >0 ? \n              <div style={ rightAreaTable}>\n               <Table bordered>\n                 <thead className=\"bg-primary text-white\">\n                   <th>商品名</th>\n                   <th>個数</th>\n                   \n                 </thead>\n                 <tbody>\n                   {props.buyCarts.map((data,index)=>(\n                     <tr>\n                       <td className=\"align-middle text-center\">\n                         {data.name}<br/>\n                         ({data.process})\n                      </td>\n                       <td className=\"text-center\">\n                         {data.num}<br/>\n                         {/*<button\n                          className=\"btn btn-danger\"\n                          onClick={()=>deleteCartItem(index)}\n                         >削除</button>*/}\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </Table>\n               </div>\n               : \n               ''\n             }\n           \n             <p className=\"m-0\">合計金額</p>\n             <p className=\"font-weight-bold bg-dark p-2 text-white text-right\">{itemTotalMoney()}</p>\n             {props.buyCarts.length >0? \n               <button \n                 className=\"btn btn-primary btn-block font-weight-bold\" \n                 onClick={sendShoppingData}\n                 style={buttonHeight}>\n                 <FontAwesomeIcon icon={faCashRegister} />\n                   &nbsp;買い物確認\n              </button>\n               : \n               ''\n             }\n          </div>\n          }\n       \n      </div>\n      <div className=\"hidden-div\"></div> \n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","/*******************index*********************************************** */\n/*ヘッダー画像*/\nexport const HeaderImagePhone ={\n   width: '100%'\n}\n\n/*商品ページ画像エリア全体*/\n\nexport const ArticlePhone={\n  width:'100%',\n  maxWidth: '100%',\n  background: '#fff',\n  marginBottom: \"10%\"\n}\n\n/*画像ul*/\n\nexport const UlPhone={\n  listStyle: 'none',\n  margin: '0',\n  width: '100%',\n  marginBottom: '4%'\n}\n\n/*画像ll*/\n\nexport const LlPhone={\n  width: '100%',\n  maxWidth: '100%',\n  margin: '5% -15%'\n}\n/*買い物カゴエリア全体 */\nexport const phoneBuyCartMain = {\n  background: \"#f0f0f0\",\n  marginTop: \"5%\",\n  margimBottom: \"2%\",\n  padding: \"5% 0\"\n\n}\n/*******************confirm*********************************************** */","import { useEffect, useState } from 'react';\nimport { Image, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport image from '../images/fishs2.jpg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart } from '../store/Store';\nimport { HeaderImagePhone,ArticlePhone, UlPhone, LlPhone, phoneBuyCartMain } from './phoneStyle';\n\nconst style={\n  width:'980px'\n}\n\nconst rightAreaTable={\n  height: '200px',\n  overflow: 'scroll'\n}\n\nconst nameTitle={\n  background: '#136FFF',\n  padding: '5px',\n  color:'white',\n  border:'1px solid #f0f0f0',\n  maxWidth: '100%',\n  margin: '0',\n  width: '100%'\n}\nconst buycheck={\n  padding: '5px 0 25px 0',\n  background: 'brown',\n  color:'white',\n  fontSize:'16px',\n  textAlign: 'center',\n  borderLeft:'6px solid #c0c0c0'\n\n}\nconst buttonHeight={\n  height:'100px'\n}\n\n function PhoneIndex(props){\n  let localData = null;\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id == data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n\n  /***********************ステート*************************************** */\n  const[itemData, setState] = useState(\n    props.orderItem? props.orderItem : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n/*******************************************買い物ボタン*********************************************************************** */\n  const buyItem = (item)=>{\n    props.sendCustomerData(item);\n    props.history.push('/phone_customor_show');\n  }\n/*******************************************買い物カゴアイテム削除*********************************************************************** */\nconst deleteCartItem = (index)=>{\n  let action = cartDeleteCart(index);\n  props.dispatch(action);\n}\n/********************************************買い物カゴ合計金額*************************************************************************************** */\n const itemTotalMoney = ()=>{\n   let total = 0;\n   props.buyCarts.map((data)=>{\n     total += Number(data.price) * Number(data.num);\n   })\n   return total;\n }\n /********************************************に買い物確認情報送信*************************************************************************************** */\n const sendShoppingData =()=>{\n   props.sendCartItemToConfirm(itemData);\n   props.history.push('/phone_customer_confirm');\n }\n  return(\n    <div>\n      <img src={image} alt=\"画像\" style={HeaderImagePhone} />\n       <div style={HeaderImagePhone} className=\"text-center\">\n    　　　<h4>本日入荷商品紹介</h4>\n         <article style={ArticlePhone}>\n           <section>\n             {itemData.length>0? <h2 className=\"customer-article-title\">商品紹介</h2> : <div className=\"bg-secondary text-center text-white p-5 font-weight-bold\">ただいま入荷商品がありません。</div>}\n             {itemData.length > 0 ? \n               <ul style={UlPhone}>\n                 {itemData.map((item)=>(\n                   <li style={LlPhone}>\n                       <Image style={HeaderImagePhone} src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" roundedCircle /><br/>\n                       <ul style={UlPhone}>\n                         <li style={nameTitle}>{`商品名${item.name}`}</li>\n                         <li style={nameTitle}>\n                           価格&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.price}</span>円\n                         </li>\n                         <li style={nameTitle}>\n                           在庫&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.stock}</span>(尾/個)\n                         </li>\n                         <li style={nameTitle} className=\"bg-white\">\n                           {props.userData.length>0 && props.userData[0].admin? \n                             '' \n                             : \n                             Number(item.stock) > 0? \n                              <button \n                                className=\"btn btn-success btn-block\"\n                                onClick={()=>buyItem(item)}\n                              >\n                               <FontAwesomeIcon icon={faCartPlus}  />買い物する\n                              </button>\n                             : \n                             <span className=\"text-danger font-weight-bold\">売り切れ</span>\n                           }\n                         </li>\n                       </ul>\n                     \n                   </li>\n                 ))}\n               </ul>\n                :\n               ''\n              }\n            \n           </section>\n\n         </article>\n\n         {props.userData.length>0 && props.userData[0].admin? \n            <div style={phoneBuyCartMain}>\n              <h5 style={buycheck}>管理者表示</h5>\n              <div className=\"p-3 bg-lignt font-weight-bold\">管理者のため表示されません</div>\n            </div>\n            : \n            <div style={phoneBuyCartMain}>\n            <h5 style={buycheck}>買い物確認</h5>\n             <p className=\"font-weight-bold text-center\">{props.userData.length>0? props.userData[0].name : ''}さん</p>\n             <p className=\"font-weight-bold bg-light p-2\">買い物点数&emsp;<span className=\"text-danger\">{props.buyCarts.length}</span>件</p>\n             \n             {props.buyCarts.length >0 ? \n              <div style={ rightAreaTable}>\n               <Table bordered>\n                 <thead className=\"bg-primary text-white\">\n                   <th>商品名</th>\n                   <th>個数</th>\n                   \n                 </thead>\n                 <tbody>\n                   {props.buyCarts.map((data,index)=>(\n                     <tr>\n                       <td className=\"align-middle text-center\">\n                         {data.name}<br/>\n                         ({data.process})\n                      </td>\n                       <td className=\"text-center\">\n                         {data.num}<br/>\n                         {/*<button\n                          className=\"btn btn-danger\"\n                          onClick={()=>deleteCartItem(index)}\n                         >削除</button>*/}\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </Table>\n               </div>\n               : \n               ''\n             }\n           \n             <p className=\"m-0\">合計金額</p>\n             <p className=\"font-weight-bold bg-dark p-2 text-white text-right\">{itemTotalMoney()}</p>\n             {props.buyCarts.length >0? \n               <button \n                 className=\"btn btn-primary btn-block font-weight-bold\" \n                 onClick={sendShoppingData}\n                 style={buttonHeight}>\n                 <FontAwesomeIcon icon={faCashRegister} />\n                   &nbsp;買い物確認\n              </button>\n               : \n               ''\n             }\n          </div>\n          }\n         \n      </div>\n\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneIndex))","import { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport MediaQuery from \"react-responsive\";\nimport { connect } from 'react-redux';\nimport PcIndex from './PCIndex';\nimport PhoneIndex from './PhoneIndex';\n\n function Index(props){\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id === data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n  return(\n    <div>\n    <MediaQuery minDeviceWidth={767}>\n      <PcIndex \n        sendCustomerData={props.sendCustomerData}  \n        sendCartItemToConfirm={props.sendCartItemToConfirm}\n        fixItemData={props.fixItemData}\n      />\n    </MediaQuery>\n    \n    <MediaQuery maxDeviceWidth={767}>\n      <PhoneIndex \n          sendCustomerData={props.sendCustomerData}  \n          sendCartItemToConfirm={props.sendCartItemToConfirm}\n          fixItemData={props.fixItemData}\n      />\n    </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","\n/*買い物かごで同一商品が含まれているのかをチェック あればaddされない*/\n\nimport { data } from \"jquery\";\n\nexport const sameItemCheck = (datas, name, process)=>{\n  let sameItemCount = 0;\n  datas.map((data)=>{\n    if((data.name === name) && (data.process === process)){\n        sameItemCount ++ ;\n    }\n  });\n  if(sameItemCount >0){\n      return true;\n  }\n  else{\n      return false;\n  }\n}\n\n/*セレクト時商品選択されていないかチェック*/\n\nexport const selectItemCheck = (name)=>{\n   if(name === '--加工法を選択してください--' || name === ''){\n        return false\n   }\n   else{\n       return true;\n   }\n}\n\n/*セレクト時ローカルストレージ在庫更新*/\n\nexport const localstorageChange = (name,stock, datas)=>{\n  \n  datas.map((data)=>{\n    if(data.name === name){\n      data.stock = stock;\n    }\n  });\n return datas;\n}\n\n/*注文確認ボタンにて削除ボタン押し下時に大元propsの在庫反映*/\n\nexport const pushDeleteButtonTolocalData = (name,orderNumber,datas)=>{\n  datas.map((data)=>{\n    if(data.name === name){\n      let localnum = Number(data.stock);\n      localnum += Number(orderNumber);\n      data.stock = localnum;\n    }\n  });\n  \n}","import React, { useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { cartsAdd } from '../store/Store';\nimport { sameItemCheck,  selectItemCheck } from './setting';\n\nconst table ={\n  width: '100%',\n  border: '1px solid #c0c0c0'\n}\nconst select={\n  width:'30%',\n  height:'40px'\n}\n\n/**************************************************************************************** */\n\nconst  Show = (props)=>{\n  const[state, setState] = useState({\n    number: null,\n    process: '',\n    time: null,\n    total: props.itemData? props.itemData.price : 0\n  })\n  const stockOption = ()=>{\n    let array = []\n    for(let i=0; i<=Number(props.itemData.stock); i++){\n       array.push(i)\n    }\n    return array\n  }\n  /******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n /********************************カテゴリーの配列化************************************************** */\n const categoryArray = ()=>{\n   return  props.itemData.process.split(',')\n }\n /********************************注文数変更************************************************** */\n const numberChange = (e)=>{\n   setState({\n     number: e.target.value,\n     process: state.process, \n     time: state.time,\n     total:  Number(props.itemData.price) * Number(e.target.value)\n   })\n}\n/********************************加工方法変更************************************************** */\nconst processChange = (e)=>{\n  setState({\n    number: state.number,\n    process: e.target.value,\n    time: state.time,\n    total:  state.total\n  })\n}\n/********************************受け取り時間************************************************** */\nconst timeChange = (e)=>{\n  setState({\n    number: state.number,\n    process: state.process,\n    time: e.target.value,\n    total:  state.total\n  })\n}\n/********************************サブミット************************************************** */\n\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let propData = props.itemData;\n    \n    let check = sameItemCheck(props.buyCarts, propData.name, state.process);\n    let stock = Number(props.itemData.stock);\n    let minusNumber = Number(state.number);\n    if(minusNumber > 0 &&  selectItemCheck(state.process)){\n      if(!check){\n        stock -= minusNumber;\n        propData.stock = stock;\n        props.changeItemData(propData);\n        let action = cartsAdd({name: propData.name, num: state.number, price: propData.price, process:　state.process, time: state.time});\n        props.dispatch(action);\n        props.history.push('/customor/index');\n      }\n      else{\n        alert('すでに注文しています。');\n      }\n    }\n    else if(minusNumber ===0){\n      alert('数量を入力してください。');\n    }\n    else if(! selectItemCheck(state.process)){\n      alert('加工法を選択してください。');\n    }\n    else{\n      alert('数量もしくは加工法が未入力です。');\n    }\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n   {props.itemData? \n     <>\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-info\">{props.itemData.name}注文</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n            <form onSubmit={doSubmit} className=\"W-100\">\n             <Table  style={table}>\n               <thead>\n                 <th className=\"bg-dark text-center text-white\">商品名</th>\n                 <th className=\"bg-dark text-center text-white\">価格</th>\n                 <th className=\"bg-dark text-center text-white\">買い上げ数</th>\n                 <th className=\"bg-dark text-center text-white\">加工法</th>\n                 <th className=\"bg-dark text-center text-white\">受け取り時間</th>\n                 <th className=\"bg-dark text-center text-white\">合計金額</th>\n               </thead>\n               <tbody>\n                 <tr>\n                   <td className=\"font-weight-bold text-center align-middle\">{props.itemData.name}</td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{props.itemData.price}</td>\n                   <td className=\"font-weight-bold text-center\">\n                     <select className=\"form-control\" onChange={numberChange}>\n                       {stockOption().map((num)=>(\n                         <option>{num}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle\">\n                   <select className=\"form-control\" onChange={processChange}>\n                       <option value=\"\">--加工法を選択してください--</option>\n                       {categoryArray().map((process)=>(\n                         <option>{process}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td>\n                     <input \n                        type=\"time\" \n                        value={state.time}  \n                        className=\"form-control\"\n                        onChange={timeChange}\n                     />\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{state.total}</td>\n                 </tr>\n               </tbody>\n             </Table>\n              <div className=\"text-left\">\n                <input type=\"submit\" value=\"追加\"　className=\"btn btn-primary btn-lg\" />\n              </div>\n             </form>\n        </Col>    \n      </Row>\n     </>\n     : \n     ''\n     }\n      \n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { cartsAdd } from '../store/Store';\nimport { sameItemCheck,  selectItemCheck } from './setting';\n\nconst table ={\n  width: '100%',\n  border: '1px solid #c0c0c0'\n}\nconst select={\n  width:'30%',\n  height:'40px'\n}\n\n/**************************************************************************************** */\n\nconst  Show = (props)=>{\n  const[state, setState] = useState({\n    number: null,\n    process: '',\n    time: null,\n    total: props.itemData? props.itemData.price : 0\n  })\n  const stockOption = ()=>{\n    let array = []\n    for(let i=0; i<=Number(props.itemData.stock); i++){\n       array.push(i)\n    }\n    return array\n  }\n  /******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n /********************************カテゴリーの配列化************************************************** */\n const categoryArray = ()=>{\n   return  props.itemData.process.split(',')\n }\n /********************************注文数変更************************************************** */\n const numberChange = (e)=>{\n   setState({\n     number: e.target.value,\n     process: state.process, \n     time: state.time,\n     total:  Number(props.itemData.price) * Number(e.target.value)\n   })\n}\n/********************************加工方法変更************************************************** */\nconst processChange = (e)=>{\n  setState({\n    number: state.number,\n    process: e.target.value,\n    time: state.time,\n    total:  state.total\n  })\n}\n/********************************受け取り時間************************************************** */\nconst timeChange = (e)=>{\n  setState({\n    number: state.number,\n    process: state.process,\n    time: e.target.value,\n    total:  state.total\n  })\n}\n/********************************サブミット************************************************** */\n\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let propData = props.itemData;\n    \n    let check = sameItemCheck(props.buyCarts, propData.name, state.process);\n    let stock = Number(props.itemData.stock);\n    let minusNumber = Number(state.number);\n    if(minusNumber > 0 &&  selectItemCheck(state.process)){\n      if(!check){\n        stock -= minusNumber;\n        propData.stock = stock;\n        props.changeItemData(propData);\n        let action = cartsAdd({name: propData.name, num: state.number, price: propData.price, process:　state.process, time: state.time});\n        props.dispatch(action);\n        props.history.push('/customor/index');\n      }\n      else{\n        alert('すでに注文しています。');\n      }\n    }\n    else if(minusNumber ===0){\n      alert('数量を入力してください。');\n    }\n    else if(! selectItemCheck(state.process)){\n      alert('加工法を選択してください。');\n    }\n    else{\n      alert('数量もしくは加工法が未入力です。');\n    }\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <div className=\"w-100\">\n   {props.itemData? \n     <>\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-info\">{props.itemData.name}注文</h2>\n      </div>\n      <div className=\"w-100 bg-white\">\n            <form onSubmit={doSubmit} className=\"W-100\">\n             <Table  style={table}>\n               <tbody>\n                 <tr>\n                   <Table bordered style={table}>\n                     <tbody>\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">商品名</th>\n                        <td className=\"font-weight-bold text-center align-middle\">{props.itemData.name}</td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">価格</th>\n                        <td className=\"font-weight-bold text-center align-middle text-danger\">{props.itemData.price}</td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">買い上げ数</th>\n                        <td className=\"font-weight-bold text-center\">\n                          <select className=\"form-control\" onChange={numberChange}>\n                            {stockOption().map((num)=>(\n                              <option>{num}</option>\n                            ))}\n                          </select>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">加工法</th>\n                        <td className=\"font-weight-bold text-center align-middle\">\n                          <select className=\"form-control\" onChange={processChange}>\n                              <option value=\"\">--加工法を選択してください--</option>\n                              {categoryArray().map((process)=>(\n                                <option>{process}</option>\n                              ))}\n                            </select>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">受け取り時間</th>\n                        <td>\n                          <input \n                              type=\"time\" \n                              value={state.time}  \n                              className=\"form-control\"\n                              onChange={timeChange}\n                          />\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">合計金額</th>\n                        <td className=\"font-weight-bold text-center align-middle text-danger\">{state.total}</td>\n                      </tr>\n                     \n                     </tbody>\n                   </Table>\n                 </tr>\n               </tbody>\n             </Table>\n              <div className=\"text-left\">\n                <input type=\"submit\" value=\"追加\"　className=\"btn btn-primary btn-lg btn-block\" />\n              </div>\n             </form>\n      </div>\n     </>\n     : \n     ''\n     }\n      \n   </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","\nimport '../App.css'\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\n\nconst NoData = ()=>{\n  return(\n    <div className=\"p-5 bg-secondary text-center font-weight-bold text-white mt-4 \">注文商品はありません。</div>\n  )\n}\nexport default NoData;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport { cartEmpty, cartUpdate, ordersStockChange } from '../store/Store';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faFish, faYenSign, faCalculator, faUtensils, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart, sendLoginData, ordersSend} from '../store/Store';\nimport Empty from './NoData';\nimport { localstorageChange } from './setting';\n\nconst title={\n  fontFamily: 'ヒラギノ明朝',\n  color: '#0000CD',\n  fontWeight: 'bold',\n  marginTop: '8%'\n}\nconst span ={\n  color: '#6927FF',\n  marginRight: '20px'\n}\nconst th={\n  background: '#8EB8FF',\n  color: '#eee',\n  textAlign: 'center'\n}\n\n/**************************************************************************************** */\n\nconst  Confirm = (props)=>{\n \n/*カートの商品の数量のみ配列化 */\n\nconst cartNum = ()=>{\n  let array = [];\n  props.buyCarts.forEach((data) => {\n    array.push(Number(data.num));\n  });\n  return array;\n}\n \n/***************************** ステート管理 ************************************************************** */\nconst[state, setState] = useState(props.orderData); /* 全体の在庫*/\nconst[num, setNumber] = useState(cartNum());  /* 現在の注文数ステータス */\n\n\n/***************************** セレクトの数量表示 ************************************************************** */\nconst selectNumber =(number)=>{\n  let array = [];\n  for(let i=0; i<= Number(number); i++){\n    array.push(i);\n  }\n  return array;\n}\n/***********************サーバー送信注文確定***************************************************************** */\nconst sendServer = ()=>{\n    let result = window.confirm('注文を確定してよろしいですか？');\n    if(result){\n      const params = new FormData();\n    params.append('email', props.userData[0].email);\n    params.append('name', props.userData[0].name);\n\n     /* PHP送信　*/\n    axios.post('http://yukiabineko.sakura.ne.jp/mail.php',\n　　　 params,\n      {\n        headers:{\n          'content-type': 'multipart/form-data',\n        },\n      }\n    ).then((res)=>{\n        console.log(res.data);\n    }).catch(()=>{\n    })\n\n\n  let sendData = props.buyCarts;\n   let obj = {}\n   obj['id'] = props.userData[0].id;\n   obj['data'] = sendData\n\n   /* rails送信　*/\n   axios.post('https://uematsu-backend.herokuapp.com/shoppings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n\n        alert(response.data.message); \n        axios.get(`https://uematsu-backend.herokuapp.com/users/${props.userData[0].id}`).then(function(response){\n           let action = sendLoginData (response.data);\n           props.dispatch(action);\n\n        }).catch(function(err){\n         console.log(err);\n        });\n      })\n      .catch(function(){\n        alert('error');\n      }) \n    \n    props.history.push('/customor');  /*ユーザーページへ移動*/\n    props.dispatch(cartEmpty());  /*買い物カゴリセット*/\n\n    }\n    \n  }\n  /**********************************商品アイテム削除************************************************************************************************ */\n  const deleteItem = (index, name, n)=>{\n    let action = cartDeleteCart(index);\n    props.dispatch(action);\n    \n    let action2 = ordersStockChange(name, n);\n    props.dispatch(action2);\n\n\n    /*選択数ステートも更新*/\n    let number = num.slice();\n    number.splice(index, 1);\n    \n\n    setNumber(number);\n    \n    \n\n  }\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n    loginUserCheck();\n    })\n/******************************セレクト切り替え********************************************************** */\nconst doSelect = (e)=>{\n  let currentNumber = Number(num[Number(e.target.name)]);\n  let changeNumber = Number(e.target.value);\n  let calcNumber = changeNumber - currentNumber;\n  let cartItemName = props.buyCarts[Number(e.target.name)].name;\n  let stateData = state.slice();\n  \n\n  stateData.forEach((data,i)=>{\n    let dataNumber = Number(data.stock);\n    \n    if(data.name === cartItemName){   /*セレクトの商品と全商品検証*/\n      /*増やしたか？　減らしたか? */\n      \n      if(calcNumber > 0){\n         stateData[i].stock = dataNumber - calcNumber;  /*数量増やした場合全体在庫減る*/\n          /*大元のストレージも変更*/\n          let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n          let changePropDatas = propOrders;\n        \n          let action = ordersSend(changePropDatas);\n          props.dispatch(action);\n         \n      }\n      else if(calcNumber <0){\n        stateData[i].stock = dataNumber + (currentNumber - changeNumber); /*数量増やした場合全体在庫増えるまたマイナスになるので計算反転*/\n         /*大元のストレージも変更*/\n        let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n        let changePropDatas = propOrders;\n      \n        let action = ordersSend(changePropDatas);\n        props.dispatch(action);\n      }\n    }\n  });\n  /*redux buycart変更*/\n  let buycart = props.buyCarts.slice();\n\n  let thiscartData = {\n    name: cartItemName,\n    num: changeNumber,\n    price: props.buyCarts[Number(e.target.name)].price,\n    process:props.buyCarts[Number(e.target.name)].process\n  }\n  /*リスト(買い物カゴ)の内変更かけたものを入れ替え*/\n\n  buycart[Number(e.target.name)] = thiscartData;\n  /*ストア送信(update)*/\n\n  let delAction =  cartUpdate(buycart);\n  props.dispatch(delAction);\n  \n\n  /*在庫ステート変更*/\n\n  setState(stateData);\n  let numArray = num.slice();\n  numArray[Number(e.target.name)] = changeNumber;\n  setNumber(numArray);\n}\n/************************時間変更************************************************* */\n  const timesChange =(e)=>{\n    let index = Number(e.target.name);\n    let carts = props.buyCarts.slice();\n    carts[index].time = e.target.value;\n    let action = cartUpdate(carts);\n    props.dispatch(action);\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n       <div className=\"text-center mt-5 mb-3\">\n         <h1 style={title}>\n           <span style={span}><FontAwesomeIcon icon ={faShoppingCart} /></span>\n           注文確認\n        </h1>\n       </div>\n       <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          {props.buyCarts.length >0? \n          <Form>\n           <Table bordered className=\"mt-3\">\n             <thead>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faFish} />\n                  </span>\n                  商品名\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faYenSign} />\n                  </span>\n                  価格\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faCalculator} />\n                  </span>\n                  数\n               </th>\n               <th style={th}>\n                 <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faUtensils} />\n                  </span>\n                  加工法\n               </th>\n               <th style={th}>\n                 <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faUtensils} />\n                  </span>\n                  受け取り時間\n               </th>\n               <th style={th}>合計</th>\n               <th style={th}></th>\n             </thead>\n             <tbody>\n               {props.buyCarts.map((data,index)=>(\n                 <tr>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.name}</td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.price}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                      <label>{\"現在\" + num[index]}</label>\n                      <Form.Control as=\"select\" size=\"sm\" custom value={num[index]} onChange={(index)=>doSelect(index)} name={index} >\n                       {state.map((order)=>(\n                         order.name === data.name? \n                         /*在庫にすでに選択されている数量足した数*/\n                         \n                           selectNumber(Number(order.stock) + Number(num[index])).map((value)=>(\n                             <option key={value}>{value}</option>\n                           ))\n                           : \n                           ''\n                       ))}\n                      </Form.Control>\n                   </td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.process}</td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">\n                    <input \n                          name={index}\n                          type=\"time\" \n                          value={data.time}  \n                          className=\"form-control\"\n                          onChange={timesChange}\n                      />\n                   </td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{Number(data.price) * Number(num[index])}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                     <Button \n                       variant=\"danger\"\n                       onClick={()=>deleteItem(index, data.name, num[index])}\n                     >\n                    削除\n                     </Button>\n                   </td>\n                 </tr>\n               ))}\n             </tbody>\n           </Table>\n           <div className=\"text-center\">\n             <Button  \n               variant=\"primary\"\n               className=\"btn-lg\"\n               onClick={sendServer}\n             >\n             <span><FontAwesomeIcon icon={faCashRegister} /></span>\n             注文確定\n             </Button>\n           </div>\n         </Form> \n           : \n          <Empty />\n         }\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Confirm))\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport { cartEmpty, cartUpdate, ordersStockChange } from '../store/Store';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faFish, faYenSign, faCalculator, faUtensils, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart, sendLoginData, ordersSend} from '../store/Store';\nimport Empty from './NoData';\nimport { localstorageChange } from './setting';\n\n\nconst table ={\n  width: '100%'\n}\n\nconst title={\n  fontFamily: 'ヒラギノ明朝',\n  color: '#0000CD',\n  fontWeight: 'bold',\n  marginTop: '8%'\n}\nconst span ={\n  color: '#6927FF',\n  marginRight: '20px'\n}\nconst th={\n  background: '#8EB8FF',\n  color: '#eee',\n  textAlign: 'center'\n}\n\n/**************************************************************************************** */\n\nconst  PhoneConfirm = (props)=>{\n \n/*カートの商品の数量のみ配列化 */\n\nconst cartNum = ()=>{\n  let array = [];\n  props.buyCarts.forEach((data) => {\n    array.push(Number(data.num));\n  });\n  return array;\n}\n \n/***************************** ステート管理 ************************************************************** */\nconst[state, setState] = useState(props.orderData); /* 全体の在庫*/\nconst[num, setNumber] = useState(cartNum());  /* 現在の注文数ステータス */\n\n\n/***************************** セレクトの数量表示 ************************************************************** */\nconst selectNumber =(number)=>{\n  let array = [];\n  for(let i=0; i<= Number(number); i++){\n    array.push(i);\n  }\n  return array;\n}\n/***********************サーバー送信注文確定***************************************************************** */\nconst sendServer = ()=>{\n    let result = window.confirm('注文を確定してよろしいですか？');\n    if(result){\n      const params = new FormData();\n    params.append('email', props.userData[0].email);\n    params.append('name', props.userData[0].name);\n\n     /* PHP送信　*/\n    axios.post('http://yukiabineko.sakura.ne.jp/mail.php',\n　　　 params,\n      {\n        headers:{\n          'content-type': 'multipart/form-data',\n        },\n      }\n    ).then((res)=>{\n        console.log(res.data);\n    }).catch(()=>{\n    })\n\n\n  let sendData = props.buyCarts;\n   let obj = {}\n   obj['id'] = props.userData[0].id;\n   obj['data'] = sendData\n\n   /* rails送信　*/\n   axios.post('http://uematsu-backend.herokuapp.com/shoppings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n\n        alert(response.data.message); \n        axios.get(`https://uematsu-backend.herokuapp.com/users/${props.userData[0].id}`).then(function(response){\n           let action = sendLoginData (response.data);\n           props.dispatch(action);\n\n        }).catch(function(err){\n         console.log(err);\n        });\n      })\n      .catch(function(){\n        alert('error');\n      }) \n    \n    props.history.push('/customor');  /*ユーザーページへ移動*/\n    props.dispatch(cartEmpty());  /*買い物カゴリセット*/\n\n    }\n    \n  }\n  /**********************************商品アイテム削除************************************************************************************************ */\n  const deleteItem = (index, name, n)=>{\n    let action = cartDeleteCart(index);\n    props.dispatch(action);\n    \n    let action2 = ordersStockChange(name, n);\n    props.dispatch(action2);\n\n\n    /*選択数ステートも更新*/\n    let number = num.slice();\n    number.splice(index, 1);\n    \n\n    setNumber(number);\n    \n    \n\n  }\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n    loginUserCheck();\n    })\n/******************************セレクト切り替え********************************************************** */\nconst doSelect = (e)=>{\n  let currentNumber = Number(num[Number(e.target.name)]);\n  let changeNumber = Number(e.target.value);\n  let calcNumber = changeNumber - currentNumber;\n  let cartItemName = props.buyCarts[Number(e.target.name)].name;\n  let stateData = state.slice();\n  \n\n  stateData.forEach((data,i)=>{\n    let dataNumber = Number(data.stock);\n    \n    if(data.name === cartItemName){   /*セレクトの商品と全商品検証*/\n      /*増やしたか？　減らしたか? */\n      \n      if(calcNumber > 0){\n         stateData[i].stock = dataNumber - calcNumber;  /*数量増やした場合全体在庫減る*/\n          /*大元のストレージも変更*/\n          let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n          let changePropDatas = propOrders;\n        \n          let action = ordersSend(changePropDatas);\n          props.dispatch(action);\n         \n      }\n      else if(calcNumber <0){\n        stateData[i].stock = dataNumber + (currentNumber - changeNumber); /*数量増やした場合全体在庫増えるまたマイナスになるので計算反転*/\n         /*大元のストレージも変更*/\n        let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n        let changePropDatas = propOrders;\n      \n        let action = ordersSend(changePropDatas);\n        props.dispatch(action);\n      }\n    }\n  });\n  /*redux buycart変更*/\n  let buycart = props.buyCarts.slice();\n\n  let thiscartData = {\n    name: cartItemName,\n    num: changeNumber,\n    price: props.buyCarts[Number(e.target.name)].price,\n    process:props.buyCarts[Number(e.target.name)].process\n  }\n  /*リスト(買い物カゴ)の内変更かけたものを入れ替え*/\n\n  buycart[Number(e.target.name)] = thiscartData;\n  /*ストア送信(update)*/\n\n  let delAction =  cartUpdate(buycart);\n  props.dispatch(delAction);\n  \n\n  /*在庫ステート変更*/\n\n  setState(stateData);\n  let numArray = num.slice();\n  numArray[Number(e.target.name)] = changeNumber;\n  setNumber(numArray);\n}\n/************************時間変更************************************************* */\n  const timesChange =(e)=>{\n    let index = Number(e.target.name);\n    let carts = props.buyCarts.slice();\n    carts[index].time = e.target.value;\n    let action = cartUpdate(carts);\n    props.dispatch(action);\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n       <div className=\"text-center mt-5\">\n         <h1 style={title}>\n           <span style={span}><FontAwesomeIcon icon ={faShoppingCart} /></span>\n           注文確認\n        </h1>\n       </div>\n       <div className=\"bg-white p-2\"></div>\n       <div className=\"bg-white pb-3\">\n          {props.buyCarts.length >0? \n          <Form>\n           <Table bordered className=\"w-100\">\n             <tbody>\n               {props.buyCarts.map((data,index)=>(\n                 <tr>\n                  <Table>\n                   <tr>\n                     <th style={th}>\n                        <span className=\"text-primary mr-2 h5\">\n                          <FontAwesomeIcon icon={faFish} />\n                        </span>\n                        商品名\n                     </th>\n                     <td className=\"text-dark text-center font-weight-bold align-middle\">{data.name}</td>\n                   </tr>\n                  \n                   <tr>\n                    <th style={th}>\n                      <span className=\"text-primary mr-2 h5\">\n                          <FontAwesomeIcon icon={faYenSign} />\n                        </span>\n                          価格\n                      </th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">{data.price}</td>\n                   </tr>\n\n                   <tr>\n                    <th style={th} className=\"align-middle\">\n                      <span className=\"text-primary mr-2 h5\">\n                        <FontAwesomeIcon icon={faCalculator} />\n                      </span>\n                        数\n                    </th>\n                      <td className=\"text-dark text-center font-weight-bold\">\n                        <label>{\"現在\" + num[index]}</label>\n                        <Form.Control as=\"select\" size=\"sm\" custom value={num[index]} onChange={(index)=>doSelect(index)} name={index} >\n                        {state.map((order)=>(\n                          order.name === data.name? \n                          /*在庫にすでに選択されている数量足した数*/\n                          \n                            selectNumber(Number(order.stock) + Number(num[index])).map((value)=>(\n                              <option key={value}>{value}</option>\n                            ))\n                            : \n                            ''\n                        ))}\n                        </Form.Control>\n                      </td>\n                   </tr>\n                    \n                   <tr>\n                    <th style={th}>\n                      <span className=\"text-primary mr-2 h5\">\n                        <FontAwesomeIcon icon={faUtensils} />\n                      </span>\n                        加工法\n                    </th>\n                    <td className=\"text-dark text-center font-weight-bold align-middle\">{data.process}</td>\n                   </tr>\n\n\n                    <tr>\n                      <th style={th}>\n                        <span className=\"text-primary mr-2 h5\">\n                            <FontAwesomeIcon icon={faUtensils} />\n                        </span>\n                        受け取り時間\n                      </th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">\n                        <input \n                          name={index}\n                          type=\"time\" \n                          value={data.time}  \n                          className=\"form-control\"\n                          onChange={timesChange}\n                          />\n                      </td>\n                    </tr>\n                    \n                    <tr>\n                      <th style={th}>合計</th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">{Number(data.price) * Number(num[index])}</td>\n                    </tr>\n\n                    <tr>\n                       <td colSpan=\"2\" className=\"text-dark text-center font-weight-bold\">\n                         <Button \n                            variant=\"danger\"\n                            onClick={()=>deleteItem(index, data.name, num[index])}\n                            className=\"btn-block\"\n                          >\n                          削除\n                         </Button>\n                       </td>\n                    </tr>\n                  </Table>\n                 </tr>\n               ))}\n             </tbody>\n           </Table>\n           <div className=\"text-center\">\n             <Button  \n               variant=\"primary\"\n               className=\"btn-lg btn-block mb-5\"\n               onClick={sendServer}\n             >\n             <span><FontAwesomeIcon icon={faCashRegister} /></span>\n             注文確定\n             </Button>\n           </div>\n         </Form> \n           : \n          <Empty />\n         }\n      </div>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneConfirm))\n","\n/*当日日付のみ表示するための分岐処理*/\n\nexport const viewDataBranch = (date)=>{\n  /*本日*/\n\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n  /*注文データ*/\n\n  const createDate = new Date(date);\n  const c_year = createDate.getFullYear();\n  const c_month = createDate.getMonth() + 1;\n  const c_day = createDate.getDate();\n\n  /*照合*/\n  if( year === c_year && month === c_month && day === c_day){\n     return 1;\n  }\n  else{\n     return 0;\n  }\n\n}\n/********************************************************************************************* */\n/*オーダーで今日の日付のものがあるかチェック*/\n\nexport const todayOdrersChecker = (shoppings)=>{\n  let target = 0;\n  shoppings.forEach((shopping)=> {\n     let data = viewDataBranch(shopping.shopping_date);\n     /*各オーダーで今日日付のものがあれば加算*/\n     if(data === 1) target ++;\n  });\n  return target;\n}\n/*(ヘッダー表示用,商品リスト用)明日の日付アイテムあるか確認 */\n\nexport const todayOrderExisting =(shoppings)=>{\n   let todayObjects = [];\n   let date = new Date();\n   let year = date.getFullYear();\n   let month = date.getMonth() + 1;\n   date.setDate(date.getDate() + 1); \n   let day = date.getDate();  /*tomorrow */\n\n   if(shoppings){\n      shoppings.forEach((shopping)=>{\n         let t_date = new Date(shopping.shopping_date);\n         let t_year = t_date.getFullYear();\n         let t_month = t_date.getMonth() + 1;\n         let t_day = t_date.getDate();\n         if( year === t_year && month === t_month && day === t_day){\n            todayObjects.push(shopping);\n         }\n      });\n   }\n   return todayObjects;\n}\n/*売上速報ページ売上合計計算*/\nexport  const totalSales = (datas)=>{\n  let total = 0\n  if(datas){\n   datas.map((data)=>{\n      total += Number(data.合計);\n   })\n  }\n  return total;\n}\n","import { useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { viewDataBranch, todayOdrersChecker } from \"./settiing\";\nimport { daySetting } from '../users/setting';\nimport { timeSetting } from '../setting';\n\n const customButton ={\n   border: \"none\",\n   borderBottom: \"1px solid #0000bb\",\n   background: \"none\",\n   color: \"#0000bb\",\n   outline: 'none',\n   fontWeight: 'bold'\n }\n\n function PcIndex(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n\n  /************************ステート*************************************** */\n  const[shopingData, setState] = useState(\n    localData ?localData : []\n  )\n  \n  /*************APIによるshopping一覧**********************************/\n  /*async function shoppingsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/shoppings')\n      .then((res)=>{\n         localStorage.removeItem('shoppings');\n         setState(res.data);\n         localStorage.setItem('shoppings', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(shoppingsCall()); */\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/***************************************ステータス分岐********************************************************************** */\n  const orderStatus = (status)=>{\n    switch (status) {\n      case 0:\n        return <div className=\"bg-info text-center text-white mt-3\">申請中</div>;\n      case 1:\n        return <div className=\"bg-warning text-center text-white mt-3\">加工済み</div>;\n      case 2:\n        return <div className=\"bg-danger text-center text-white mt-3\">受け渡し済み</div>;\n    default:\n        break;\n    }\n  }\n  /****************************************カスタムbutton hover*************************************************** */\n  const hoverButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"#BAD3FF\";\n  }\n  /****************************************カスタムbutton out*************************************************** */\n  const outButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"none\";\n  }\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.showShoppingStatus(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\" className=\"font-weight-bold text-info\">注文確認表</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          {(shopingData.length >0 && todayOdrersChecker(shopingData) > 0)? \n            <Table bordered striped>\n              <thead>\n                <th className=\"bg-primary text-white text-center\">日付</th>\n                <th className=\"bg-primary text-white text-center\">受け渡し時間</th>\n                <th className=\"bg-primary text-white text-center\">商品名</th>\n                <th className=\"bg-primary text-white text-center\">お客様名</th>\n                <th className=\"bg-primary text-white text-center\">価格</th>\n                <th className=\"bg-primary text-white text-center\">個数</th>\n                <th className=\"bg-primary text-white text-center\">加工法</th>\n                <th className=\"bg-primary text-white text-center\">合計金額{todayOdrersChecker(shopingData).length}</th>\n              </thead>\n              <tbody>\n                {shopingData.map((data,i)=>(\n                  /* 当日のみ表示 */\n\n                  viewDataBranch(data.shopping_date) === 1? \n                  <tr>\n                  <td className=\"font-weight-bold text-center align-middle\">{daySetting(data.shopping_date)}</td>\n                  <td className=\"font-weight-bold text-danger align-middle text-center\">{timeSetting(data.receiving_time)}</td>\n                  <td className=\"font-weight-bold text-center align-center\">\n                    <button \n                      style={customButton} \n                      id={`customButton${i}`}\n                      onMouseOver={()=>hoverButton(i)}\n                      onMouseOut={()=>outButton(i)}\n                      className=\"customButton\"\n                      onClick={()=>showShoppingStatus(data)}\n                      >{data.name}</button>\n                    \n                    <br/>\n                    {orderStatus(data.status)}\n                  </td>\n                  <td className=\"font-weight-bold text-center align-middle\">{`${data.user_name}様`}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">{data.price}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.num}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.process}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">\n                    { Number(data.price) * Number(data.num) }\n                  </td>\n                </tr>\n                   : \n                   ''\n                ))}\n              </tbody>\n            </Table>\n            : \n            <div className=\"bg-secondary text-center text-white font-weight-bold p-3\">データがありません。</div>\n          }\n          \n        </Col>\n      </Row>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { viewDataBranch, todayOdrersChecker } from \"./settiing\";\nimport { daySetting } from '../users/setting';\nimport { timeSetting } from '../setting';\n\n const customButton ={\n   border: \"none\",\n   borderBottom: \"1px solid #0000bb\",\n   background: \"none\",\n   color: \"#0000bb\",\n   outline: 'none',\n   fontWeight: 'bold'\n }\n\n function PcIndex(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n\n  /************************ステート*************************************** */\n  const[shopingData, setState] = useState(\n    localData ? localData : []\n  )\n  \n  /*************APIによるshopping一覧**********************************/\n  /*async function shoppingsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/shoppings')\n      .then((res)=>{\n         localStorage.removeItem('shoppings');\n         setState(res.data);\n         localStorage.setItem('shoppings', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(shoppingsCall());*/\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/***************************************ステータス分岐********************************************************************** */\n  const orderStatus = (status)=>{\n    switch (status) {\n      case 0:\n        return <div className=\"bg-info text-center text-white mt-3\">申請中</div>;\n      case 1:\n        return <div className=\"bg-warning text-center text-white mt-3\">加工済み</div>;\n      case 2:\n        return <div className=\"bg-danger text-center text-white mt-3\">受け渡し済み</div>;\n    default:\n        break;\n    }\n  }\n  /****************************************カスタムbutton hover*************************************************** */\n  const hoverButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"#BAD3FF\";\n  }\n  /****************************************カスタムbutton out*************************************************** */\n  const outButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"none\";\n  }\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.showShoppingStatus(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div className=\"w-100\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\" className=\"font-weight-bold text-info\">注文確認表</h2>\n      </div>\n      <div className=\"w-100 bg-white\">\n          {(shopingData.length >0 && todayOdrersChecker(shopingData) > 0)? \n            <Table striped className=\"w-100\" >\n              <tbody>\n                {shopingData.map((data,i)=>(\n                  /* 当日のみ表示 */\n\n                  viewDataBranch(data.shopping_date) === 1? \n                  <tr>\n                    <Table bordered>\n                      <tbody>\n                        <tr>\n                          <td colSpan=\"5\" className=\"font-weight-bold text-danger bg-white text-center\">受け取り時間:{timeSetting(data.receiving_time)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">受け渡し日</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">{daySetting(data.shopping_date)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">商品名</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-center\">\n                            <button \n                              style={customButton} \n                              id={`customButton${i}`}\n                              onMouseOver={()=>hoverButton(i)}\n                              onMouseOut={()=>outButton(i)}\n                              className=\"customButton\"\n                              onClick={()=>showShoppingStatus(data)}\n                              >{data.name}</button>\n                            \n                            <br/>\n                            {orderStatus(data.status)}\n                          </td>\n                        </tr>\n                         \n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">お客様名</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">{`${data.user_name}様`}</td>\n                        </tr>\n\n                        <tr>\n                           <th className=\"bg-primary text-white text-center align-middle\">価格</th>\n                           <td className=\"font-weight-bold text-center text-danger align-middle\">{data.price}</td>\n                           <td className=\"font-weight-bold text-center text-danger align-middle\">\n                            ({ Number(data.price) * Number(data.num) })\n                           </td>\n                           <th className=\"bg-primary text-white text-center align-middle\">個数</th>\n                           <td className=\"font-weight-bold text-center align-middle\">{data.num}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">加工法</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">{data.process}</td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                </tr>\n                   : \n                   ''\n                ))}\n              </tbody>\n            </Table>\n            : \n            <div className=\"bg-secondary text-center text-white font-weight-bold p-3\">データがありません。</div>\n          }\n          \n      </div>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport MediaQuery from \"react-responsive\";\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\n\n\n function Index(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.sendShoppingData(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          showShoppingStatus={(data)=>showShoppingStatus(data)}\n        />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex \n           showShoppingStatus={(data)=>showShoppingStatus(data)}\n        />\n      </MediaQuery>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUtensils, faTruck, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { chartSend } from '../store/Store';\n\nconst font ={\n  fontSize: '24px'\n}\n\nconst  Show = (props)=>{\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck);\n\n    /*ステータスによる条件訳*/\n\n    const statusLayout = ()=>{\n      switch (props.show.status) {\n        case 0:\n          return <div className=\"bg-info text-white text-center\">申請中</div>;\n        case 1:\n          return <div className=\"bg-warning text-white text-center\">加工済み</div>;\n        case 2:\n          return <div className=\"bg-danger text-white text-center\">受け渡し済み</div>;\n        default:\n          break;\n      }\n    }\n    /* ステータス変更サーバー送信 */\n    \n    const sendStatusNumber = (num)=>{\n\n       /* rails側への送信*/\n      \n       const params = {\n        id: props.show.id,\n        name: props.show.user_name,\n        status: num\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/shoppings/${props.show.id}`, params)\n      .then(function (response) {\n        /*処理後更新*/\n         axios\n            .get('https://uematsu-backend.herokuapp.com/shoppings')\n            .then((res)=>{\n              localStorage.removeItem('shoppings');\n              localStorage.setItem('shoppings', JSON.stringify(res.data));\n              props.history.push('/shoppings');\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n        axios\n        .get('https://uematsu-backend.herokuapp.com/sales')\n        .then((res)=>{\n            let action = chartSend(res.data);\n            props.dispatch(action);\n        })\n        .catch((error)=>{\n          console.log(error);\n        })\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        \n      })\n      .catch(function(){\n        alert('error');\n      })\n     \n    }\n    \n  return(\n   <>\n    <div className=\"text-center mt-5\">\n      <h2 className=\"font-weight-bold\">注文状況確認/変更</h2>\n    </div>\n    <Row>\n      < Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n        {props.show? \n          <div>\n          {/*　注文情報 */ }\n\n          <Table bordered>\n            <tbody>\n              <tr>\n                <th className=\"bg-primary text-white\">商品名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{props.show.name}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">お客様名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{`${props.show.user_name}様`}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">価格</th>\n                <td className=\"font-weight-bold\">{props.show.price}</td>\n                <th className=\"bg-primary text-white\">注文数</th>\n                <td className=\"font-weight-bold\">{props.show.num}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">合計金額</th>\n                <td className=\"font-weight-bold\">{Number(props.show.price) * Number(props.show.num)}</td>\n                <th className=\"bg-primary text-white\">注文状況</th>\n                <td className=\"font-weight-bold\">{statusLayout()}</td>\n               \n              </tr>\n            </tbody>\n          </Table>\n\n          {/* 変更エリア */}\n           <p className=\"font-weight-bold\">現在の注文商品の状況を変更するには<br/>対応するボタンを押してください。</p>\n           <fieldset className=\"bg-secondary p-2\">\n            {props.show.status === 0? \n              <>\n                 <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(1)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n              /* ステータス加工済み */\n              \n              props.show.status === 1 ? \n              <>\n                 <Button \n                    variant=\"primary\"\n                    className=\"btn-block p-4 font-weight-bold text-white \"\n                    onClick={()=>sendStatusNumber(0)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                   申請中に変更\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={ faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n               /* ステータス受け渡し済み */\n\n               <>\n               <Button \n                  variant=\"primary\"\n                  className=\"btn-block p-4 font-weight-bold text-white \"\n                  onClick={()=>sendStatusNumber(0)}\n                  style={font}\n                >\n                <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                 申請中に変更\n               </Button>\n               <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n            </>\n\n            }\n           </fieldset>\n          </div>\n           : \n          ''\n        }\n      </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { todayOrderExisting } from './settiing';\nimport { timeSetting } from '../setting';\n\n /******************************従業員側明日の予約確認ページ********************************************************** */\n\nconst  Reservation = (props)=>{\n \n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-light font-weight-bold\">明日の予約一覧表</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 10, offset: 1 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         {todayOrderExisting(JSON.parse(localStorage.getItem('shoppings'))).map((data,i)=>(\n           <>\n           <div className=\"font-weight-bold h3\">【{data.user_name}さん】</div>\n           <Table bordered className=\"mt-3\">\n             <tbody>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">商品名</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{data.name}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">依頼調理法</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{data.process}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">受け取り時間</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{timeSetting(data.receiving_time)}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">商品単価</th>\n                 <td className=\"font-weight-bold\">{data.price}</td>\n                 <th className=\"bg-primary text-white font-weight-bold\">注文数量</th>\n                 <td className=\"font-weight-bold\">{data.num}</td>\n                 <th className=\"bg-primary text-white font-weight-bold\">合計金額</th>\n                 <td className=\"font-weight-bold\">{data.price * data.num}</td>\n               </tr>\n               <tr>\n\n               </tr>\n             </tbody>\n           </Table>\n           </>\n         ))}\n           \n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Reservation));","/*売上速報ページ売上合計計算*/\nexport  const totalSales = (datas)=>{\n  let total = 0\n  if(datas){\n    datas.map((data)=>{\n      let num = data.合計? Number(data.合計) : 0;\n      total += num;\n    })\n  }\n  return total;\n \n}\n/*totalSales元に比率計算*/\nexport  const salesRate = (data, datas)=>{\n    let allTotal = totalSales(datas);\n    return data.合計? Math.floor(( Number(data.合計)  / allTotal) *100) : \"\";\n}","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'react-bootstrap';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer } from 'recharts';\nimport { totalSales, salesRate } from './setting';\n\n function PcIndex(props){\n  \n  const datas = props.chartData;\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  return(\n    <div>\n       <div className=\"text-center text-white mt-4\">\n        　<h1 className=\"font-weight-bold\">売上速報</h1>\n          <h3 className=\"font-weight-bold\">【2月】</h3>\n       </div>\n       <ResponsiveContainer width=\"100%\" height={300} className=\"bg-white\">\n            <BarChart  data={datas} margin={{ top: 5, right: 0, left: 10, bottom: 5, }}>\n            　　 <CartesianGrid strokeDasharray=\"3 3\" />\n            　　　<XAxis dataKey=\"day\" /><YAxis />\n            　　　<Tooltip />\n                <Legend />\n                <Bar dataKey=\"合計\" fill=\"orange\" />\n            </BarChart>\n        </ResponsiveContainer>\n\n        <div className=\"text-center font-weight-bold text-white mt-4\">\n            <h3 className=\"font-weight-bold\">【売上実績合計】{ totalSales(datas) }円</h3>\n        </div>\n        <div className=\"bg-white p-5 pt-2 pb-2\">\n        {datas? \n             <Table bordered>\n             <thead>\n                 <tr>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">日付</th>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">曜日</th>\n                     <th colSpan=\"3\" className=\"bg-primary text-white font-weight-bold text-center\">売上</th>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">販売数</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">売上金額</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">構成比</th>\n                 </tr>\n             </thead>\n             <tbody>\n                 {datas.map((data)=>(\n                     <tr>\n                       <td className=\"font-weight-bold text-center\">{data.day}</td>\n                       <td className=\"font-weight-bold text-center\">{data.week}</td>\n                       <td className=\"font-weight-bold text-center\">{data.num}</td>\n                       <td className=\"font-weight-bold text-center\">{data.合計}</td>\n                       <td className=\"font-weight-bold text-center\">{ salesRate(data, datas) }</td>\n                     </tr>\n                 ))}\n             </tbody>\n         </Table>\n            : \n          <div className=\"bg-secondary p-5 font-weight-bold text-white text-center\">データがありません。</div>\n          }\n         \n        </div>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'react-bootstrap';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer } from 'recharts';\nimport { totalSales, salesRate} from './setting';\n\n\n\n function PcIndex(props){\n  const datas = props.chartData;\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  return(\n    <div className=\"w-100\">\n       <div className=\"text-center text-white mt-4\">\n        　<h1 className=\"font-weight-bold\">売上速報</h1>\n          <h3 className=\"font-weight-bold\">【2月】</h3>\n       </div>\n\n       <ResponsiveContainer width=\"100%\" height={300} className=\"bg-white w-100\">\n            <BarChart  data={datas} margin={{ top: 5, right: 0, left: 10, bottom: 5, }}>\n            　　 <CartesianGrid strokeDasharray=\"3 3\" />\n            　　　<XAxis dataKey=\"date\" /><YAxis />\n            　　　<Tooltip />\n                <Legend />\n                <Bar dataKey=\"合計\" fill=\"orange\" />\n            </BarChart>\n        </ResponsiveContainer>\n\n        <div className=\"text-center font-weight-bold text-white mt-2\">\n            <h4 className=\"font-weight-bold text-primary\">【売上実績合計】{ totalSales(datas) }円</h4>\n        </div>\n        <div className=\"bg-white w-100 pb-2\">\n          {datas? \n             <Table bordered>\n             <thead>\n                 <tr>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">日付</th>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">曜日</th>\n                     <th colSpan=\"3\" className=\"bg-primary text-white font-weight-bold text-center\">売上</th>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">販売数</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">売上金額</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">構成比</th>\n                 </tr>\n             </thead>\n             <tbody>\n                 {datas.map((data)=>(\n                     <tr>\n                       <td className=\"font-weight-bold text-center\">{data.day}</td>\n                       <td className=\"font-weight-bold text-center\">{data.week}</td>\n                       <td className=\"font-weight-bold text-center\">{data.num}</td>\n                       <td className=\"font-weight-bold text-center\">{data.合計}</td>\n                       <td className=\"font-weight-bold text-center\">{ salesRate(data, datas) }</td>\n                     </tr>\n                 ))}\n             </tbody>\n         </Table>\n            : \n          <div className=\"bg-secondary p-5 font-weight-bold text-white text-center\">データがありません。</div>\n          }\n         \n        </div>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport MediaQuery from \"react-responsive\";\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\n\n\n function Index(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex />\n      </MediaQuery>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from \"react\";\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport axios from 'axios';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Index from './users/Index';\nimport Login from './Login';\nimport userNew from './users/New'\nimport Edit from './users/Edit'\nimport UserShow from './users/Show';\nimport EmpShow from './users/EmpShow';\nimport PhoneEmpShow from './users/PhoneEmpShow';\nimport UserOrder from './users/Order';\nimport ItemIndex from './items/Index';\nimport ItemNew from './items/New';\nimport ItemEdit from './items/Edit';\nimport Process from './items/Process';\nimport OrderIndex from './orders/Index';\nimport OrderNew from './orders/New';\nimport OrderEdit from './orders/Edit';\nimport CustomorIndex from './customer/Index'\nimport CustomorShow from './customer/Show'\nimport CustomorPhoneShow  from './customer/PhoneShow'\nimport Confirm from './customer/confirm';\nimport PhoneConfirm from './customer/PhoneConfirm';\nimport ShoppingIndex from './shopping/Index';\nimport ShoppingShow from './shopping/Show';\nimport Reservation from './shopping/Reservation';\nimport SalesIndex from './sale/Index';\nimport { connect } from \"react-redux\";\nimport { logoutAction, cartEmpty } from './store/Store';\nimport {  todayOrderExisting } from './shopping/settiing';\n\n function App(props){\n  const[state, setState] = useState({\n    editId: 0,\n    deleteId: 0,\n    itemEditId:0,\n    processId: 0,\n    OrderEditId: 0,\n    customerItem: null,\n    shoppingShow: null,\n    cartItem: null\n  })\n  const userlogout = ()=>{\n    let action = logoutAction();\n    props.dispatch(action);\n\n    let cartAction = cartEmpty(); /*買い物かごリセット*/\n    props.dispatch(cartAction);\n    /*買い物かご操作のリセット(ストレージ)*/\n\n    axios\n    .get('https://uematsu-backend.herokuapp.com/orders')\n    .then((res)=>{\n       localStorage.setItem('orders', JSON.stringify(res.data));\n       \n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n    setState({\n     data: JSON.parse(localStorage.getItem('orders'))\n   })\n    \n  }\n\n  const getEditId = (id)=>{\n\n    setState({\n      editId: id,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getItemEditId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: item,\n      processId: state.processId,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getProcessId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: item,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getOrderEditId = (id)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: id,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*お客様買うボタンより*/\n  const customerItem = (item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*ストック数およびお買い物リストの更新*/\n  const changeItem =(item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*個別の注文状況の表示用アイテム*/\n  const shoppingData = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: data,\n      cartItem: state.cartItem\n    })\n  }\n  /*買い物カゴ送信処理*/\n\n  const cartItem = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: data\n    })\n  }\n  \n  return(\n    <BrowserRouter>\n    <div className='fixed-top'> \n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark fixed-top\">\n      <a className=\"navbar-brand text-white\" href=\"#\"><FontAwesomeIcon icon={faUtensils} />&nbsp;\n            加工依頼アプリ</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n        \n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {props.userData.length >0?\n            props.userData[0].admin === true? \n             /*従業員サイド */\n            <>\n              <li class=\"nav-item pt-3 pb-3 active\">\n                <span className=\"font-weight-bold text-warning\"><FontAwesomeIcon icon={faUser} />{props.userData[0].name}さん</span>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/customor\" className=\"text-light p-3\">お買い物</Link>\n             </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/\" className=\"text-light p-3\">お客様一覧</Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/items\" className=\"text-light p-3\">商品一覧</Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/orders\" className=\"text-light p-3\">店頭商品一覧</Link>\n             </li>\n             <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/shoppings\" className=\"text-light p-3\">本日注文状況</Link>\n             </li>\n             <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/sales\" className=\"text-light p-3\">売上速報</Link>\n             </li>\n             {/*明日のオーダーがあれば表示*/ }\n\n             { todayOrderExisting(JSON.parse(localStorage.getItem('shoppings'))).length >0? \n               <li className=\"nav-item pt-3 pb-3\">\n                 <Link to=\"/reservation\" className=\"text-light p-3\">明日の予約状況</Link>\n               </li> \n              : \n              ''\n              }\n          \n            </>\n            /*お客様サイド */\n              : \n              <>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/customor\" className=\"text-light p-3\">お買い物</Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users/show\" className=\"text-light p-3\">お客様ページ</Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users_order\" className=\"text-light p-3\">注文確認</Link>\n                </li>\n              </>\n            : \n            <></>\n          }\n        </ul>\n\n        <ul className=\"navbar-nav\">\n        {props.userData.length >0? \n           <li className=\"nav-item pt-3 pb-3\">\n             <button \n              className=\"logout\"\n              onClick={userlogout}\n              data-testid=\"logintrue\"\n            >ログアウト</button>\n           </li>\n          : \n          <li className=\"nav-item pt-3 pb-3\"><Link to=\"/login\" className=\"text-light p-3\" data-testid=\"loginfalse\">ログイン</Link></li>\n          }\n        </ul>\n      </div>\n      \n    </nav>\n     \n      </div><br/><br/>\n      <Route exact path=\"/\" render={()=>\n        <Index \n          editIdget={(id)=>getEditId(id)} \n        />} /> \n      <Route path=\"/login\" render={()=><Login />} />\n      <Route path=\"/users/new\" component={userNew} />\n      <Route path=\"/users/edit\" render={ () => <Edit id={state.editId} />} />\n      <Route path=\"/users/show\" component={UserShow} />\n      <Route path=\"/users_empshow\"  render={()=><EmpShow />} />\n      <Route path=\"/users_phone_empshow\"  render={()=><PhoneEmpShow />} />\n\n      <Route path=\"/users_order\" component={UserOrder} />\n      <Route path=\"/items\"  render={()=><ItemIndex \n        itemEditIdget={(item)=>getItemEditId(item)} \n        processIdget={(item)=>getProcessId(item)}\n        />} />\n      <Route path=\"/items_new\" component={ItemNew} />\n      <Route path=\"/items_process\" render={ () => <Process item={state.processId} />}  />\n      <Route path=\"/items_edit\" render={ () => <ItemEdit item={state.itemEditId} />}  />\n      <Route path=\"/orders\" render={()=><OrderIndex orderEditIdget={(id)=>getOrderEditId(id)} />} />\n      <Route path=\"/orders_new\" component={OrderNew} />\n      <Route path=\"/orders_edit\" render={ () => <OrderEdit id={state.OrderEditId} />} />\n      <Route path=\"/customor\"  \n        render={()=>\n        <CustomorIndex \n          sendCustomerData={(item)=>customerItem(item)} \n          sendCartItemToConfirm={(item)=>cartItem(item)}\n          fixItemData={state.customerItem}\n        />} />\n      <Route path=\"/customor_show\" \n        render={()=>\n          <CustomorShow \n            itemData={state.customerItem}\n            changeItemData={(item)=>changeItem(item)}\n      />} />\n      <Route path=\"/phone_customor_show\" \n        render={()=>\n          <CustomorPhoneShow \n            itemData={state.customerItem}\n            changeItemData={(item)=>changeItem(item)}\n      />} />\n     <Route path=\"/customer_confirm\"\n      render={()=>\n        <Confirm\n          orderData={state.cartItem}\n      />} />\n\n     <Route path=\"/phone_customer_confirm\"\n        render={()=>\n          <PhoneConfirm\n              orderData={state.cartItem}\n          />} />\n        \n     <Route path=\"/shoppings\" \n      render={()=>\n        <ShoppingIndex \n          sendShoppingData={(data)=>shoppingData(data)}\n        />} />\n     <Route path=\"/shoppings_show\" \n      render={()=>\n        <ShoppingShow \n          show={state.shoppingShow}\n        />} />\n       <Route path=\"/reservation\" \n        render={()=>\n          <Reservation\n            \n          />} />\n      <Route path=\"/sales\" component={SalesIndex} />\n     \n    </BrowserRouter>\n  )\n}\nexport default connect((state)=>state)(App)\n\n\n\n/*\ncomponentDidMount() {\n    const fetchInit = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" }\n    };\n\n    fetch(new URL(process.env.REACT_APP_SERVER_URL), fetchInit)\n      .then(response => response.json())\n      .then(response => this.setState(response));\n  }\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport datastore from './store/Store';\nimport { Beforeunload } from 'react-beforeunload';\n\n\nReactDOM.render(\n  <Provider store={datastore}>\n    <Beforeunload onBeforeunload={() => \"data\"}>\n     <App />\n    </Beforeunload>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}