{"version":3,"sources":["users/Index.jsx","store/Store.js","Login.jsx","users/New.jsx","users/Edit.jsx","users/Show.jsx","items/Index.jsx","App.js","reportWebVitals.js","index.js"],"names":["userLink","border","background","color","outline","fontWeight","textDecoration","withRouter","connect","state","props","useState","data","localStorage","getItem","JSON","parse","setState","a","axios","get","then","res","setItem","stringify","catch","error","console","log","userCall","useEffect","userData","length","history","push","className","data-testid","Row","Col","md","span","offset","Table","striped","bordered","hover","map","value","style","onClick","i","id","name","email","Button","variant","editIdget","window","confirm","delete","response","alert","message","deleteUser","init_data","loginReducer","action","newData","slice","splice","user","logoutReducer","createStore","type","password","inputText","e","target","Form","onSubmit","preventDefault","post","dispatch","confirmation","err","Group","Label","Control","placeholder","onChange","required","display","show","setShow","userInput","class","forEach","getuserData","patch","created_at","itemData","itemsCall","item","price","category","editId","deleteId","Navbar","bg","Brand","href","Nav","Item","to","exact","path","render","getEditId","component","userNew","UserShow","ItemIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","datastore","document","getElementById"],"mappings":"yXAQMA,EAAU,CACdC,OAAQ,OACRC,WAAY,OACZC,MAAO,UACPC,QAAS,OACTC,WAAY,OACZC,eAAgB,aAmHHC,kBAAWC,aAAQ,SAACC,GAAD,OAASA,IAAjBD,EA9GzB,SAAeE,GAAO,IAAD,EACIC,mBAAS,CAC/BC,KAAMC,aAAaC,QAAQ,SAAWC,KAAKC,MAAMH,aAAaC,QAAQ,UAAY,KAFhE,mBACdL,EADc,KACRQ,EADQ,iDAKnB,sBAAAC,EAAA,sEAEQC,IACHC,IAAI,+CACJC,MAAK,SAACC,GACJT,aAAaU,QAAQ,QAASR,KAAKS,UAAUF,EAAIV,UAGnDa,OAAM,SAACC,GACLC,QAAQC,IAAIF,MATnB,OAWIT,EAAS,CACRL,KAAMG,KAAKC,MAAMH,aAAaC,QAAQ,YAZ3C,4CALmB,sBAwDpB,OApCEH,mBApBkB,0CAoBTkB,IAOVC,qBAAU,WAJoB,IAAxBpB,EAAMqB,SAASC,QAChBtB,EAAMuB,QAAQC,KAAK,aAiCvB,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIC,cAAY,YAAhB,wCAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKN,UAAU,sBAA3C,SACG1B,EAAMG,KAAKoB,OAAS,EAEnB,eAACU,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIV,UAAU,8CAAd,0BACA,oBAAIA,UAAU,8CAAd,wDACA,oBAAIA,UAAU,qDAGlB,gCACG1B,EAAMG,KAAKkC,KAAI,SAACC,GAAD,OACd,+BACG,oBAAIZ,UAAU,2BAAd,SACE,wBACEa,MAAOhD,EACPiD,QAAS,SAACC,GAAD,OAAoBH,EAAMI,QA1BvDzC,EAAMuB,QAAQC,KAAK,gBAwBD,SAGEa,EAAMK,SAEX,oBAAKjB,UAAU,2BAAf,SACGY,EAAMM,QAET,+BACE,cAACC,EAAA,EAAD,CACEC,QAAQ,UACRN,QAAS,SAACC,GAAD,OAxDZC,EAwD0BJ,EAAMI,GAvDhDzC,EAAM8C,UAAUL,QAChBzC,EAAMuB,QAAQC,KAAK,eAFJ,IAACiB,GAyDGhB,UAAU,OAHZ,0BAMA,cAACmB,EAAA,EAAD,CACEC,QAAQ,SACRN,QAAS,SAACC,GAAD,OAvD9B,SAAoBA,GAChBO,OAAOC,QAAQ,6EAChBvC,IACEwC,OADF,sDACwDT,IACtD7B,MAAK,SAACuC,GACLC,MAAMD,EAAShD,KAAKkD,YAErBrC,OAAM,SAACC,GACLC,QAAQC,IAAIF,MA+CgBqC,CAAWhB,EAAMI,KAC/BhB,UAAU,OAHZ,+BAjBKY,EAAMK,cA4BrB,4E,gCCxHRY,EAAW,CACbjC,SAAU,IAcNkC,EAAe,SAACxD,EAAOyD,GAC3B,IAAIC,EAAU1D,EAAMsB,SAASqC,QAI7B,OAHAD,EAAQE,OAAO,GACfF,EAAQjC,KAAKgC,EAAOI,MAEd,CACJvC,SAAUoC,IAGRI,EAAe,SAAC9D,EAAOyD,GACzB,IAAIC,EAAU1D,EAAMsB,SAASqC,QAE7B,OADAD,EAAQE,OAAO,GACT,CACJtC,SAAUoC,IAeDK,eAvCM,WAA8B,IAA7B/D,EAA4B,uDAApBuD,EAAWE,EAAS,uCAChD,OAAQA,EAAOO,MACb,IAAK,QACH,OAAOR,EAAaxD,EAAOyD,GAC7B,IAAK,SACH,OAAOK,EAAc9D,EAAOyD,GAC9B,QACE,OAAOzD,MCyFEF,cAAWC,aAAQ,SAACC,GAAD,OAASA,IAAjBD,EA9FX,SAACE,GAAS,IAAD,EAEGC,mBAAS,CAChC0C,MAAO,GACPqB,SAAU,KAJU,mBAEhBjE,EAFgB,KAETQ,EAFS,KAiChB0D,EAAY,SAACC,GACjB,IAAMC,EAASD,EAAEC,OACXzB,EAAOyB,EAAOzB,KACdL,EAAQ8B,EAAO9B,MACrB9B,EAAS,2BAAIR,GAAL,kBAAa2C,EAAML,MAE7B,OACC,qCACC,qBAAKZ,UAAU,wBAAf,SACI,oBAAIA,UAAU,iBAAiBC,cAAY,aAA3C,wCAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKN,UAAU,sBAA3C,SACE,eAAC2C,EAAA,EAAD,CAAMC,SApCM,SAACH,GACnBA,EAAEI,iBACF,IAAIpE,EAAO,CACTyC,MAAO5C,EAAM4C,MACbqB,SAAUjE,EAAMiE,UAElBvD,IAAM8D,KAAK,iDAAkDrE,GAC1DS,MAAK,SAAUuC,GACd,IAAIM,EDSJ,CACJO,KAAK,QACLH,KCX+BV,EAAShD,MACpCF,EAAMwE,SAAShB,GAEfL,MAAM,oDACN5C,EAAS,CACPmC,KAAM,GACNC,MAAO,GACPqB,SAAU,GACVS,aAAc,QAGjB1D,OAAM,SAAS2D,GACdvB,MAAMuB,OAgByBhD,cAAY,YAAzC,UACE,eAAC0C,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,yDACA,cAACR,EAAA,EAAKS,QAAN,CACEd,KAAK,QACLrB,KAAK,QACLoC,YAAY,6BACZrD,UAAU,KACVsD,SAAUd,EACVe,UAAQ,EACR3C,MAAOtC,EAAM4C,MACbjB,cAAY,UAIhB,eAAC0C,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,6CACA,cAACR,EAAA,EAAKS,QAAN,CACGd,KAAK,WACLrB,KAAK,WACLoC,YAAY,mBACZC,SAAUd,EACVe,UAAQ,EACR3C,MAAOtC,EAAMiE,SACbtC,cAAY,UAIf,cAACkB,EAAA,EAAD,CACEmB,KAAK,SACLlB,QAAQ,UACRpB,UAAU,iBAHZ,0BAOA,cAACmB,EAAA,EAAD,CACEC,QAAQ,UACRN,QA5EW,WACvBvC,EAAMuB,QAAQC,KAAK,eA4EPC,UAAU,iBAHZ,oDC8BC5B,eAhHF,SAACG,GAAS,IAAD,EAECC,mBAAS,CAC5BgF,QAAS,SAHS,mBAEdC,EAFc,KAETC,EAFS,OAMKlF,mBAAS,CAChCyC,KAAM,GACNC,MAAO,GACPqB,SAAU,GACVS,aAAc,KAVI,mBAMd1E,EANc,KAMPQ,EANO,KAiBd6E,EAAY,SAAClB,GACjB,IAAMC,EAASD,EAAEC,OACXzB,EAAOyB,EAAOzB,KACdL,EAAQ8B,EAAO9B,MACrB9B,EAAS,2BAAIR,GAAL,kBAAa2C,EAAOL,MAgC9B,OACC,qCACG,qBAAKZ,UAAU,wBAAf,SACE,oBAAIC,cAAY,eAAhB,oDAEF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKN,UAAU,sCAA3C,UACA,cAACmB,EAAA,EAAD,CACEC,QAAQ,YACRN,QAhDe,WACrBvC,EAAMuB,QAAQC,KAAK,WAgDbC,UAAU,OAHZ,0BAOE,eAAC2C,EAAA,EAAD,CAAMC,SA5CY,SAACH,GAEzB,GADAA,EAAEI,iBACCvE,EAAMiE,WAAajE,EAAM0E,aAAa,CACvC,IAAIvE,EAAO,CACTwC,KAAM3C,EAAM2C,KACZC,MAAO5C,EAAM4C,MACbqB,SAAUjE,EAAMiE,SAChBS,aAAc1E,EAAM0E,cAEtBU,EAAQ,CAACF,QAAS,SAClBxE,IAAM8D,KAAK,8CAA+CrE,GACzDS,MAAK,SAAUuC,GAEdC,MAAMD,EAAShD,KAAKkD,SACpB7C,EAAS,CACPmC,KAAM,GACNC,MAAO,GACPqB,SAAU,GACVS,aAAc,QAGjB1D,OAAM,WACLoC,MAAM,iBAKRgC,EAAQ,CAACF,QAAS,WAiBd,UACE,eAACb,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,iCACA,cAACR,EAAA,EAAKS,QAAN,CAAcd,KAAK,OAAOrB,KAAK,OAAOoC,YAAY,kCAASrD,UAAU,KAAKuD,UAAQ,EAACD,SAAUK,EAAW/C,MAAOtC,EAAM2C,UAGvH,eAAC0B,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,yDACA,cAACR,EAAA,EAAKS,QAAN,CAAcd,KAAK,QAAQrB,KAAK,QAAQoC,YAAY,kCAASE,UAAQ,EAACD,SAAUK,EAAW/C,MAAOtC,EAAM4C,WAG1G,eAACyB,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,6CAA8B,uBAC9B,qBAAKS,MAAM,WAAW/C,MAAO4C,EAA7B,SACE,uHAEF,cAACd,EAAA,EAAKS,QAAN,CAAcd,KAAK,WAAWrB,KAAK,WAAWoC,YAAY,kCAASE,UAAQ,EAACD,SAAUK,EAAW/C,MAAOtC,EAAMiE,cAIhH,eAACI,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,yDAAgC,uBAChC,qBAAKS,MAAM,WAAW/C,MAAO4C,EAA7B,SACE,uHAEF,cAACd,EAAA,EAAKS,QAAN,CAAcd,KAAK,WAAWrB,KAAK,eAAeoC,YAAY,sEAAeE,UAAQ,EAACD,SAAUK,EAC9F/C,MAAOtC,EAAM0E,kBAIf,cAAC7B,EAAA,EAAD,CACEmB,KAAK,SACLlB,QAAQ,UACRpB,UAAU,iBAHZ,wCC0BC5B,eA1HD,SAACG,GAEd,IAUK4D,EAVe,WACnB,IAAIA,EAAO,GAOX,OANYvD,KAAKC,MAAMH,aAAaC,QAAQ,UACtCkF,SAAQ,SAACpF,GACVA,EAAKuC,KAAOzC,EAAMyC,IACpBmB,EAAKpC,KAAKtB,MAGN0D,EAEI2B,GAZU,EAaAtF,mBAAS,CAC5BgF,QAAS,SAdU,mBAafC,EAbe,KAaVC,EAbU,OAiBIlF,mBAAS,CAChCyC,KAAMkB,EAAK,GAAGlB,KACdC,MAAOiB,EAAK,GAAGjB,MACfqB,SAAU,GACVS,aAAc,KArBK,mBAiBf1E,EAjBe,KAiBRQ,EAjBQ,KA2Bf6E,EAAY,SAAClB,GACjB,IAAMC,EAASD,EAAEC,OACXzB,EAAOyB,EAAOzB,KACdL,EAAQ8B,EAAO9B,MACrB9B,EAAS,2BAAIR,GAAL,kBAAa2C,EAAOL,MAgC9B,OACC,qCACG,qBAAKZ,UAAU,wBAAf,SACE,+BAAK1B,EAAM2C,KAAX,gCAEF,cAACf,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKN,UAAU,sCAA3C,UACA,cAACmB,EAAA,EAAD,CACEC,QAAQ,YACRN,QAhDc,WACpBvC,EAAMuB,QAAQC,KAAK,MAgDbC,UAAU,OAHZ,0BAOE,eAAC2C,EAAA,EAAD,CAAMC,SA5CY,SAACH,GAEzB,GADAA,EAAEI,iBACCvE,EAAMiE,WAAajE,EAAM0E,aAAa,CACvC,IAAIvE,EAAO,CACTwC,KAAM3C,EAAM2C,KACZC,MAAO5C,EAAM4C,MACbqB,SAAUjE,EAAMiE,SAChBS,aAAc1E,EAAM0E,cAEtBU,EAAQ,CAACF,QAAS,SAClBxE,IAAM+E,MAAN,sDAA2DxF,EAAMyC,IAAMvC,GACtES,MAAK,SAAUuC,GAEdC,MAAMD,EAAShD,KAAKkD,SACpB7C,EAAS,CACPmC,KAAM,GACNC,MAAO,GACPqB,SAAU,GACVS,aAAc,QAGjB1D,OAAM,WACLoC,MAAM,iBAKRgC,EAAQ,CAACF,QAAS,WAiBd,UACE,eAACb,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,iCACA,cAACR,EAAA,EAAKS,QAAN,CAAcd,KAAK,OAAOrB,KAAK,OAAOoC,YAAY,kCAASrD,UAAU,KAAKuD,UAAQ,EAACD,SAAUK,EAAW/C,MAAOtC,EAAM2C,UAGvH,eAAC0B,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,yDACA,cAACR,EAAA,EAAKS,QAAN,CAAcd,KAAK,QAAQrB,KAAK,QAAQoC,YAAY,kCAASE,UAAQ,EAACD,SAAUK,EAAW/C,MAAOtC,EAAM4C,WAG1G,eAACyB,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,6CAA8B,uBAC9B,qBAAKS,MAAM,WAAW/C,MAAO4C,EAA7B,SACE,uHAEF,cAACd,EAAA,EAAKS,QAAN,CAAcd,KAAK,WAAWrB,KAAK,WAAWoC,YAAY,kCAASE,UAAQ,EAACD,SAAUK,EAAW/C,MAAOtC,EAAMiE,cAIhH,eAACI,EAAA,EAAKO,MAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,yDAAgC,uBAChC,qBAAKS,MAAM,WAAW/C,MAAO4C,EAA7B,SACE,uHAEF,cAACd,EAAA,EAAKS,QAAN,CAAcd,KAAK,WAAWrB,KAAK,eAAeoC,YAAY,sEAAeE,UAAQ,EAACD,SAAUK,EAC9F/C,MAAOtC,EAAM0E,kBAIf,cAAC7B,EAAA,EAAD,CACEmB,KAAK,SACLlB,QAAQ,UACRpB,UAAU,iBAHZ,wCCxDC5B,cAAWC,aAAQ,SAACC,GAAD,OAASA,IAAjBD,EArDZ,SAACE,GACb,OACC,qCACG,qBAAKyB,UAAU,0CAAf,SACE,+BAAKzB,EAAMqB,SAAS,GAAGqB,KAAvB,sCAEF,cAACf,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKN,UAAU,sCAA3C,SACE,eAACE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,GAAhB,UACE,mBAAGL,UAAU,mBAAb,sCACA,cAACO,EAAA,EAAD,CAAQE,UAAQ,EAACT,UAAU,OAA3B,SACE,kCACC,+BACE,oBAAIA,UAAU,6BAAd,0BACA,6BAAKzB,EAAMqB,SAAS,GAAGqB,UAEzB,+BACE,oBAAIjB,UAAU,6BAAd,wDACA,6BAAKzB,EAAMqB,SAAS,GAAGsB,WAEzB,+BACE,oBAAIlB,UAAU,6BAAd,kDACA,6BAAKzB,EAAMqB,SAAS,GAAGoE,wBAK9B,eAAC7D,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,GAAhB,UACA,mBAAGL,UAAU,mBAAb,4CACE,cAACO,EAAA,EAAD,CAAQE,UAAQ,EAACT,UAAU,OAA3B,SACE,kCACC,+BACE,oBAAIA,UAAU,6BAAd,4CACA,0BAEF,+BACE,oBAAIA,UAAU,6BAAd,kDACA,0BAEF,+BACE,oBAAIA,UAAU,6BAAd,kDACA,gDC1CfiE,EAAW,GAiEA7F,kBAAWC,aAAQ,SAACC,GAAD,OAASA,IAAjBD,EA/DzB,SAAeE,GAAM,4CAGpB,sBAAAQ,EAAA,sEACQC,IACHC,IAAI,+CACJC,MAAK,SAACC,GACJ8E,EAAW9E,EAAIV,QAEjBa,OAAM,SAACC,GACLC,QAAQC,IAAIF,MAPnB,4CAHoB,sBA2BpB,OAbCf,mBAdmB,0CAcV0F,IAQTvE,qBAAU,WAJoB,IAAxBpB,EAAMqB,SAASC,QAChBtB,EAAMuB,QAAQC,KAAK,aASvB,sBAAKC,WAAS,EAAd,UACE,qBAAKA,UAAU,wBAAf,SACE,oBAAIC,cAAY,YAAhB,wCAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKN,UAAU,sBAA3C,SACGzB,EAAMqB,SAASC,OAAS,EAEvB,eAACU,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIV,UAAU,8CAAd,gCACA,oBAAIA,UAAU,8CAAd,0BACA,oBAAIA,UAAU,8CAAd,iDAGJ,gCACGiE,EAAStD,KAAI,SAACwD,GAAD,OACZ,+BACE,6BAAKA,EAAKlD,OACV,6BAAKkD,EAAKC,QACV,6BAAKD,EAAKE,sBAOlB,4ECGGhG,mBAAQ,SAACC,GAAD,OAASA,IAAjBD,EApDd,SAAaE,GAAO,IAAD,EACOC,mBAAS,CAChC8F,OAAQ,EACRC,SAAU,IAHM,mBACZjG,EADY,KACLQ,EADK,KAkBlB,OACE,eAAC,IAAD,WACC,eAAC0F,EAAA,EAAD,CAAQC,GAAG,OAAX,UACG,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,QAAQ3E,UAAU,8BAArC,wDACA,eAAC4E,EAAA,EAAD,CAAK5E,UAAU,UAAf,UACE,cAAC4E,EAAA,EAAIC,KAAL,CAAU7E,UAAU,YAApB,SAAiCzB,EAAMqB,SAASC,OAAQ,EAAvB,UAA8BtB,EAAMqB,SAAS,GAAGqB,KAAhD,gBAA0D,KAC3F,cAAC2D,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAAMC,GAAG,IAAI9E,UAAU,iBAAvB,oBACV,cAAC4E,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAAMC,GAAG,SAAS9E,UAAU,iBAA5B,2CAGZ,cAAC4E,EAAA,EAAD,CAAK5E,UAAU,WAAf,SACGzB,EAAMqB,SAASC,OAAQ,EACvB,cAAC+E,EAAA,EAAIC,KAAL,UACE,wBACC7E,UAAU,SACVc,QA5BO,WACjB,IAAIiB,ENoBA,CACJO,KAAM,UMpBN/D,EAAMwE,SAAShB,IA2BL9B,cAAY,YAHb,8CAOH,cAAC2E,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAAMC,GAAG,SAAS9E,UAAU,iBAAiBC,cAAY,aAAzD,6CAKd,cAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAI,cAAC,EAAD,CAAO5D,UAAW,SAACL,GAAD,OAjCtC,SAACA,GAEjBlC,EAAS,CACPwF,OAAQtD,EACRuD,SAAUjG,EAAMiG,WA6B0CW,CAAUlE,SACpE,cAAC,IAAD,CAAOgE,KAAK,SAASC,OAAQ,kBAAI,cAAC,EAAD,OACjC,cAAC,IAAD,CAAOD,KAAK,aAAaG,UAAWC,IACpC,cAAC,IAAD,CAAOJ,KAAK,cAAcC,OAAS,kBAAM,cAAC,EAAD,CAAMjE,GAAI1C,EAAMgG,YACzD,cAAC,IAAD,CAAOU,KAAK,cAAcG,UAAWE,IACrC,cAAC,IAAD,CAAOL,KAAK,SAASG,UAAWG,UCnDvBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvG,MAAK,YAAkD,IAA/CwG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASd,OACP,cAAC,IAAD,CAAUe,MAAOC,EAAjB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.aefb95f8.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\n\n\nconst userLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   async function userCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/users')\n       .then((res)=>{\n          localStorage.setItem('users', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('users'))\n      })\n  }\n    useState(userCall());\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editIdget(id);\n     props.history.push(\"/users/edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteUser(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/users/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   const userShowaccess = (id)=>{\n     props.history.push('/users/show')\n   }\n \n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">会員一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">名前</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">メールアドレス</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {state.data.map((value)=>(\n                  <tr key={value.name}>\n                     <td className=\"text-center align-middle\">\n                       <button \n                         style={userLink} \n                         onClick={(i)=>userShowaccess(value.id)}\n                       >{value.name}</button>\n                    </td>\n                    <td  className=\"text-center align-middle\">\n                      {value.email}\n                    </td>\n                    <td>\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteUser(value.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import { createStore } from \"redux\";\n\nlet init_data ={\n  userData: []\n}\n\nconst storeReducer = (state = init_data, action)=>{\n  switch (action.type) {\n    case 'LOGIN':\n      return loginReducer(state, action);\n    case 'LOGOUT':\n      return logoutReducer(state, action);\n    default:\n      return state\n  }\n}\n/**************[-----redux処理---------]*********************************************************************** */\nconst loginReducer = (state, action)=>{\n  let newData = state.userData.slice();\n  newData.splice(0);\n  newData.push(action.user);\n \n  return{\n    userData: newData\n  }\n}\nconst logoutReducer =(state, action)=>{\n    let newData = state.userData.slice();\n    newData.splice(0);\n    return{\n      userData: newData\n    }\n  }\n/**************[-----コンポーネント送受メソッド処理---------]*********************************************************************** */\nexport  const sendLoginData = (user)=>{\n  return{\n    type:'LOGIN',\n    user: user\n  };\n}\nexport const logoutAction =()=>{\n  return{\n    type: 'LOGOUT'\n  }\n}\nexport default createStore(storeReducer)","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport './App.css'\nimport { withRouter } from 'react-router'\nimport axios from 'axios'\nimport { connect} from 'react-redux';\nimport { sendLoginData } from './store/Store';\n\nconst  Login = (props)=>{\n\n  const[state, setState] = useState({\n    email: '',\n    password: ''\n  })\n\n  const newUserComponent = ()=>{\n    props.history.push('/users/new');  \n  }\n  const accesslogin = (e)=>{\n    e.preventDefault();\n    let data = {\n      email: state.email,\n      password: state.password,\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/sessions', data)\n      .then(function (response) {\n        let action = sendLoginData(response.data);\n        props.dispatch(action);\n        /*railsからメッセージ*/\n        alert('ログインしました'); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(err){\n        alert(err);\n      })\n  }\n  const inputText = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]:value});\n  }\n  return(\n   <>\n    <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-secondary\" data-testid=\"logintitle\">ログイン</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n          <Form onSubmit={accesslogin} data-testid=\"loginForm\">\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control \n                type=\"email\" \n                name=\"email\"\n                placeholder=\"(例)sample@example.com\" \n                className=\"h8\" \n                onChange={inputText}\n                required\n                value={state.email}\n                data-testid=\"ml\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label>\n              <Form.Control\n                 type=\"password\" \n                 name=\"password\"\n                 placeholder=\"(例)password\" \n                 onChange={inputText}\n                 required\n                 value={state.password}\n                 data-testid=\"ps\"\n              />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              <Button \n                variant=\"primary\" \n                onClick={newUserComponent}\n                className=\"btn-block mt-3\">\n                新規登録\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Login))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmation: ''\n  })\n  \n\n  const loginComponent = ()=>{\n    props.history.push('/login')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.post('https://uematsu-backend.herokuapp.com/users', data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規会員登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={loginComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(New)","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\n\n/**************************************************************************************** */\nconst  Edit = (props)=>{\n\n const getuserData = ()=>{\n  let user = []\n  let datas = JSON.parse(localStorage.getItem('users'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     user.push(data);\n    }\n  });\n  return user\n }\n  let user = getuserData();\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: user[0].name,\n    email: user[0].email,\n    password: '',\n    confirmation: ''\n  })\n\n  const homeComponent = ()=>{\n    props.history.push('/')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.patch(`https://uematsu-backend.herokuapp.com/users/${props.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2>{state.name}情報編集</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={homeComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(Edit)\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  Show = (props)=>{\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2>{props.userData[0].name}さんページ</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <Row>\n            <Col md={{span :7}}>\n              <p className=\"font-weight-bold\">会員情報</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">名前</th>\n                   <td>{props.userData[0].name}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">メールアドレス</th>\n                   <td>{props.userData[0].email}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用開始日</th>\n                   <td>{props.userData[0].created_at}</td>\n                 </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col md={{span :5}}>\n            <p className=\"font-weight-bold\">ご利用状況</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用回数</th>\n                   <td></td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">最終ご利用日</th>\n                   <td></td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">現在注文有無</th>\n                   <td></td>\n                 </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>    \n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import { useEffect, useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet itemData = [];\n\n function Index(props){\n  \n  /*************APIによるitem一覧**********************************/\n  async function itemsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n         itemData = res.data;\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(itemsCall());\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n\n  \n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">商品一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          {props.userData.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">カテゴリー</th>\n                </tr>\n              </thead>\n              <tbody>\n                {itemData.map((item)=>(\n                  <tr>\n                    <td>{item.name}</td>\n                    <td>{item.price}</td>\n                    <td>{item.category}</td>\n                  </tr>\n                ))}\n              </tbody>\n               \n            </Table>\n            :\n            <div>データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from \"react\";\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Index from './users/Index';\nimport Login from './Login';\nimport userNew from './users/New'\nimport Edit from './users/Edit'\nimport UserShow from './users/Show';\nimport ItemIndex from './items/Index';\nimport { connect } from \"react-redux\";\nimport { logoutAction } from './store/Store';\n\n\n function App(props){\n  const[state, setState] = useState({\n    editId: 0,\n    deleteId: 0\n  })\n  const userlogout = ()=>{\n    let action = logoutAction();\n    props.dispatch(action);\n    \n  }\n  const getEditId = (id)=>{\n\n    setState({\n      editId: id,\n      deleteId: state.deleteId\n    })\n  }\n  \n  return(\n    <BrowserRouter>\n     <Navbar bg=\"dark\">\n        <Navbar.Brand href=\"#home\"　className=\"text-white font-weight-bold\">加工依頼アプリ</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Item className=\"text-info\">{props.userData.length >0  ?`${props.userData[0].name}さん`: ''}</Nav.Item>\n          <Nav.Item><Link to=\"/\" className=\"text-light p-3\">HOME</Link></Nav.Item>\n          <Nav.Item><Link to=\"/items\" className=\"text-light p-3\">商品一覧</Link></Nav.Item>\n        </Nav>\n        \n        <Nav className=\"mr-right\">\n          {props.userData.length >0? \n           <Nav.Item>\n             <button \n              className=\"logout\"\n              onClick={userlogout}\n              data-testid=\"logintrue\"\n            >ログアウト</button>\n           </Nav.Item>\n          : \n          <Nav.Item><Link to=\"/login\" className=\"text-light p-3\" data-testid=\"loginfalse\">ログイン</Link></Nav.Item>\n          }\n         \n        </Nav>\n      </Navbar>\n      <Route exact path=\"/\" render={()=><Index editIdget={(id)=>getEditId(id)} />} /> \n      <Route path=\"/login\" render={()=><Login />} />\n      <Route path=\"/users/new\" component={userNew} />\n      <Route path=\"/users/edit\" render={ () => <Edit id={state.editId} />} />\n      <Route path=\"/users/show\" component={UserShow} />\n      <Route path=\"/items\" component={ItemIndex} />\n    </BrowserRouter>\n  )\n}\nexport default connect((state)=>state)(App)\n\n\n\n/*\ncomponentDidMount() {\n    const fetchInit = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" }\n    };\n\n    fetch(new URL(process.env.REACT_APP_SERVER_URL), fetchInit)\n      .then(response => response.json())\n      .then(response => this.setState(response));\n  }\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport datastore from './store/Store';\n\nReactDOM.render(\n  <Provider store={datastore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}