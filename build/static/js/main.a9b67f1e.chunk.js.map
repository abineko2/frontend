{"version":3,"sources":["store/Store.js","users/setting.js","users/UserPagination.jsx","users/PcIndex.jsx","users/PhoneIndex.jsx","users/Index.jsx","Login.jsx","users/New.jsx","users/Edit.jsx","users/MyPagination.jsx","users/History.jsx","users/Show.jsx","users/EmpShow.jsx","users/PhoneEmpShow.jsx","setting.js","users/Reservation.jsx","users/Order.jsx","items/MyPagination.jsx","items/PcIndex.jsx","items/PhoneIndex.jsx","items/Index.jsx","items/New.jsx","items/Edit.jsx","items/Process.jsx","items/setItemData.js","orders/PcIndex.jsx","orders/PhoneIndex.jsx","orders/Index.jsx","orders/New.jsx","orders/setItem.js","orders/Edit.jsx","images/fishs2.jpg","customer/PCIndex.jsx","customer/phoneStyle.js","customer/PhoneIndex.jsx","customer/Index.jsx","customer/setting.js","customer/Show.jsx","customer/PhoneShow.jsx","customer/NoData.jsx","customer/confirm.jsx","customer/PhoneConfirm.jsx","shopping/settiing.js","shopping/PcIndex.jsx","shopping/PhoneIndex.jsx","shopping/Index.jsx","shopping/Show.jsx","shopping/Reservation.jsx","sale/setting.js","sale/PcIndex.jsx","sale/PhoneIndex.jsx","sale/Index.jsx","App.js","reportWebVitals.js","index.js"],"names":["init_data","userData","orderItem","buyCarts","historyData","pageData","chartData","loginReducer","state","action","newData","slice","splice","push","user","logoutReducer","ordersReducer","data","ordersStockChangeReducer","datas","map","name","stock","Number","num","cartReducer","cartResetReducer","cartUpdateReducer","items","forEach","item","cartDeleteReducer","userHistoryReducer","history","searchReducer","chartReducer","sendLoginData","type","cartsAdd","ordersSend","ordersStockChange","cartDeleteCart","index","cartUpdate","historyDataSend","searchSend","chartSend","createStore","ordercheck","count","date","status","shopping_date","orderHistoryStatus","className","daySetting","newDate","Date","getFullYear","getMonth","getDate","todayParams","today","year","month","day","customerTodayOrders","allData","todayOrder","createDate","c_year","c_month","c_day","customerTomorrowOrders","tomorrowOrder","setDate","customerOrders","Orders","customers","users","customerUsers","admin","totalMoneyCalc","orders","total","order","price","statusView","withRouter","connect","props","useState","group","setGroup","paginationLength","JSON","parse","localStorage","getItem","length","active","No","Math","round","number","Pagination","Item","onClick","sendNumber","Last","groupPlus","First","groupMinus","paginationSend","userLink","border","background","color","outline","fontWeight","textDecoration","page","setPage","localData","setState","data-testid","Row","Col","md","span","offset","paginationNo","Table","striped","bordered","hover","value","style","i","id","axios","get","then","res","dispatch","catch","error","console","log","email","Button","variant","editPage","window","confirm","delete","response","alert","message","deleteUser","buttonWidth","width","marginRight","class","colSpan","editIdget","minDeviceWidth","maxDeviceWidth","password","inputText","e","target","Form","onSubmit","preventDefault","post","confirmation","data2","user_id","setItem","stringify","removeItem","err","Group","Label","Control","placeholder","onChange","required","display","show","setShow","userInput","getuserData","patch","first","last","floor","seachDatarequest","process","loginUserCheck","create","rowSpan","timeSetting","baseData","hour","getHours","min","getMinutes","toDoubleDigits","ulArea","marginTop","image","height","Image","src","alt","roundedCircle","receiving_time","backButton","itemLink","imageShow","paginationStyle","marginBottom","modalData","itemData","openModal","category","processItem","deleteItem","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","rounded","processes","info","itemEditIdget","processIdget","file","setImage","itemInput","params","FormData","append","headers","File","label","multiple","accept","files","as","cols","rows","useEffect","setProcess","options","selectedOption","setSelectedOption","obj","isMulti","defaultValue","processing_name","deleteProcess","deleteOrder","margin","mt-3","orderEditIdget","formSelectItems","dochange","sendData","defaultvalue","getitemData","rightAreaTable","overflow","nameTitle","padding","maxWidth","buycheck","fontSize","textAlign","borderLeft","buttonHeight","fixItemData","sendCustomerData","buyItem","icon","faCartPlus","itemTotalMoney","sendCartItemToConfirm","faCashRegister","HeaderImagePhone","ArticlePhone","UlPhone","listStyle","LlPhone","phoneBuyCartMain","margimBottom","sameItemCheck","sameItemCount","selectItemCheck","localstorageChange","table","time","propData","check","minusNumber","changeItemData","array","stockOption","split","NoData","title","fontFamily","th","orderData","cartNum","setNumber","timesChange","carts","faShoppingCart","faFish","faYenSign","faCalculator","faUtensils","size","custom","currentNumber","changeNumber","calcNumber","cartItemName","stateData","dataNumber","propOrders","buycart","thiscartData","delAction","numArray","doSelect","selectNumber","n","action2","viewDataBranch","todayOdrersChecker","shoppings","shopping","todayOrderExisting","todayObjects","t_date","t_year","t_month","t_day","customButton","borderBottom","shopingData","orderStatus","onMouseOver","document","getElementById","hoverButton","onMouseOut","outButton","showShoppingStatus","user_name","sendShoppingData","font","sendStatusNumber","statusLayout","faTruck","faClipboard","totalSales","合計","salesRate","allTotal","ResponsiveContainer","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","week","editId","deleteId","itemEditId","processId","OrderEditId","customerItem","shoppingShow","cartItem","changeItem","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","faUser","to","cartAction","exact","path","render","getEditId","component","userNew","UserShow","PhoneEmpShow","UserOrder","OrderEdit","getItemEditId","getProcessId","ItemNew","getOrderEditId","OrderNew","shoppingData","SalesIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","datastore","onBeforeunload"],"mappings":"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","file":"static/js/main.a9b67f1e.chunk.js","sourcesContent":["import { createStore } from \"redux\";\n\nlet init_data ={\n  userData: [],\n  orderItem: null,\n  buyCarts: [],\n  historyData: null,\n  pageData: null,\n  chartData: null\n}\n\nconst storeReducer = (state = init_data, action)=>{\n  switch (action.type) {\n    case 'LOGIN':\n      return loginReducer(state, action);\n    case 'LOGOUT':\n      return logoutReducer(state, action);\n    case 'ORDER':\n      return ordersReducer(state, action);\n    case 'ORDERSTOCK':\n      return ordersStockChangeReducer(state, action);\n    case 'CARTADD':\n      return cartReducer(state, action);\n    case 'CARTRESET':\n      return cartResetReducer(state, action);\n    case 'CARTDELETE':\n      return cartDeleteReducer(state, action);\n    case 'CARTUPDATE':\n      return cartUpdateReducer(state, action);\n    case 'USERHISTORY':\n      return userHistoryReducer(state, action);  \n    case 'SEARCHDATA':\n      return searchReducer(state, action);  \n    case 'CHART':\n      return chartReducer(state, action);  \n    default:\n      return state\n  }\n}\n/**************[-----redux処理---------]*********************************************************************** */\nconst loginReducer = (state, action)=>{\n  let newData = state.userData.slice();\n  newData.splice(0);\n  newData.push(action.user);\n \n  return{\n    userData: newData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst logoutReducer =(state, action)=>{\n    let newData = state.userData.slice();\n    newData.splice(0);\n    return{\n      userData: newData,\n      buyCarts: state.buyCarts,historyData: state.historyData\n    }\n  }\nconst ordersReducer = (state, action)=>{\n  let data = state.orderItem;\n  data = action.data;\n \n  return{\n    userData: state.userData,\n    orderItem: data,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\n/*買い物確認削除ボタン*/\nconst ordersStockChangeReducer = (state, action) =>{\n  let datas = state.orderItem.slice();\n  datas.map((data)=>{\n    if(data.name === action.name){\n      let stock = Number(data.stock);\n      stock += Number(action.num); /*在庫元に戻す*/\n      data.stock = stock;\n    }\n  });\n  return{\n    userData: state.userData,\n    orderItem: datas,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst cartReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.push(action.data);\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst cartResetReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst cartUpdateReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  action.items.forEach((item) => {\n    data.push(item);\n  });\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\nconst cartDeleteReducer = (state, action)=>{\n  let datas = state.buyCarts.slice();\n  datas.splice(action.num, 1);\n  \n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: datas,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\n\nconst userHistoryReducer = (state, action)=>{\n  let history = action.data;\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: history,\n    pageData: state.pageData,\n    chartData: state.chartData\n  }\n}\n/*ページネーション検索*/\nconst searchReducer = (state, action)=>{\n  let data = action.data;\n  \n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: data,\n    chartData: state.chartData\n  }\n}\n/*グラフ用*/\nconst  chartReducer = (state, action)=>{\n  let data = action.data;\n  \n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData,\n    chartData: data\n  }\n}\n/**************[-----コンポーネント送受メソッド処理---------]*********************************************************************** */\nexport  const sendLoginData = (user)=>{\n  return{\n    type:'LOGIN',\n    user: user\n  };\n}\nexport const logoutAction =()=>{\n  return{\n    type: 'LOGOUT'\n  }\n}\nexport const cartsAdd = (item)=>{\n  return{\n    type: 'CARTADD',\n    data: item\n  }\n}\nexport const ordersSend = (data)=>{\n  return{\n    type: 'ORDER',\n    data: data\n  }\n}\nexport const ordersStockChange = (name, num)=>{\n  return{\n    type: 'ORDERSTOCK',\n    name: name,\n    num: num\n  }\n}\nexport const cartEmpty = ()=>{\n  return{\n    type: 'CARTRESET'\n  }\n}\nexport const cartDeleteCart = (index)=>{\n  return{\n    type: 'CARTDELETE',\n    num: index\n  }\n}\nexport const cartUpdate = (items)=>{\n  return{\n    type: 'CARTUPDATE',\n    items: items\n  }\n}\nexport const historyDataSend = (data)=>{\n  return{\n    type: 'USERHISTORY',\n    data: data\n  }\n}\nexport const searchSend = (data)=>{\n  return{\n    type: 'SEARCHDATA',\n    data: data\n  }\n}\n/*グラフ用*/\nexport const chartSend = (data)=>{\n  return{\n    type: 'CHART',\n    data: data\n  }\n}\nexport default createStore(storeReducer)","import React from 'react';\n\n/*注文された商品中受け渡し済み以外申請中と加工済みの件数検知*/\n\nexport const ordercheck = (datas) =>{\n   let count = 0;\n   let date = null;\n  if(datas){\n    datas.forEach(data => {\n        if(data.status === 0 || data.status === 1){\n            count += 1;\n            date = data.shopping_date;\n        }\n    });\n    return {\n        count:  count + '件注文',\n        date: date\n    }\n  }\n  else{\n    return '履歴なし';\n  }\n}\n/* 注文された商品の履歴状況分岐  */\n\nexport const orderHistoryStatus = (status) =>{\n  switch (status) {\n    case 0:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 1:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 2:\n      return <div className=\"font-weight-bold\">完了済み</div>\n    default:\n      break;\n  }\n}\n/****************************************************************************************************** */\n/*日付の表示設定*/\nexport const daySetting = (date)=>{\n  let newDate = new Date(date);\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let day = newDate.getDate();\n  return year + '年' + month + '月' +day +'日';\n}\n/***************************************************************************************************** */\n/*共通パラメーター*/\nconst todayParams =()=>{\n  /*本日*/\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n  return{\n    year: year,\n    month: month,\n    day: day\n  }\n}\n\n/*当日日付のみのデータ抽出 */\n\nexport const customerTodayOrders = (allData)=>{\n  let todayOrder = [];\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( todayParams().year === c_year && todayParams().month === c_month && todayParams().day === c_day){\n        todayOrder.push(data);\n      }\n    })\n  }\n  return todayOrder;\n}\n\n/*明日日付のみのデータ抽出 */\n\nexport const customerTomorrowOrders = (allData)=>{\n  let tomorrowOrder = [];\n  const today = new Date();\n  today.setDate(today.getDate() + 1);\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( year === c_year && month === c_month && day === c_day){\n        tomorrowOrder.push(data);\n      }\n    })\n  }\n  return tomorrowOrder;\n}\n\n\n\n\n\n  /*当日以外の日付のみのデータ抽出 */\n\nexport const customerOrders = (allData)=>{\n  let Orders = [];\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if(todayParams().year >= c_year && todayParams().month >= c_month && todayParams().day > c_day){\n        Orders.push(data);\n      }\n    })\n  }\n  return Orders;\n}\n/*お客様一覧でユーザーのうち従業員を省いた一覧*/\n\nexport const customers =(users)=>{\n  let customerUsers = [];\n  users.forEach((user)=>{\n    if(!(user.admin === true)){\n      customerUsers.push(user);\n    }\n  });\n  return customerUsers;\n}\n/*お客様注文確認ページにて合計金額計算 */\n\nexport const totalMoneyCalc =(orders)=>{\n  let total = 0;\n  orders.map((order)=>{\n    total += order.price * order.num;\n  })\n  return total;\n}\n\nexport const statusView = (status)=>{\n  switch (status) {\n    case 0:\n      return <div className=\"bg-info\">申請中</div>;\n    case 1:\n      return <div className=\"bg-warning\">加工済みです</div>;\n    case 2:\n      return <div className=\"bg-danger\">受け渡し済み</div>;\n    default:\n      break;\n  }\n}\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { customers } from './setting';\n\n\n\nconst  UserPagination = (props)=>{\n  /*********************ステート******************************** */\n  const[group, setGroup] = useState(0);\n    let paginationLength =  customers(JSON.parse(localStorage.getItem('users'))).length;\n    let active = props.No +1;\n    let items = [];\n    \n    if(group === 0 &&  Math.round(paginationLength) > 5){  /*初期のページネーション データ5以上*/\n      for (let number = 1; number <= 5; number++) {\n        items.push(\n          <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n            {number}\n          </Pagination.Item>,\n        );\n      }\n      items.push(\n        <Pagination.Last onClick={()=>groupPlus()}/>\n      );\n    }\n    else if(group === 0 &&  Math.round(paginationLength) <5){   /*初期のページネーション データ5以下*/\n      for (let number = 1; number <= Math.round(paginationLength /2); number++) {\n        items.push(\n          <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n            {number}\n          </Pagination.Item>,\n        );\n      }\n    }\n    else if(group >=1){\n      items.push(\n        <Pagination.First onClick={()=>groupMinus()} />\n      );\n      for (let number = group * 5 + 1; number <= Math.round(paginationLength /2) * group; number++) {\n        items.push(\n          <Pagination.Item key={number} active={number === active} onClick={()=>sendNumber(number-1)}>\n            {number}\n          </Pagination.Item>,\n        );\n      }\n      if(Math.round(paginationLength /2) *group * 5 <= paginationLength ){ /*５の倍数で分けているため数字x5が実際のユーザー数より多ければ進む表示*/\n        items.push(\n          <Pagination.Last onClick={()=>groupPlus()} />\n        );\n      }\n      \n    }\n    \n  /************************ページネーション処理**************************************** */\n  const sendNumber =(num)=>{\n      props.paginationSend(num);\n  }\n  /************************ページネーション戻るボタン処理**************************************** */\n  const groupMinus = () =>{\n    setGroup(group -1);\n  }\n   /************************ページネーション進むボタン処理**************************************** */\n   const groupPlus = () =>{\n    setGroup(group + 1);\n  }\n  return(\n   <>\n    <Pagination >{items}</Pagination>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(UserPagination))","import {  useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport {historyDataSend} from '../store/Store';\nimport { customers } from './setting';\nimport UserPagination from './UserPagination';\n\n\nconst userLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\n function PcIndex(props){\n  const[page, setPage] = useState(0);\n  let localData = JSON.parse(localStorage.getItem('users')).slice(page * 2, page * 2 + 4 )\n  const[state,setState] = useState({\n    data: localData? localData : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function userCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/users')\n       .then((res)=>{\n          localStorage.setItem('users', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('users'))\n      })\n  }\n    useState(userCall());*/\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editPage(id);\n     props.history.push(\"/users/edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteUser(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/users/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   const userShowaccess = (id)=>{\n    axios\n    .get(`https://uematsu-backend.herokuapp.com/history/show/${id}`)\n    .then((res)=>{\n       const action = historyDataSend(res.data);\n       props.dispatch(action);\n\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n     props.history.push('/users_empshow');\n   }\n   /********************************ページネーション(通常ボタン)処理**************************************** */\n  const paginationNo = (num)=>{\n    switch (num) {\n      case 0:\n        setState({\n          data: JSON.parse(localStorage.getItem('users')).slice(num * 2, num * 2 +4)\n        })\n       \n        break;\n      default:\n        setState({\n          data: JSON.parse(localStorage.getItem('users')).slice(num * 2 + 2, (num * 2 + 2) + 2 )\n        })\n        break;\n    }\n    setPage(num);\n  }\n \n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">会員一覧</h2>\n      </div>\n      \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n        <UserPagination \n          No={page} \n          paginationSend={(num)=>paginationNo(num)} \n          />\n          {state.data.length > 0 ?\n           \n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">名前</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">メールアドレス</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {customers(state.data).map((value)=>(\n                  <tr key={value.name}>\n                     <td className=\"text-center align-middle\">\n                       <button \n                         style={userLink} \n                         onClick={(i)=>userShowaccess(value.id)}\n                       >{value.name}</button>\n                    </td>\n                    <td  className=\"text-center align-middle\">\n                      {value.email}\n                    </td>\n                    <td className=\"text-center\">\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3 w-25\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteUser(value.id)}\n                        className=\"ml-3 w-25\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import {  useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport {historyDataSend} from '../store/Store';\nimport { customers } from './setting';\n\n\nconst userLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst buttonWidth={\n  width: '45%',\n  marginRight:'5%'\n}\n\n\n function PhoneIndex(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function userCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/users')\n       .then((res)=>{\n          localStorage.setItem('users', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('users'))\n      })\n  }\n    useState(userCall());*/\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editPage(id);\n     props.history.push(\"/users/edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteUser(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/users/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   const userShowaccess = (id)=>{\n    axios\n    .get(`https://uematsu-backend.herokuapp.com/history/show/${id}`)\n    .then((res)=>{\n       const action = historyDataSend(res.data);\n       props.dispatch(action);\n\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n     props.history.push('/users_phone_empshow');\n   }\n \n  return(\n    <div className=\"w-100\">\n      <div className=\"text-center mt-2 mb-4\">\n        <h2 data-testid=\"usertitle\">会員一覧</h2>\n      </div>\n      <div class=\"bg-white\"></div>\n      <div className=\"w-100 bg-white\">\n          {state.data.length > 0 ?\n            <Table striped bordered hover>\n              <tbody>\n                {customers(state.data).map((value)=>(\n                  <tr key={value.name}>\n                    <Table bordered>\n                      <tbody>\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">名前</th>\n                          <td className=\"text-center align-middle\">\n                            <button \n                              style={userLink} \n                              onClick={(i)=>userShowaccess(value.id)}\n                            >{value.name}</button>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">メールアドレス</th>\n                          <td  className=\"text-center align-middle\">\n                            {value.email}\n                          </td>\n                        </tr>\n\n                        <tr>\n                            <td colSpan=\"2\">\n                              <Button \n                                variant=\"primary\"\n                                onClick={(i)=>editPage(value.id)}\n                                style={buttonWidth}\n                              >編集</Button>\n\n                              <Button \n                                variant=\"danger\"\n                                onClick={(i)=>deleteUser(value.id)}\n                                style={buttonWidth}\n                              >削除</Button>\n                          </td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n      </div>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneIndex))","import {  useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\nimport MediaQuery from \"react-responsive\";\n\n\n function Index(props){\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editIdget(id);\n     props.history.push(\"/users/edit\");\n   } \n\n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          editPage={(i)=>editPage(i)}\n        />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex \n          editPage={(i)=>editPage(i)}\n        />\n      </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport './App.css'\nimport { withRouter } from 'react-router'\nimport axios from 'axios'\nimport { connect} from 'react-redux';\nimport { sendLoginData, searchSend, ordersSend, chartSend } from './store/Store';\n\nconst  Login = (props)=>{\n\n  const[state, setState] = useState({\n    email: '',\n    password: ''\n  })\n\n  const newUserComponent = ()=>{\n    props.history.push('/users/new');  \n  }\n  const accesslogin = (e)=>{\n    e.preventDefault();\n    let data = {\n      email: state.email,\n      password: state.password,\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/sessions', data)\n      .then(function (response) {\n\n        if(response.data.name){\n            let action = sendLoginData(response.data);\n            props.dispatch(action);\n            /*railsからメッセージ*/\n            alert('ログインしました'); \n            setState({\n              name: '',\n              email: '',\n              password: '',\n              confirmation: ''\n            })\n            let data2 = {\n              user_id: response.data.id,\n              num: 1\n            }\n            axios\n                .get('https://uematsu-backend.herokuapp.com/users')\n                .then((res)=>{\n                    localStorage.setItem('users', JSON.stringify(res.data));\n                    \n                })\n                .catch((error)=>{\n                    console.log(error);\n                })       \n            axios.post('https://uematsu-backend.herokuapp.com/history/search', data2)\n            .then(function (response) {\n              let action = searchSend(response.data);\n              props.dispatch(action);\n            })\n            .catch(function(){\n              alert('error');\n            })\n             axios\n            .get('https://uematsu-backend.herokuapp.com/users')\n            .then((res)=>{\n                localStorage.setItem('users', JSON.stringify(res.data));\n                \n            })\n            .catch((error)=>{\n                console.log(error);\n            })\n           axios\n            .get('https://uematsu-backend.herokuapp.com/items')\n            .then((res)=>{\n              localStorage.removeItem('items');\n              setState(res.data);\n              localStorage.setItem('items', JSON.stringify(res.data));\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n          \n          axios\n          .get('https://uematsu-backend.herokuapp.com/orders')\n          .then((res)=>{\n              localStorage.setItem('orders', JSON.stringify(res.data));\n              let action = ordersSend(res.data);\n              props.dispatch(action);\n              if(localStorage.getItem('orders') && localStorage.getItem('users')){\n                response.data.admin === true? props.history.push('/orders') :  props.history.push('/users/show');\n              }\n             \n          })\n          .catch((error)=>{\n              console.log(error);\n          })\n          axios\n            .get('https://uematsu-backend.herokuapp.com/shoppings')\n            .then((res)=>{\n              localStorage.removeItem('shoppings');\n              setState(res.data);\n              localStorage.setItem('shoppings', JSON.stringify(res.data));\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n          axios\n            .get('https://uematsu-backend.herokuapp.com/sales')\n            .then((res)=>{\n                let action = chartSend(res.data);\n                props.dispatch(action);\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n       setState({\n        \n      })\n        \n          }\n          else{\n            alert('ログイン失敗');\n          }\n      })\n      .catch(function(err){\n        alert(err);\n      })\n      \n  }\n  const inputText = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]:value});\n  }\n  return(\n   <>\n    <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-secondary\" data-testid=\"logintitle\">ログイン</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n          <Form onSubmit={accesslogin} data-testid=\"loginForm\">\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control \n                type=\"email\" \n                name=\"email\"\n                placeholder=\"(例)sample@example.com\" \n                className=\"h8\" \n                onChange={inputText}\n                required\n                value={state.email}\n                data-testid=\"ml\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label>\n              <Form.Control\n                 type=\"password\" \n                 name=\"password\"\n                 placeholder=\"(例)password\" \n                 onChange={inputText}\n                 required\n                 value={state.password}\n                 data-testid=\"ps\"\n              />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              <Button \n                variant=\"primary\" \n                onClick={newUserComponent}\n                className=\"btn-block mt-3\">\n                新規登録\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Login))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmation: ''\n  })\n  \n\n  const loginComponent = ()=>{\n    props.history.push('/login')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.post('https://uematsu-backend.herokuapp.com/users', data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規会員登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={loginComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(New)","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  Edit = (props)=>{\n\n const getuserData = ()=>{\n  let user = []\n  let datas = JSON.parse(localStorage.getItem('users'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     user.push(data);\n    }\n  });\n  return user\n }\n  let user = getuserData();\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: user.length>0? user[0].name : '',\n    email: user.length>0?  user[0].email : '',\n    password: '',\n    confirmation: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n\n  const homeComponent = ()=>{\n    props.history.push('/')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.patch(`https://uematsu-backend.herokuapp.com/users/${props.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2>{state.name}情報編集</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={homeComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Edit));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { searchSend } from '../store/Store';\n\nconst  MyPagination = (props)=>{\n  let items = [];\n  const[state, setState] = useState({\n    first: 1,\n    last: ((props.userData[0].orders[0]) && props.userData[0].orders[0].length>=5)? \n    Math.floor(props.userData[0].orders[0].length/5 >10)?  10 : Math.floor(props.userData[0].orders[0].length/5)   : 1,\n    active: 1\n  });\n  for(let i=state.first; i<=state.last; i++){\n    items.push(\n      <Pagination.Item key={i} active={i == state.active} onClick={()=>seachDatarequest(i)}>{i}</Pagination.Item>\n    )\n  }\n  const seachDatarequest = (i)=>{\n    let data = {\n      user_id: props.userData[0].id,\n      num: i\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/history/search', data)\n    .then(function (response) {\n      let action = searchSend(response.data);\n      props.dispatch(action);\n    })\n    .catch(function(){\n      alert('error');\n    })\n    setState({\n      first: state.first,\n      last: state.last,\n      active: i\n    })\n  }  \n  \n  return(\n   <>\n    <Pagination >{items}</Pagination>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(MyPagination))","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { orderHistoryStatus } from \"./setting\";\nimport MyPagination from './MyPagination';\n\nconst  History = (props)=>{\n\n  return(\n   <div>\n     <MyPagination />\n    {props.pageData? \n      <>\n       <Table bordered className=\"mt-3\">\n         <thead>\n           <tr>\n             <th className=\"bg-primary text-white text-center\">注文日</th>\n             <th className=\"bg-primary text-white text-center\">注文商品</th>\n             <th className=\"bg-primary text-white text-center\">加工法</th>\n             <th className=\"bg-primary text-white text-center\">価格</th>\n             <th className=\"bg-primary text-white text-center\">注文数</th>\n             <th className=\"bg-primary text-white text-center\">状況</th>\n           </tr>\n         </thead>\n         <tbody>\n           {props.pageData.map((data)=>(\n             <tr>\n               <td className=\"font-weight-bold text-center\">{data.shopping_date}</td>\n               <td className=\"font-weight-bold text-center\">{data.name}</td>\n               <td className=\"font-weight-bold text-center\">{data.process}</td>\n               <td className=\"font-weight-bold text-center\">{data.price}</td>\n               <td className=\"font-weight-bold text-center\">{data.num}</td>\n               <td className=\"font-weight-bold text-center\">{orderHistoryStatus(data.status)}</td>\n             </tr>\n           ))}\n         </tbody>\n       </Table>\n      </>\n      : \n      <div className=\"p-5 bg-secondary mt-3 text-white font-weight-bold\">履歴がありません。</div>\n    }\n   </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(History))","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { historyDataSend, ordersSend } from '../store/Store';\nimport { ordercheck, daySetting } from './setting';\nimport History from './History';\n\n\n/**************************************************************************************** */\nconst  Show = (props)=>{\n const sendShoppindData = ()=>{\n  axios\n  .get('https://uematsu-backend.herokuapp.com/orders')\n  .then((res)=>{\n     let action = ordersSend(res.data);\n     props.dispatch(action);\n     \n  })\n  .catch((error)=>{\n     console.log(error);\n  })\n }\n useState(sendShoppindData);\n   \n  /*************APIによるuser一覧**********************************/\n   async function orderCall(){\n     \n    await axios\n      .get(`https://uematsu-backend.herokuapp.com/history/show/${props.userData[0].id}`)\n      .then((res)=>{\n         const action = historyDataSend(res.data);\n         props.dispatch(action);\n\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n }\n \n\n\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck)\n  return(\n   <>\n      {props.userData.length >0?\n       <>\n        <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n          <h2 className=\"text-white font-weight-bold\">{props.userData[0].name}さんページ</h2>\n        </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <Row>\n            <Col md={{span :7}}>\n              <p className=\"font-weight-bold\">会員情報</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">名前</th>\n                   <td>{props.userData[0].name}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">メールアドレス</th>\n                   <td>{props.userData[0].email}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用開始日</th>\n                   <td>{daySetting(props.userData[0].create)}</td>\n                 </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col md={{span :5}}>\n            <p className=\"font-weight-bold\">ご利用状況</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用回数</th>\n                   <td className=\"text-center\">{props.userData[0].orders[0]? props.userData[0].orders[0].length : 0 }</td>\n                 </tr>\n               \n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">現在注文有無</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).count? ordercheck(props.userData[0].orders[0]).count : '未使用'}</td>\n                 </tr>\n\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">注文日</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).date? ordercheck(props.userData[0].orders[0]).date : '未使用'}</td>\n                 </tr>\n               \n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>    \n      </Row>\n      </>\n        : \n        loginUserCheck()\n      }\n      {/* 履歴エリア */}\n\n      <div className=\"text-center mt-3 font-weight-bold\">\n          <h2 className=\"text-light font-weight-bold\">商品依頼履歴</h2>\n      </div>\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 mt-2 pb-4 bg-light shadow\">\n          {/* ログアウト中は無効 */}\n          \n          {props.userData.length >0? <History /> : ''}\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { daySetting, customerTodayOrders,customerOrders } from './setting';\n\n\n\n/**************************************************************************************** */\nconst  EmpShow = (props)=>{\n   \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\" className=\"text-light font-weight-bold\">{props.historyData? props.historyData.name : ''}&nbsp;注文履歴</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【現在注文中の表品一覧】</p>\n         {(props.historyData && customerTodayOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerTodayOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n      {/* 当日以外の履歴 */}\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【過去の注文一覧】</p>\n         {(props.historyData && customerOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(EmpShow))\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { daySetting, customerTodayOrders,customerOrders } from './setting';\n\n\n\n/**************************************************************************************** */\nconst  EmpShow = (props)=>{\n   \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\" className=\"text-light font-weight-bold\">{props.historyData? props.historyData.name : ''}&nbsp;注文履歴</h2>\n      </div>\n      <div className=\"w-100 bg-white\">\n         <p className=\"font-weight-bold text-center\">【現在注文中の表品一覧】</p>\n         {(props.historyData && customerTodayOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered className=\"w-100\"> \n              <tbody>\n                {customerTodayOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <Table bordered>\n                        <tbody>\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">日付</th>\n                          <td colSpan=\"4\" className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">品名</th>\n                          <td className=\"text-center font-weight-bold\">{data.name}</td>\n                          <th className=\"text-white text-center bg-primary align-middle\">加工名</th>\n                          <td colSpan=\"2\" className=\"text-center font-weight-bold\">{data.process}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">価格</th>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                             {data.price}<br/>(単価)\n                          </td>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                            {Number(data.num) * Number(data.price)}<br/>(合計)\n                          </td>\n                          <th className=\"text-white text-center bg-primary align-middle\">数</th>\n                          <td className=\"text-center font-weight-bold align-middle\">{data.num}</td>\n                        </tr>\n                      </tbody>\n                     \n                    </Table>\n                    \n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }  \n      </div>\n\n      {/* 当日以外の履歴 */}\n\n      <div class=\"w-100 bg-light\">\n         <p className=\"font-weight-bold text-center\">【過去の注文一覧】</p>\n         {(props.historyData && customerOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered className=\"w-100\">\n              <tbody>\n                {customerOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <Table bordered>\n                    <tbody>\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">日付</th>\n                          <td colSpan=\"4\" className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">品名</th>\n                          <td className=\"text-center font-weight-bold\">{data.name}</td>\n                          <th className=\"text-white text-center bg-primary align-middle\">加工名</th>\n                          <td colSpan=\"2\" className=\"text-center font-weight-bold\">{data.process}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-white text-center bg-primary align-middle\">価格</th>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                             {data.price}<br/>(単価)\n                          </td>\n                          <td className=\"text-center font-weight-bold align-middle\">\n                            {Number(data.num) * Number(data.price)}<br/>(合計)\n                          </td>\n                          <th className=\"text-white text-center bg-primary align-middle\">数</th>\n                          <td className=\"text-center font-weight-bold align-middle\">{data.num}</td>\n                        </tr>\n                      </tbody>\n                    </Table>\n    \n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n      </div>\n\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(EmpShow))\n","\nexport const timeSetting = (baseData)=>{\n   let date = new Date(baseData);\n   let hour = date.getHours();\n   let min = date.getMinutes();\n   return hour + \":\" + toDoubleDigits(min);\n}\nconst toDoubleDigits = function(num) {\n   num += \"\";\n   if (num.length === 1) {\n     num = \"0\" + num;\n   }\n  return num;     \n} ","import React, { useState } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport {customerTomorrowOrders , totalMoneyCalc } from './setting';\nimport { timeSetting } from '../setting';\n\nconst ulArea ={\n  marginTop: '-4%'\n}\nconst image={\n  width: '100px',\n  height: '100px'\n}\n\n/*****************************お客様用注文一覧ページ*********************************************************** */\nconst  Reservation = (props)=>{\n  return(\n    <>  \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <div className=\"text-center\">【明日予約商品】</div>\n          {((props.userData.length>0) && ( customerTomorrowOrders (props.userData[0].orders[0]).length >0))? \n           <h3 className=\"mt-2\">【注文合計金額: \n           <span className=\"text-danger font-weight-bold\">\n             {totalMoneyCalc(customerTomorrowOrders(props.userData[0].orders[0]))}\n           </span>円】</h3>\n          : \n          ''\n          }\n         \n          <ul class=\"list-group\" style={ulArea}>\n          {((props.userData.length>0) && ( customerTomorrowOrders (props.userData[0].orders[0]).length >0))? customerTomorrowOrders(props.userData[0].orders[0]).map((data)=>(\n            <li className=\"list-group-item mt-5\">\n              <Row>\n                <Col md=\"12\">\n                  <ul className=\"list-inline\">\n                    <li className=\"list-inline-item h4 ml-5\">\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${data.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </li>\n                    <li className=\"list-inline-item h5 mr-5\">商品名:{data.name}</li>\n                    <li className=\"list-inline-item h5 mr-3\">価格:<span className=\"text-danger\">{data.price}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">注文数:{data.num}</li>\n                    <li className=\"list-inline-item h5 mr-3\">合計:<span className=\"text-danger\">{data.price *data.num}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">依頼加工:{data.process}</li>\n                    <li className=\"list-inline-item h5 mr-3\">受け取り時間:{timeSetting(data.receiving_time)}</li>\n                  </ul>\n                \n                </Col>\n              </Row>\n            </li>\n          )) :   <div className=\"p-5 text-white text-center mt-5 bg-secondary font-weight-bold\">データがありません</div>}\n          </ul>\n        </Col>\n      </Row>\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(Reservation));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport { customerTodayOrders, totalMoneyCalc, statusView } from './setting';\nimport Reservation from './Reservation';\nimport { timeSetting } from '../setting';\n\nconst ulArea ={\n  marginTop: '-4%'\n}\nconst image={\n  width: '100px',\n  height: '100px'\n}\n\n/*****************************お客様用注文一覧ページ*********************************************************** */\nconst  Order = (props)=>{\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  \n  return(\n    <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"font-weight-bold text-light\">現在注文商品</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <div className=\"text-center\">【本日受取商品】</div>\n          {((props.userData.length>0) && (customerTodayOrders(props.userData[0].orders[0]).length >0))?\n           <h3 className=\"mt-2\">【注文合計金額: \n           <span className=\"text-danger font-weight-bold\">\n             {totalMoneyCalc(customerTodayOrders(props.userData[0].orders[0]))}\n           </span>円】</h3>\n           : \n           ''}\n          \n          <ul class=\"list-group\" style={ulArea}>\n          {((props.userData.length>0) && (customerTodayOrders(props.userData[0].orders[0]).length >0))? customerTodayOrders(props.userData[0].orders[0]).map((data)=>(\n            <li className=\"list-group-item mt-5\">\n              <Row>\n                <Col md=\"12\">\n                  <ul className=\"list-inline\">\n                    <li className=\"list-inline-item h4 ml-5\">\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${data.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </li>\n                    <li className=\"list-inline-item h5 mr-5\">商品名:{data.name}</li>\n                    <li className=\"list-inline-item h5 mr-3\">価格:<span className=\"text-danger\">{data.price}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">注文数:{data.num}</li>\n                    <li className=\"list-inline-item h5 mr-3\">合計:<span className=\"text-danger\">{data.price *data.num}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">依頼加工:{data.process}</li>\n                    <li className=\"list-inline-item h5 mr-3\">受け取り時間:{timeSetting(data.receiving_time)}</li>\n                    <li className=\"list-inline-item text-white pt-2 pb-2 mr-3\">{ statusView(data.status) }</li>\n                  </ul>\n                \n                </Col>\n              </Row>\n            </li>\n          )) :   <div className=\"p-5 text-white text-center mt-5 bg-secondary font-weight-bold\">データがありません</div>}\n          </ul>\n        </Col>\n      </Row>\n      <br/>\n      <Reservation />\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(Order));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\n\nconst  MyPagination = (props)=>{\n    let paginationLength = JSON.parse(localStorage.getItem('items')).length;\n    let active = props.No +1;\n    let items = [];\n    if(props.No > 0){\n       items.push(\n        <Pagination.First onClick={()=>backButton()} /> \n       )\n    }\n    for (let number = 1; number <= paginationLength /2; number++) {\n      items.push(\n        <Pagination.Item key={number} active={number === active} onClick={(num)=>sendNumber(number-1)}>\n          {number}\n        </Pagination.Item>,\n      );\n    }\n  /************************ページネーション処理**************************************** */\n  const sendNumber =(num)=>{\n      props.paginationSend(num);\n  }\n  /************************ページネーション戻るボタン処理**************************************** */\n  const backButton = () =>{\n     alert(props.No -1);\n  }\n  return(\n   <>\n    <Pagination >{items}</Pagination>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(MyPagination))","import { useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport MyPagination from './MyPagination';\n\nconst itemLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst image={\n  width: '80px',\n  height: '80px'\n}\nconst imageShow={\n  width: '150px',\n  height: '150px'\n}\n\nconst paginationStyle = {\n  marginBottom: \"-2%\",\n  border: \"none\"\n}\n\n function PcIndex(props){\n\n  /************************ステート*************************************** */\n  const[page, setPage] = useState(0);\n\n  let localData = JSON.parse(localStorage.getItem('items')).slice(page * 2, page * 2 + 2 )\n  let modalData = [];\n\n  const[itemData, setState] = useState(\n    localData ? localData : []\n  )\n  /*--モーダル--*/\n  const [show, setShow] = useState({\n    status: false,\n    data: []\n  });\n\n  const handleClose = () => setShow({status: false, data: show.data});\n  \n  /*************APIによるitem一覧**********************************/\n  /*async function itemsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n         localStorage.removeItem('items');\n         setState(res.data);\n         localStorage.setItem('items', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(itemsCall()); */\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.editPage(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************削除********************************************* */\n  const deleteItem = (i)=>{\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/items/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n  }\n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processItem(item);\n    props.history.push('/items_process');\n  }\n  /*****************************モーダル開く********************************************** */\n  const openModal = (item)=>{\n    modalData.splice(0);\n    modalData.push(item);\n  \n    setShow({\n      status: true,\n      data: modalData\n    })\n  }\n  /********************************ページネーション処理**************************************** */\n  const paginationNo = (num)=>{\n    alert(num);\n    setState(\n      JSON.parse(localStorage.getItem('items')).slice(num * 2, num * 2 + 2 )\n    )\n    setPage(num);\n  }\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\">商品一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Table style={paginationStyle}>\n            <tr>\n              <td> \n                <Button \n                    variant=\"primary\"\n                    onClick={newPage}\n                >新規商品登録</Button>\n              </td>\n              {itemData.length >0?\n               <td className=\"w-75\">\n                 <MyPagination No={page} paginationSend ={(num)=>paginationNo(num)} />\n               </td>\n                : \n                <td></td>\n                }\n            </tr>\n          </Table>\n         \n        \n          {itemData.length > 0 ?\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">画像</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">カテゴリー</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {itemData.map((item,i)=>(\n                  <tr>\n                    <td>\n                      <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </td>\n                    <td className=\"align-middle\">\n                      <button \n                         style={itemLink} \n                         onClick={(i)=>openModal(item)}\n                       >{item.name}</button>\n                    </td>\n                    <td className=\"text-right text-danger align-middle font-weight-bold\">{item.price}</td>\n                    <td className=\"align-middle\">{item.category}</td>\n                    <td className=\"align-middle\">\n                    <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(item)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                     <Button \n                        variant=\"primary\"\n                        onClick={(i)=>processItem(item)}\n                        className=\"ml-3\"\n                      >加工法管理</Button>\n                    \n                    <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteItem(item.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n               \n            </Table>\n            :\n            <div className=\"text-center bg-info text-white font-weight-bold p-5 mt-3\">\n              データを表示できません。\n            </div>\n            }\n        </Col>\n      </Row>\n      <Modal\n         show={show.status}\n         onHide={handleClose}\n         backdrop=\"static\"\n         keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"font-weight-bold\">\n             {show.data.length ===0? '' : `${show.data[0].name}詳細`}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table bordered>\n           <tbody>  \n             <tr>\n               <td colSpan=\"2\" className=\"text-center\">\n                <Image \n                  src={show.data.length ===0? '' : `http://yukiabineko.sakura.ne.jp/react/${show.data[0].name}.jpg`} \n                  alt=\"表示できません\" \n                  style={imageShow} \n                  rounded \n                />\n               </td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">商品名</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].name}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">価格</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].price}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">カテゴリー</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].category}</td>\n             </tr>\n             {show.data.length ===0? \n               '' \n                : \n               <tr>\n                 <th className=\"bg-primary text-white align-middle\">可能調理法</th>\n                 <td>\n                   {show.data[0].processes.map((process)=>(\n                     <td>{process}</td>\n                   ))}\n                 </td>\n               </tr>\n             }\n             <tr>\n               <th colSpan=\"2\" className=\"text-center bg-primary text-white\">商品説明</th>\n             </tr>\n             <tr>\n               <td colSpan=\"2\">{show.data.length ===0? '' : show.data[0].info}</td>\n             </tr>\n           </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst itemLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst image={\n  width: '80px',\n  height: '80px'\n}\nconst imageShow={\n  width: '150px',\n  height: '150px'\n}\nconst buttonWidth={\n  width: '31%'\n}\n\n\n function PcIndex(props){\n  let localData = JSON.parse(localStorage.getItem('items'))\n  let modalData = [];\n\n\n  /************************ステート*************************************** */\n  const[itemData, setState] = useState(\n    localData ? localData : []\n  )\n  /*--モーダル--*/\n  const [show, setShow] = useState({\n    status: false,\n    data: []\n  });\n\n  const handleClose = () => setShow({status: false, data: show.data});\n  \n  /*************APIによるitem一覧**********************************/\n  /*async function itemsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n         localStorage.removeItem('items');\n         setState(res.data);\n         localStorage.setItem('items', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(itemsCall());*/\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0 && props.itemData === null){\n        props.history.push('/login');  \n      }\n    }\n\n  useState(loginUserCheck());\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.editPage(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************削除********************************************* */\n  const deleteItem = (i)=>{\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/items/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n  }\n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processItem(item);\n    props.history.push('/items_process');\n  }\n  /*****************************モーダル開く********************************************** */\n  const openModal = (item)=>{\n    modalData.splice(0);\n    modalData.push(item);\n  \n    setShow({\n      status: true,\n      data: modalData\n    })\n  }\n  return(\n    <div className=\"w-100\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\">商品一覧</h2>\n      </div>\n      <div class=\"bg-white p-2\"></div>\n      <div className=\"bg-white w-100\">\n          <Button \n            className=\"mb-1\"\n            variant=\"primary\"\n            onClick={newPage}\n          >新規商品登録</Button>\n          <p>【商品一覧】</p>\n         \n          {itemData.length > 0 ?\n            <Table bordered hover>\n              <tbody>\n                {itemData.map((item,i)=>(\n                  <tr>\n                    <Table bordered>\n                      <tbody>\n                        <tr>\n                          <td>\n                            <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                          </td>\n\n                          <td colSpan=\"4\" className=\"align-middle\">\n                            <button \n                              style={itemLink} \n                              onClick={(i)=>openModal(item)}\n                            >商品名:{item.name}</button>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                          <td className=\"text-right text-danger align-middle font-weight-bold\">{item.price}</td>\n                          <th className=\"text-center align-middle bg-dark text-white\">分類</th>\n                          <td className=\"align-middle\">{item.category}</td>\n                        </tr>\n\n                        <tr>\n                          <td colSpan=\"4\" className=\"align-middle\">\n                            <Button \n                                style={buttonWidth}\n                                variant=\"primary\"\n                                onClick={(i)=>editPage(item)}\n                                \n                              >編集</Button>\n\n                            <Button \n                                style={buttonWidth}\n                                variant=\"primary\"\n                                onClick={(i)=>processItem(item)}\n                                className=\"ml-2 mr-2\"\n                              >加工法管理</Button>\n                            \n                            <Button \n                                style={buttonWidth}\n                                variant=\"danger\"\n                                onClick={(i)=>deleteItem(item.id)}\n                               \n                              >削除</Button>\n                          </td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                   \n                   \n                  </tr>\n                ))}\n              </tbody>\n               \n            </Table>\n            :\n            <div className=\"text-center bg-info text-white font-weight-bold p-5 mt-3\">\n              データを表示できません。\n            </div>\n            }\n      </div>\n      <Modal\n         show={show.status}\n         onHide={handleClose}\n         backdrop=\"static\"\n         keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"font-weight-bold\">\n             {show.data.length ===0? '' : `${show.data[0].name}詳細`}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table bordered>\n           <tbody>  \n             <tr>\n               <td colSpan=\"2\" className=\"text-center\">\n                <Image \n                  src={show.data.length ===0? '' : `http://yukiabineko.sakura.ne.jp/react/${show.data[0].name}.jpg`} \n                  alt=\"表示できません\" \n                  style={imageShow} \n                  rounded \n                />\n               </td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">商品名</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].name}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">価格</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].price}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">カテゴリー</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].category}</td>\n             </tr>\n             {show.data.length ===0? \n               '' \n                : \n               <tr>\n                 <th className=\"bg-primary text-white align-middle\">可能調理法</th>\n                 <td>\n                   {show.data[0].processes.map((process)=>(\n                     <td>{process}</td>\n                   ))}\n                 </td>\n               </tr>\n             }\n             <tr>\n               <th colSpan=\"2\" className=\"text-center bg-primary text-white\">商品説明</th>\n             </tr>\n             <tr>\n               <td colSpan=\"2\">{show.data.length ===0? '' : show.data[0].info}</td>\n             </tr>\n           </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\nimport MediaQuery from \"react-responsive\";\n\n\n function Index(props){\n\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n\n  useState(loginUserCheck());\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.itemEditIdget(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processIdget(item);\n    props.history.push('/items_process');\n  }\n  \n  return(\n    <div>\n      <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          editPage={(item)=>editPage(item)}\n          processItem ={(item)=>processItem (item)}\n        />\n      </MediaQuery>\n    \n    <MediaQuery maxDeviceWidth={767}>\n      <PhoneIndex \n          editPage={(item)=>editPage(item)}\n          processItem ={(item)=>processItem (item)}\n      />\n    </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[image, setImage] = useState({\n    file: null\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    price: '',\n    category: '',\n    info: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const indexComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const itemInput = (e)=>{\n   const target = e.target;\n   const name = target.name;\n   const value = target.value;\n   setState({...state, [name]: value})\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n      /* PHPへの送信 */\n      const params = new FormData();\n      params.append('file', image.file);\n      params.append('name', state.name);\n      axios.post('https://yukiabineko.sakura.ne.jp/send-react.php',\n      　　　　　　　params,\n                  {\n                    headers:{\n                      'content-type': 'multipart/form-data',\n                    },\n                  }\n      ).then((res)=>{\n          console.log(res.data);\n      }).catch(()=>{\n      })\n\n\n      /* rails側への送信*/\n      \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.post('https://uematsu-backend.herokuapp.com/items', data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n      setShow({display: 'none'});\n    }\n    setImage({\n      file: null\n    })\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規商品登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={indexComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendItemParameter}>\n            <Form.Group>\n              <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>カテゴリー</Form.Label>\n              <div class=\"balloon1\" style={show}>\n                <p>選択してください。</p>\n              </div>\n                <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                  <option value=\"\">選択してください  </option>\n                 {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                   <option key={i} value={value}>{value}</option>\n                 )}\n                </Form.Control>\n            </Form.Group>\n               \n            <Form.Group>\n              <Form.Label>商品説明</Form.Label>\n              <textarea \n                name=\"info\" \n                cols=\"30\" \n                rows=\"10\" \n                value={state.info}\n                onChange={itemInput}\n                className=\"form-control\">{state.info}</textarea>\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  ItemEdit = (props)=>{\n\n \n   let item = props.item;\n/*********************************state******************************************************* */\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[state, setState] = useState({\n    name: item.name,\n    price: item.price,\n    category: item.category,\n    info: item.info\n  })\n\n  const[image, setImage] = useState({\n    file: null\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\n\nuseState(loginUserCheck());\n\n\n  const homeComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const itemInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n       /* PHPへの送信 */\n       const params = new FormData();\n       params.append('file', image.file);\n       params.append('name', state.name);\n       axios.post('http://yukiabineko.sakura.ne.jp/send-react.php',\n       　　　　　　　params,\n                   {\n                     headers:{\n                       'content-type': 'multipart/form-data',\n                     },\n                   }\n       ).then((res)=>{\n           console.log(res.data);\n       }).catch(()=>{\n         alert('ERROR');\n       })\n\n       /* rails側への送信*/ \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/items/${props.item.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n        props.history.push('/items');\n      })\n      .catch(function(){\n        alert('error');\n      })\n      setShow({display: 'none'});\n    }\n    \n  }\n  return(\n    <>\n       <div className=\"text-center mt-5 mb-4\">\n         <h2 data-testid=\"userNewtitle\">{state.name}編集</h2>\n       </div>\n       <Row>\n         <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <Button \n           variant=\"secondary\" \n           onClick={homeComponent}\n           className=\"mb-3\"\n         >\n          戻る\n         </Button>\n           <Form onSubmit={sendItemParameter}>\n             <Form.Group>\n               <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n             </Form.Group>\n             <Form.Group>\n               <Form.Label>商品名</Form.Label>\n               <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>価格</Form.Label>\n               <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>カテゴリー</Form.Label>\n               <div class=\"balloon1\" style={show}>\n                 <p>選択してください。</p>\n               </div>\n                 <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                   <option value=\"\">選択してください  </option>\n                  {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                    <option key={i} value={value}>{value}</option>\n                  )}\n                 </Form.Control>\n             </Form.Group>\n                \n             <Form.Group>\n               <Form.Label>商品説明</Form.Label>\n               <textarea \n                 name=\"info\" \n                 cols=\"30\" \n                 rows=\"10\" \n                 value={state.info}\n                 onChange={itemInput}\n                 className=\"form-control\">{state.info}</textarea>\n             </Form.Group>\n \n               <Button \n                 type=\"submit\" \n                 variant=\"primary\" \n                 className=\"btn-block mt-4\">\n                   送信\n               </Button>\n           </Form>\n           \n         </Col>\n       </Row>\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(ItemEdit));\n/***************************************************************************************************** */","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Table, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { getOption } from './setItemData';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\n\nconst Process = (props)=>{\n/********************加工データ************************************************************** */\n  const getProcessData = ()=>{\n     axios\n        .get(`https://uematsu-backend.herokuapp.com/processings/${props.item.id}`)\n        .then((res)=>{\n           \n           localStorage.removeItem('process');\n           localStorage.setItem('process', JSON.stringify(res.data));\n           setProcess(res.data);\n        \n        })\n        .catch((error)=>{\n           console.log(error);\n        })\n     }\n\n/*************************ステートおよび各種セット************************************************ */\n   useEffect(()=>{\n     getProcessData();\n   })\n   let item = props.item;\n   let options = getOption();\n\n   const[process, setProcess] = useState([]);\n   const [selectedOption, setSelectedOption] = useState(null);\n/***********************加工データサーバー送信**************************************** */\n   const addProcess = (e)=>{\n     e.preventDefault();\n     let data = selectedOption;\n     let obj={};\n     obj[\"id\"] = props.item.id;\n     obj[\"data\"] = selectedOption;\n     axios.post('https://uematsu-backend.herokuapp.com/processings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n    \n   }\n   /******************************ログイン/未ログイン切り替え********************************************************** */\n   const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n  useEffect(()=>{\n    loginUserCheck();\n  })\n /****************************************削除加工法*************************************************************** */\n    const deleteProcess = (i,count)=>{\n      if(window.confirm('削除してよろしいですか？')){\n        axios\n          .delete(`https://uematsu-backend.herokuapp.com/processings/${i}`)\n          .then((response)=>{\n            alert(response.data.message); \n            let data = process.slice();\n            data.splice(count,1);\n            setProcess(data);\n          })\n          .catch((error)=>{\n            console.log(error);\n          })\n      }\n    }\n\n  return(\n   <>\n    <div className=\"text-center font-weight-bold h2 mt-5 mb-3\">{item.name}加工法管理画面</div>\n    <Row>\n      <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n      <Form onSubmit={addProcess}>\n        <Form.Group>\n          <Form.Label>加工法の登録</Form.Label>\n          <Select\n          　isMulti\n            defaultValue={selectedOption}\n            onChange={setSelectedOption}\n            options={options}\n          />\n        </Form.Group>\n        <Form.Control type=\"submit\" className=\"bg-primary text-white\"  value=\"追加\" />\n      </Form>\n      {process.length >0?\n       <>\n         <div className=\"text-center font-weight-bold mt-5\">登録加工法一覧</div>\n         <Table bordered>\n           <thead>\n             <tr>\n               <th className=\"text-white bg-dark text-center\">加工法</th>\n               <th className=\"text-white bg-dark text-center\"></th>\n             </tr>\n           </thead>\n           <tbody>\n             {process.map((data,count)=>(\n               <tr>\n                 <td className=\"text-center\">{data.processing_name}</td>\n                 <td>\n                   <Button\n                    variant=\"danger\"\n                    className=\"btn-block\"\n                    onClick={(i)=>deleteProcess(data.id, count)}\n                   >削除</Button>\n                 </td>\n               </tr>\n             ))}\n           </tbody>\n         </Table>\n       </>\n       : \n       <></>\n       }\n      </Col>\n    </Row>  \n\n\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Process))","\n export const getOption = ()=>{\n   return [\n    { value: '刺身', label: '刺身' },\n    { value: '切り身', label: '切り身' },\n    { value: '煮物用', label: '煮物用' },\n    { value: '塩焼き用', label: '塩焼き用' },\n    { value: 'フライ用', label: 'フライ用' },\n    { value: '刺身/切り身', label: '刺身/切り身' },\n   ];\n }","import { useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ordersSend } from '../store/Store';\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function orderCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/orders')\n       .then((res)=>{\n          localStorage.setItem('orders', JSON.stringify(res.data));\n          let action = ordersSend(res.data);\n          props.dispatch(action);\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('orders')) \n      })\n      \n  }\n    useState(orderCall());*/\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editPage(id);\n     props.history.push(\"/orders_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteOrder(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/orders/${i}`)\n       .then((response)=>{\n        /*削除後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            let orders = state.data.slice();\n            orders.splice(0);\n            res.data.forEach((order) => {\n              orders.push(order)\n            });\n            setState({\n              data: orders\n            })\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n         alert(response.data.message); \n         \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   /****************************商品全リセット*********************************************** */\n   function ResetOrder(){\n    if(window.confirm('リセットしてよろしいですか？')){\n      axios\n       .get('https://uematsu-backend.herokuapp.com/orders/deleteAll')\n       .then((response)=>{\n        localStorage.removeItem('orders');\n        /*削除後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            setState({\n              data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n            })\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    }\n   }\n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">店頭商品一覧</h2>\n      </div>\n      <Row>\n\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Button \n            variant=\"primary\"\n            onClick={()=>props.history.push('orders_new')}\n            className=\"mr-2\"\n          >店頭商品追加</Button>\n           {/*状況によりリセットボタン*/}\n\n          {state.data.length >0? \n            <Button \n              variant=\"danger\"\n              onClick={ResetOrder}\n             >リセット</Button>\n             : \n             ''\n            }\n          {/*テーブル*/}\n\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">合計金額</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">在庫</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {state.data.map((value)=>(\n                  <tr key={value.name}>\n                    <td className=\"text-center align-middle\">{value.name}</td>\n                    <td  className=\"text-center align-middle\">{value.price}</td>\n                    <td  className=\"text-center align-middle\">{Number(value.price) * Number(value.stock)}</td>\n                    <td  className=\"text-center align-middle\">{value.stock}</td>\n                    <td>\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteOrder(value.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div className=\"bg-secondary p-5 text-center text-white font-weight-bold mt-1\">データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import { useState } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ordersSend } from '../store/Store';\n\nconst buttonWidth ={\n  width: '48%',\n  margin: '0',\n  marginRight:'2%'\n}\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   /*async function orderCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/orders')\n       .then((res)=>{\n          localStorage.setItem('orders', JSON.stringify(res.data));\n          let action = ordersSend(res.data);\n          props.dispatch(action);\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('orders'))\n      })\n  }\n    useState(orderCall());*/\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.orderEditIdget(id);\n     props.history.push(\"/orders_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteOrder(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/orders/${i}`)\n       .then((response)=>{\n          /*削除後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            setState({\n              data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n            })\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   /****************************商品全リセット*********************************************** */\n   function ResetOrder(){\n    if(window.confirm('リセットしてよろしいですか？')){\n      axios\n       .get('https://uematsu-backend.herokuapp.com/orders/deleteAll')\n       .then((response)=>{\n        localStorage.removeItem('orders');\n           /*削除後更新*/\n           axios\n           .get('https://uematsu-backend.herokuapp.com/orders')\n           .then((res)=>{\n               localStorage.setItem('orders', JSON.stringify(res.data));\n               let action = ordersSend(res.data);\n               props.dispatch(action);\n               setState({\n                 data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n               })\n               \n           })\n           .catch((error)=>{\n               console.log(error);\n           })\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    }\n   }\n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">店頭商品一覧</h2>\n      </div>\n      <div className=\"p-2 bg-white\"></div>\n      <div className=\"w-100 bg-white\">\n          <Button \n            variant=\"primary\"\n            onClick={()=>props.history.push('orders_new')}\n            className=\"mr-2\"\n          >店頭商品追加</Button>\n           {/*状況によりリセットボタン*/}\n\n          {state.data.length >0? \n            <Button \n              variant=\"danger\"\n              onClick={ResetOrder}\n             >リセット</Button>\n             : \n             ''\n            }\n          {/*テーブル*/}\n\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover mt-3>\n              <tbody>\n                {state.data.map((value)=>(\n                  <tr key={value.name}>\n                     <Table bordered>\n                        <tbody>\n                          <tr>\n                            <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                            <td colSpan=\"3\" className=\"text-center align-middle\">{value.name}</td>\n                          </tr>\n\n                          <tr>\n                            <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                            <td className=\"text-center align-middle\">{value.price}</td>\n                            <th className=\"text-center align-middle bg-dark text-white\">在庫</th>\n                            <td className=\"text-center align-middle\">{value.stock}</td>\n                            \n                          </tr>\n                          <tr>\n                            <th className=\"text-center align-middle bg-dark text-white\">合計金額</th>\n                            <td colSpan=\"3\" className=\"text-center align-middle\">{Number(value.price) * Number(value.stock)}</td>\n                          </tr>\n\n                          <tr>\n                            <td colSpan=\"4\">\n                              <Button \n                                variant=\"primary\"\n                                onClick={(i)=>editPage(value.id)}\n                                style={buttonWidth}\n                              >編集</Button>\n\n                              <Button \n                                variant=\"danger\"\n                                onClick={(i)=>deleteOrder(value.id)}\n                                style={buttonWidth}\n                              >削除</Button>\n                            </td>\n                          </tr>\n                        </tbody>\n                     </Table>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div className=\"bg-secondary p-5 text-center text-white font-weight-bold mt-1\">データなし</div>\n            }\n      </div>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\nimport MediaQuery from \"react-responsive\";\n\n function Index(props){\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.orderEditIdget(id);\n     props.history.push(\"/orders_edit\");\n   } \n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          editPage={(i)=>editPage(i)}\n        />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex \n          editPage={(i)=>editPage(i)} \n        />\n      </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.browser.cjs';\nimport { formSelectItems } from './setItem';\nimport { connect } from 'react-redux';\nimport {  ordersSend } from '../store/Store';\n\nconst  New = (props)=>{\n  const[state, setState] = useState({\n    price: '',\n    stock: ''\n  });\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = formSelectItems();\n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const backIndex = ()=>{\n    props.history.push('/orders');\n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name: selectedOption.value, price: state.price, stock: state.stock};\n    axios.post('https://uematsu-backend.herokuapp.com/orders', sendData)\n      .then(function (response) {\n        /*追加後更新*/\n        axios\n        .get('https://uematsu-backend.herokuapp.com/orders')\n        .then((res)=>{\n            localStorage.setItem('orders', JSON.stringify(res.data));\n            let action = ordersSend(res.data);\n            props.dispatch(action);\n            \n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n      /*props.history.push('/orders');*/\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">店頭商品追加</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={backIndex}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Select\n                options={options}\n                defaultvalue={selectedOption}\n                onChange={setSelectedOption}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import axios from 'axios';\n\nexport const formSelectItems = ()=>{\n  const itemData =JSON.parse(localStorage.getItem('items'));\n  if(!itemData){\n    axios\n    .get('https://uematsu-backend.herokuapp.com/items')\n    .then((res)=>{\n       localStorage.removeItem('items');\n       localStorage.setItem('items', JSON.stringify(res.data));\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n  }\n  let options = [];\n  itemData.forEach(item=>{\n    options.push({value: item.name, label: item.name});\n  })\n  return options;\n  \n}","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport {  ordersSend } from '../store/Store';\n\n/**************************************************************************************** */\nconst  OrderEdit = (props)=>{\n\n const getitemData = ()=>{\n  let orders = []\n  let datas = JSON.parse(localStorage.getItem('orders'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     orders.push(data);\n    }\n  });\n  return orders\n }\n let orders = getitemData();\n \n\n/*********************************state******************************************************* */\n  \n  const[state, setState] = useState({\n    name: orders.length>0? orders[0].name : [],\n    price:orders.length>0? orders[0].price :[],\n    stock: orders.length>0? orders[0].stock : []\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  const homeComponent = ()=>{\n    props.history.push('/orders')  \n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name:state.name, price: state.price, stock: state.stock};\n    axios.patch(`https://uematsu-backend.herokuapp.com/orders/${props.id}`, sendData)\n      .then(function (response) {\n           /*編集後更新*/\n           axios\n           .get('https://uematsu-backend.herokuapp.com/orders')\n           .then((res)=>{\n               localStorage.setItem('orders', JSON.stringify(res.data));\n               let action = ordersSend(res.data);\n               props.dispatch(action);\n               props.history.push('/orders');\n               setState({\n                 data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n               })\n               \n           })\n           .catch((error)=>{\n               console.log(error);\n           })\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n  \n  }\n  \n  return(\n    <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">{orders.length>0? orders[0].name : ''}編集</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={homeComponent}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <div className=\"font-weight-bold\">{state.name}</div>\n              <Form.Control \n                type=\"hidden\"\n                name=\"name\"\n                value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n   )\n}\nexport default withRouter(connect(state=>state)(OrderEdit));\n/***************************************************************************************************** */","export default __webpack_public_path__ + \"static/media/fishs2.d6a1f15c.jpg\";","import { useEffect, useState } from 'react';\nimport { Image, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport { connect } from 'react-redux';\nimport image from '../images/fishs2.jpg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart } from '../store/Store';\n\n\nconst rightAreaTable={\n  height: '200px',\n  overflow: 'scroll'\n}\n\nconst nameTitle={\n  background: '#136FFF',\n  padding: '5px',\n  color:'white',\n  border:'1px solid #f0f0f0',\n  maxWidth: '100%',\n  margin: '0'\n}\nconst buycheck={\n  padding: '5px 0',\n  background: 'brown',\n  color:'white',\n  fontSize:'16px',\n  textAlign: 'center',\n  borderLeft:'6px solid #c0c0c0'\n\n}\nconst buttonHeight={\n  height:'100px'\n}\n\n function PcIndex(props){\n  let localData = null;\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id == data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n\n  /***********************ステート*************************************** */\n  const[itemData, setState] = useState(\n    props.orderItem? props.orderItem : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n/*******************************************買い物ボタン*********************************************************************** */\n  const buyItem = (item)=>{\n    props.sendCustomerData(item);\n    props.history.push('/customor_show');\n  }\n/*******************************************買い物カゴアイテム削除*********************************************************************** */\nconst deleteCartItem = (index)=>{\n  let action = cartDeleteCart(index);\n  props.dispatch(action);\n}\n/********************************************買い物カゴ合計金額*************************************************************************************** */\n const itemTotalMoney = ()=>{\n   let total = 0;\n   props.buyCarts.map((data)=>{\n     total += Number(data.price) * Number(data.num);\n   })\n   return total;\n }\n /********************************************に買い物確認情報送信*************************************************************************************** */\n const sendShoppingData =()=>{\n   props.sendCartItemToConfirm(itemData);\n   props.history.push('/customer_confirm');\n }\n  return(\n    <div >\n      <img src={image} alt=\"画像\" className=\"costomer-imag\"/>\n       <div className=\"customor-main\">\n    　　　<h1 className=\"customor-main-title\">本日入荷商品紹介</h1>\n         <article>\n           <section class=\"gallery\">\n             {itemData.length>0? <h2 className=\"customer-article-title\">商品紹介</h2> : <div className=\"bg-secondary text-center text-white p-5 font-weight-bold\">ただいま入荷商品がありません。</div>}\n             {itemData.length > 0 ? \n               <ul>\n                 {itemData.map((item)=>(\n                   <li>\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" roundedCircle /><br/>\n                       <ul>\n                         <li style={nameTitle}>{`商品名${item.name}`}</li>\n                         <li style={nameTitle}>\n                           価格&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.price}</span>円\n                         </li>\n                         <li style={nameTitle}>\n                           在庫&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.stock}</span>(尾/個)\n                         </li>\n                         <li style={nameTitle} className=\"bg-white\">\n                           {props.userData.length>0 && props.userData[0].admin? \n                             '' \n                             : \n                             Number(item.stock) > 0? \n                              <button \n                                className=\"btn btn-success btn-block\"\n                                onClick={()=>buyItem(item)}\n                              >\n                               <FontAwesomeIcon icon={faCartPlus}  />買い物する\n                              </button>\n                             : \n                             <span className=\"text-danger font-weight-bold\">売り切れ</span>\n                           }\n                         </li>\n                       </ul>\n                     \n                   </li>\n                 ))}\n               </ul>\n                :\n               ''\n              }\n            \n           </section>\n\n         </article>\n\n         {props.userData.length>0 && props.userData[0].admin? \n            <div className=\"customor-right\">\n              <h5 style={buycheck}>管理者表示</h5>\n              <div className=\"p-3 bg-lignt font-weight-bold\">管理者のため表示されません</div>\n            </div>\n            : \n            <div className=\"customor-right\">\n            <h5 style={buycheck}>買い物確認</h5>\n             <p className=\"font-weight-bold text-center\">{props.userData.length>0? props.userData[0].name : ''}さん</p>\n             <p className=\"font-weight-bold bg-light p-2\">買い物点数&emsp;<span className=\"text-danger\">{props.buyCarts.length}</span>件</p>\n             \n             {props.buyCarts.length >0 ? \n              <div style={ rightAreaTable}>\n               <Table bordered>\n                 <thead className=\"bg-primary text-white\">\n                   <th>商品名</th>\n                   <th>個数</th>\n                   \n                 </thead>\n                 <tbody>\n                   {props.buyCarts.map((data,index)=>(\n                     <tr>\n                       <td className=\"align-middle text-center\">\n                         {data.name}<br/>\n                         ({data.process})\n                      </td>\n                       <td className=\"text-center\">\n                         {data.num}<br/>\n                         {/*<button\n                          className=\"btn btn-danger\"\n                          onClick={()=>deleteCartItem(index)}\n                         >削除</button>*/}\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </Table>\n               </div>\n               : \n               ''\n             }\n           \n             <p className=\"m-0\">合計金額</p>\n             <p className=\"font-weight-bold bg-dark p-2 text-white text-right\">{itemTotalMoney()}</p>\n             {props.buyCarts.length >0? \n               <button \n                 className=\"btn btn-primary btn-block font-weight-bold\" \n                 onClick={sendShoppingData}\n                 style={buttonHeight}>\n                 <FontAwesomeIcon icon={faCashRegister} />\n                   &nbsp;買い物確認\n              </button>\n               : \n               ''\n             }\n          </div>\n          }\n       \n      </div>\n      <div className=\"hidden-div\"></div> \n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","/*******************index*********************************************** */\n/*ヘッダー画像*/\nexport const HeaderImagePhone ={\n   width: '100%'\n}\n\n/*商品ページ画像エリア全体*/\n\nexport const ArticlePhone={\n  width:'100%',\n  maxWidth: '100%',\n  background: '#fff',\n  marginBottom: \"10%\"\n}\n\n/*画像ul*/\n\nexport const UlPhone={\n  listStyle: 'none',\n  margin: '0',\n  width: '100%',\n  marginBottom: '4%'\n}\n\n/*画像ll*/\n\nexport const LlPhone={\n  width: '100%',\n  maxWidth: '100%',\n  margin: '5% -15%'\n}\n/*買い物カゴエリア全体 */\nexport const phoneBuyCartMain = {\n  background: \"#f0f0f0\",\n  marginTop: \"5%\",\n  margimBottom: \"2%\",\n  padding: \"5% 0\"\n\n}\n/*******************confirm*********************************************** */","import { useEffect, useState } from 'react';\nimport { Image, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport image from '../images/fishs2.jpg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart } from '../store/Store';\nimport { HeaderImagePhone,ArticlePhone, UlPhone, LlPhone, phoneBuyCartMain } from './phoneStyle';\n\nconst style={\n  width:'980px'\n}\n\nconst rightAreaTable={\n  height: '200px',\n  overflow: 'scroll'\n}\n\nconst nameTitle={\n  background: '#136FFF',\n  padding: '5px',\n  color:'white',\n  border:'1px solid #f0f0f0',\n  maxWidth: '100%',\n  margin: '0',\n  width: '100%'\n}\nconst buycheck={\n  padding: '5px 0 25px 0',\n  background: 'brown',\n  color:'white',\n  fontSize:'16px',\n  textAlign: 'center',\n  borderLeft:'6px solid #c0c0c0'\n\n}\nconst buttonHeight={\n  height:'100px'\n}\n\n function PhoneIndex(props){\n  let localData = null;\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id == data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n\n  /***********************ステート*************************************** */\n  const[itemData, setState] = useState(\n    props.orderItem? props.orderItem : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n/*******************************************買い物ボタン*********************************************************************** */\n  const buyItem = (item)=>{\n    props.sendCustomerData(item);\n    props.history.push('/phone_customor_show');\n  }\n/*******************************************買い物カゴアイテム削除*********************************************************************** */\nconst deleteCartItem = (index)=>{\n  let action = cartDeleteCart(index);\n  props.dispatch(action);\n}\n/********************************************買い物カゴ合計金額*************************************************************************************** */\n const itemTotalMoney = ()=>{\n   let total = 0;\n   props.buyCarts.map((data)=>{\n     total += Number(data.price) * Number(data.num);\n   })\n   return total;\n }\n /********************************************に買い物確認情報送信*************************************************************************************** */\n const sendShoppingData =()=>{\n   props.sendCartItemToConfirm(itemData);\n   props.history.push('/phone_customer_confirm');\n }\n  return(\n    <div>\n      <img src={image} alt=\"画像\" style={HeaderImagePhone} />\n       <div style={HeaderImagePhone} className=\"text-center\">\n    　　　<h4>本日入荷商品紹介</h4>\n         <article style={ArticlePhone}>\n           <section>\n             {itemData.length>0? <h2 className=\"customer-article-title\">商品紹介</h2> : <div className=\"bg-secondary text-center text-white p-5 font-weight-bold\">ただいま入荷商品がありません。</div>}\n             {itemData.length > 0 ? \n               <ul style={UlPhone}>\n                 {itemData.map((item)=>(\n                   <li style={LlPhone}>\n                       <Image style={HeaderImagePhone} src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" roundedCircle /><br/>\n                       <ul style={UlPhone}>\n                         <li style={nameTitle}>{`商品名${item.name}`}</li>\n                         <li style={nameTitle}>\n                           価格&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.price}</span>円\n                         </li>\n                         <li style={nameTitle}>\n                           在庫&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.stock}</span>(尾/個)\n                         </li>\n                         <li style={nameTitle} className=\"bg-white\">\n                           {props.userData.length>0 && props.userData[0].admin? \n                             '' \n                             : \n                             Number(item.stock) > 0? \n                              <button \n                                className=\"btn btn-success btn-block\"\n                                onClick={()=>buyItem(item)}\n                              >\n                               <FontAwesomeIcon icon={faCartPlus}  />買い物する\n                              </button>\n                             : \n                             <span className=\"text-danger font-weight-bold\">売り切れ</span>\n                           }\n                         </li>\n                       </ul>\n                     \n                   </li>\n                 ))}\n               </ul>\n                :\n               ''\n              }\n            \n           </section>\n\n         </article>\n\n         {props.userData.length>0 && props.userData[0].admin? \n            <div style={phoneBuyCartMain}>\n              <h5 style={buycheck}>管理者表示</h5>\n              <div className=\"p-3 bg-lignt font-weight-bold\">管理者のため表示されません</div>\n            </div>\n            : \n            <div style={phoneBuyCartMain}>\n            <h5 style={buycheck}>買い物確認</h5>\n             <p className=\"font-weight-bold text-center\">{props.userData.length>0? props.userData[0].name : ''}さん</p>\n             <p className=\"font-weight-bold bg-light p-2\">買い物点数&emsp;<span className=\"text-danger\">{props.buyCarts.length}</span>件</p>\n             \n             {props.buyCarts.length >0 ? \n              <div style={ rightAreaTable}>\n               <Table bordered>\n                 <thead className=\"bg-primary text-white\">\n                   <th>商品名</th>\n                   <th>個数</th>\n                   \n                 </thead>\n                 <tbody>\n                   {props.buyCarts.map((data,index)=>(\n                     <tr>\n                       <td className=\"align-middle text-center\">\n                         {data.name}<br/>\n                         ({data.process})\n                      </td>\n                       <td className=\"text-center\">\n                         {data.num}<br/>\n                         {/*<button\n                          className=\"btn btn-danger\"\n                          onClick={()=>deleteCartItem(index)}\n                         >削除</button>*/}\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </Table>\n               </div>\n               : \n               ''\n             }\n           \n             <p className=\"m-0\">合計金額</p>\n             <p className=\"font-weight-bold bg-dark p-2 text-white text-right\">{itemTotalMoney()}</p>\n             {props.buyCarts.length >0? \n               <button \n                 className=\"btn btn-primary btn-block font-weight-bold\" \n                 onClick={sendShoppingData}\n                 style={buttonHeight}>\n                 <FontAwesomeIcon icon={faCashRegister} />\n                   &nbsp;買い物確認\n              </button>\n               : \n               ''\n             }\n          </div>\n          }\n         \n      </div>\n\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneIndex))","import { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport MediaQuery from \"react-responsive\";\nimport { connect } from 'react-redux';\nimport PcIndex from './PCIndex';\nimport PhoneIndex from './PhoneIndex';\n\n function Index(props){\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id === data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n  return(\n    <div>\n    <MediaQuery minDeviceWidth={767}>\n      <PcIndex \n        sendCustomerData={props.sendCustomerData}  \n        sendCartItemToConfirm={props.sendCartItemToConfirm}\n        fixItemData={props.fixItemData}\n      />\n    </MediaQuery>\n    \n    <MediaQuery maxDeviceWidth={767}>\n      <PhoneIndex \n          sendCustomerData={props.sendCustomerData}  \n          sendCartItemToConfirm={props.sendCartItemToConfirm}\n          fixItemData={props.fixItemData}\n      />\n    </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","\n/*買い物かごで同一商品が含まれているのかをチェック あればaddされない*/\n\nimport { data } from \"jquery\";\n\nexport const sameItemCheck = (datas, name, process)=>{\n  let sameItemCount = 0;\n  datas.map((data)=>{\n    if((data.name === name) && (data.process === process)){\n        sameItemCount ++ ;\n    }\n  });\n  if(sameItemCount >0){\n      return true;\n  }\n  else{\n      return false;\n  }\n}\n\n/*セレクト時商品選択されていないかチェック*/\n\nexport const selectItemCheck = (name)=>{\n   if(name === '--加工法を選択してください--' || name === ''){\n        return false\n   }\n   else{\n       return true;\n   }\n}\n\n/*セレクト時ローカルストレージ在庫更新*/\n\nexport const localstorageChange = (name,stock, datas)=>{\n  \n  datas.map((data)=>{\n    if(data.name === name){\n      data.stock = stock;\n    }\n  });\n return datas;\n}\n\n/*注文確認ボタンにて削除ボタン押し下時に大元propsの在庫反映*/\n\nexport const pushDeleteButtonTolocalData = (name,orderNumber,datas)=>{\n  datas.map((data)=>{\n    if(data.name === name){\n      let localnum = Number(data.stock);\n      localnum += Number(orderNumber);\n      data.stock = localnum;\n    }\n  });\n  \n}","import React, { useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { cartsAdd } from '../store/Store';\nimport { sameItemCheck,  selectItemCheck } from './setting';\n\nconst table ={\n  width: '100%',\n  border: '1px solid #c0c0c0'\n}\nconst select={\n  width:'30%',\n  height:'40px'\n}\n\n/**************************************************************************************** */\n\nconst  Show = (props)=>{\n  const[state, setState] = useState({\n    number: null,\n    process: '',\n    time: null,\n    total: props.itemData? props.itemData.price : 0\n  })\n  const stockOption = ()=>{\n    let array = []\n    for(let i=0; i<=Number(props.itemData.stock); i++){\n       array.push(i)\n    }\n    return array\n  }\n  /******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n /********************************カテゴリーの配列化************************************************** */\n const categoryArray = ()=>{\n   return  props.itemData.process.split(',')\n }\n /********************************注文数変更************************************************** */\n const numberChange = (e)=>{\n   setState({\n     number: e.target.value,\n     process: state.process, \n     time: state.time,\n     total:  Number(props.itemData.price) * Number(e.target.value)\n   })\n}\n/********************************加工方法変更************************************************** */\nconst processChange = (e)=>{\n  setState({\n    number: state.number,\n    process: e.target.value,\n    time: state.time,\n    total:  state.total\n  })\n}\n/********************************受け取り時間************************************************** */\nconst timeChange = (e)=>{\n  setState({\n    number: state.number,\n    process: state.process,\n    time: e.target.value,\n    total:  state.total\n  })\n}\n/********************************サブミット************************************************** */\n\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let propData = props.itemData;\n    \n    let check = sameItemCheck(props.buyCarts, propData.name, state.process);\n    let stock = Number(props.itemData.stock);\n    let minusNumber = Number(state.number);\n    if(minusNumber > 0 &&  selectItemCheck(state.process)){\n      if(!check){\n        stock -= minusNumber;\n        propData.stock = stock;\n        props.changeItemData(propData);\n        let action = cartsAdd({name: propData.name, num: state.number, price: propData.price, process:　state.process, time: state.time});\n        props.dispatch(action);\n        props.history.push('/customor/index');\n      }\n      else{\n        alert('すでに注文しています。');\n      }\n    }\n    else if(minusNumber ===0){\n      alert('数量を入力してください。');\n    }\n    else if(! selectItemCheck(state.process)){\n      alert('加工法を選択してください。');\n    }\n    else{\n      alert('数量もしくは加工法が未入力です。');\n    }\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n   {props.itemData? \n     <>\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-info\">{props.itemData.name}注文</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n            <form onSubmit={doSubmit} className=\"W-100\">\n             <Table  style={table}>\n               <thead>\n                 <th className=\"bg-dark text-center text-white\">商品名</th>\n                 <th className=\"bg-dark text-center text-white\">価格</th>\n                 <th className=\"bg-dark text-center text-white\">買い上げ数</th>\n                 <th className=\"bg-dark text-center text-white\">加工法</th>\n                 <th className=\"bg-dark text-center text-white\">受け取り時間</th>\n                 <th className=\"bg-dark text-center text-white\">合計金額</th>\n               </thead>\n               <tbody>\n                 <tr>\n                   <td className=\"font-weight-bold text-center align-middle\">{props.itemData.name}</td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{props.itemData.price}</td>\n                   <td className=\"font-weight-bold text-center\">\n                     <select className=\"form-control\" onChange={numberChange}>\n                       {stockOption().map((num)=>(\n                         <option>{num}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle\">\n                   <select className=\"form-control\" onChange={processChange}>\n                       <option value=\"\">--加工法を選択してください--</option>\n                       {categoryArray().map((process)=>(\n                         <option>{process}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td>\n                     <input \n                        type=\"time\" \n                        value={state.time}  \n                        className=\"form-control\"\n                        onChange={timeChange}\n                     />\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{state.total}</td>\n                 </tr>\n               </tbody>\n             </Table>\n              <div className=\"text-left\">\n                <input type=\"submit\" value=\"追加\"　className=\"btn btn-primary btn-lg\" />\n              </div>\n             </form>\n        </Col>    \n      </Row>\n     </>\n     : \n     ''\n     }\n      \n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { cartsAdd } from '../store/Store';\nimport { sameItemCheck,  selectItemCheck } from './setting';\n\nconst table ={\n  width: '100%',\n  border: '1px solid #c0c0c0'\n}\nconst select={\n  width:'30%',\n  height:'40px'\n}\n\n/**************************************************************************************** */\n\nconst  Show = (props)=>{\n  const[state, setState] = useState({\n    number: null,\n    process: '',\n    time: null,\n    total: props.itemData? props.itemData.price : 0\n  })\n  const stockOption = ()=>{\n    let array = []\n    for(let i=0; i<=Number(props.itemData.stock); i++){\n       array.push(i)\n    }\n    return array\n  }\n  /******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n /********************************カテゴリーの配列化************************************************** */\n const categoryArray = ()=>{\n   return  props.itemData.process.split(',')\n }\n /********************************注文数変更************************************************** */\n const numberChange = (e)=>{\n   setState({\n     number: e.target.value,\n     process: state.process, \n     time: state.time,\n     total:  Number(props.itemData.price) * Number(e.target.value)\n   })\n}\n/********************************加工方法変更************************************************** */\nconst processChange = (e)=>{\n  setState({\n    number: state.number,\n    process: e.target.value,\n    time: state.time,\n    total:  state.total\n  })\n}\n/********************************受け取り時間************************************************** */\nconst timeChange = (e)=>{\n  setState({\n    number: state.number,\n    process: state.process,\n    time: e.target.value,\n    total:  state.total\n  })\n}\n/********************************サブミット************************************************** */\n\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let propData = props.itemData;\n    \n    let check = sameItemCheck(props.buyCarts, propData.name, state.process);\n    let stock = Number(props.itemData.stock);\n    let minusNumber = Number(state.number);\n    if(minusNumber > 0 &&  selectItemCheck(state.process)){\n      if(!check){\n        stock -= minusNumber;\n        propData.stock = stock;\n        props.changeItemData(propData);\n        let action = cartsAdd({name: propData.name, num: state.number, price: propData.price, process:　state.process, time: state.time});\n        props.dispatch(action);\n        props.history.push('/customor/index');\n      }\n      else{\n        alert('すでに注文しています。');\n      }\n    }\n    else if(minusNumber ===0){\n      alert('数量を入力してください。');\n    }\n    else if(! selectItemCheck(state.process)){\n      alert('加工法を選択してください。');\n    }\n    else{\n      alert('数量もしくは加工法が未入力です。');\n    }\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <div className=\"w-100\">\n   {props.itemData? \n     <>\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-info\">{props.itemData.name}注文</h2>\n      </div>\n      <div className=\"w-100 bg-white\">\n            <form onSubmit={doSubmit} className=\"W-100\">\n             <Table  style={table}>\n               <tbody>\n                 <tr>\n                   <Table bordered style={table}>\n                     <tbody>\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">商品名</th>\n                        <td className=\"font-weight-bold text-center align-middle\">{props.itemData.name}</td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">価格</th>\n                        <td className=\"font-weight-bold text-center align-middle text-danger\">{props.itemData.price}</td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">買い上げ数</th>\n                        <td className=\"font-weight-bold text-center\">\n                          <select className=\"form-control\" onChange={numberChange}>\n                            {stockOption().map((num)=>(\n                              <option>{num}</option>\n                            ))}\n                          </select>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">加工法</th>\n                        <td className=\"font-weight-bold text-center align-middle\">\n                          <select className=\"form-control\" onChange={processChange}>\n                              <option value=\"\">--加工法を選択してください--</option>\n                              {categoryArray().map((process)=>(\n                                <option>{process}</option>\n                              ))}\n                            </select>\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">受け取り時間</th>\n                        <td>\n                          <input \n                              type=\"time\" \n                              value={state.time}  \n                              className=\"form-control\"\n                              onChange={timeChange}\n                          />\n                        </td>\n                      </tr>\n\n                      <tr>\n                        <th className=\"bg-dark text-center text-white\">合計金額</th>\n                        <td className=\"font-weight-bold text-center align-middle text-danger\">{state.total}</td>\n                      </tr>\n                     \n                     </tbody>\n                   </Table>\n                 </tr>\n               </tbody>\n             </Table>\n              <div className=\"text-left\">\n                <input type=\"submit\" value=\"追加\"　className=\"btn btn-primary btn-lg btn-block\" />\n              </div>\n             </form>\n      </div>\n     </>\n     : \n     ''\n     }\n      \n   </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","\nimport '../App.css'\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\n\nconst NoData = ()=>{\n  return(\n    <div className=\"p-5 bg-secondary text-center font-weight-bold text-white mt-4 \">注文商品はありません。</div>\n  )\n}\nexport default NoData;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport { cartEmpty, cartUpdate, ordersStockChange } from '../store/Store';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faFish, faYenSign, faCalculator, faUtensils, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart, sendLoginData, ordersSend} from '../store/Store';\nimport Empty from './NoData';\nimport { localstorageChange } from './setting';\n\nconst title={\n  fontFamily: 'ヒラギノ明朝',\n  color: '#0000CD',\n  fontWeight: 'bold',\n  marginTop: '8%'\n}\nconst span ={\n  color: '#6927FF',\n  marginRight: '20px'\n}\nconst th={\n  background: '#8EB8FF',\n  color: '#eee',\n  textAlign: 'center'\n}\n\n/**************************************************************************************** */\n\nconst  Confirm = (props)=>{\n \n/*カートの商品の数量のみ配列化 */\n\nconst cartNum = ()=>{\n  let array = [];\n  props.buyCarts.forEach((data) => {\n    array.push(Number(data.num));\n  });\n  return array;\n}\n \n/***************************** ステート管理 ************************************************************** */\nconst[state, setState] = useState(props.orderData); /* 全体の在庫*/\nconst[num, setNumber] = useState(cartNum());  /* 現在の注文数ステータス */\n\n\n/***************************** セレクトの数量表示 ************************************************************** */\nconst selectNumber =(number)=>{\n  let array = [];\n  for(let i=0; i<= Number(number); i++){\n    array.push(i);\n  }\n  return array;\n}\n/***********************サーバー送信注文確定***************************************************************** */\nconst sendServer = ()=>{\n    let result = window.confirm('注文を確定してよろしいですか？');\n    if(result){\n      const params = new FormData();\n    params.append('email', props.userData[0].email);\n    params.append('name', props.userData[0].name);\n\n     /* PHP送信　*/\n    axios.post('http://yukiabineko.sakura.ne.jp/mail.php',\n　　　 params,\n      {\n        headers:{\n          'content-type': 'multipart/form-data',\n        },\n      }\n    ).then((res)=>{\n        console.log(res.data);\n    }).catch(()=>{\n    })\n\n\n  let sendData = props.buyCarts;\n   let obj = {}\n   obj['id'] = props.userData[0].id;\n   obj['data'] = sendData\n\n   /* rails送信　*/\n   axios.post('https://uematsu-backend.herokuapp.com/shoppings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n\n        alert(response.data.message); \n        axios.get(`https://uematsu-backend.herokuapp.com/users/${props.userData[0].id}`).then(function(response){\n           let action = sendLoginData (response.data);\n           props.dispatch(action);\n\n        }).catch(function(err){\n         console.log(err);\n        });\n      })\n      .catch(function(){\n        alert('error');\n      }) \n    \n    props.history.push('/customor');  /*ユーザーページへ移動*/\n    props.dispatch(cartEmpty());  /*買い物カゴリセット*/\n\n    }\n    \n  }\n  /**********************************商品アイテム削除************************************************************************************************ */\n  const deleteItem = (index, name, n)=>{\n    let action = cartDeleteCart(index);\n    props.dispatch(action);\n    \n    let action2 = ordersStockChange(name, n);\n    props.dispatch(action2);\n\n\n    /*選択数ステートも更新*/\n    let number = num.slice();\n    number.splice(index, 1);\n    \n\n    setNumber(number);\n    \n    \n\n  }\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n    loginUserCheck();\n    })\n/******************************セレクト切り替え********************************************************** */\nconst doSelect = (e)=>{\n  let currentNumber = Number(num[Number(e.target.name)]);\n  let changeNumber = Number(e.target.value);\n  let calcNumber = changeNumber - currentNumber;\n  let cartItemName = props.buyCarts[Number(e.target.name)].name;\n  let stateData = state.slice();\n  \n\n  stateData.forEach((data,i)=>{\n    let dataNumber = Number(data.stock);\n    \n    if(data.name === cartItemName){   /*セレクトの商品と全商品検証*/\n      /*増やしたか？　減らしたか? */\n      \n      if(calcNumber > 0){\n         stateData[i].stock = dataNumber - calcNumber;  /*数量増やした場合全体在庫減る*/\n          /*大元のストレージも変更*/\n          let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n          let changePropDatas = propOrders;\n        \n          let action = ordersSend(changePropDatas);\n          props.dispatch(action);\n         \n      }\n      else if(calcNumber <0){\n        stateData[i].stock = dataNumber + (currentNumber - changeNumber); /*数量増やした場合全体在庫増えるまたマイナスになるので計算反転*/\n         /*大元のストレージも変更*/\n        let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n        let changePropDatas = propOrders;\n      \n        let action = ordersSend(changePropDatas);\n        props.dispatch(action);\n      }\n    }\n  });\n  /*redux buycart変更*/\n  let buycart = props.buyCarts.slice();\n\n  let thiscartData = {\n    name: cartItemName,\n    num: changeNumber,\n    price: props.buyCarts[Number(e.target.name)].price,\n    process:props.buyCarts[Number(e.target.name)].process\n  }\n  /*リスト(買い物カゴ)の内変更かけたものを入れ替え*/\n\n  buycart[Number(e.target.name)] = thiscartData;\n  /*ストア送信(update)*/\n\n  let delAction =  cartUpdate(buycart);\n  props.dispatch(delAction);\n  \n\n  /*在庫ステート変更*/\n\n  setState(stateData);\n  let numArray = num.slice();\n  numArray[Number(e.target.name)] = changeNumber;\n  setNumber(numArray);\n}\n/************************時間変更************************************************* */\n  const timesChange =(e)=>{\n    let index = Number(e.target.name);\n    let carts = props.buyCarts.slice();\n    carts[index].time = e.target.value;\n    let action = cartUpdate(carts);\n    props.dispatch(action);\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n       <div className=\"text-center mt-5 mb-3\">\n         <h1 style={title}>\n           <span style={span}><FontAwesomeIcon icon ={faShoppingCart} /></span>\n           注文確認\n        </h1>\n       </div>\n       <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          {props.buyCarts.length >0? \n          <Form>\n           <Table bordered className=\"mt-3\">\n             <thead>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faFish} />\n                  </span>\n                  商品名\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faYenSign} />\n                  </span>\n                  価格\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faCalculator} />\n                  </span>\n                  数\n               </th>\n               <th style={th}>\n                 <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faUtensils} />\n                  </span>\n                  加工法\n               </th>\n               <th style={th}>\n                 <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faUtensils} />\n                  </span>\n                  受け取り時間\n               </th>\n               <th style={th}>合計</th>\n               <th style={th}></th>\n             </thead>\n             <tbody>\n               {props.buyCarts.map((data,index)=>(\n                 <tr>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.name}</td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.price}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                      <label>{\"現在\" + num[index]}</label>\n                      <Form.Control as=\"select\" size=\"sm\" custom value={num[index]} onChange={(index)=>doSelect(index)} name={index} >\n                       {state.map((order)=>(\n                         order.name === data.name? \n                         /*在庫にすでに選択されている数量足した数*/\n                         \n                           selectNumber(Number(order.stock) + Number(num[index])).map((value)=>(\n                             <option key={value}>{value}</option>\n                           ))\n                           : \n                           ''\n                       ))}\n                      </Form.Control>\n                   </td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.process}</td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">\n                    <input \n                          name={index}\n                          type=\"time\" \n                          value={data.time}  \n                          className=\"form-control\"\n                          onChange={timesChange}\n                      />\n                   </td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{Number(data.price) * Number(num[index])}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                     <Button \n                       variant=\"danger\"\n                       onClick={()=>deleteItem(index, data.name, num[index])}\n                     >\n                    削除\n                     </Button>\n                   </td>\n                 </tr>\n               ))}\n             </tbody>\n           </Table>\n           <div className=\"text-center\">\n             <Button  \n               variant=\"primary\"\n               className=\"btn-lg\"\n               onClick={sendServer}\n             >\n             <span><FontAwesomeIcon icon={faCashRegister} /></span>\n             注文確定\n             </Button>\n           </div>\n         </Form> \n           : \n          <Empty />\n         }\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Confirm))\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport { cartEmpty, cartUpdate, ordersStockChange } from '../store/Store';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faFish, faYenSign, faCalculator, faUtensils, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart, sendLoginData, ordersSend} from '../store/Store';\nimport Empty from './NoData';\nimport { localstorageChange } from './setting';\n\n\nconst table ={\n  width: '100%'\n}\n\nconst title={\n  fontFamily: 'ヒラギノ明朝',\n  color: '#0000CD',\n  fontWeight: 'bold',\n  marginTop: '8%'\n}\nconst span ={\n  color: '#6927FF',\n  marginRight: '20px'\n}\nconst th={\n  background: '#8EB8FF',\n  color: '#eee',\n  textAlign: 'center'\n}\n\n/**************************************************************************************** */\n\nconst  PhoneConfirm = (props)=>{\n \n/*カートの商品の数量のみ配列化 */\n\nconst cartNum = ()=>{\n  let array = [];\n  props.buyCarts.forEach((data) => {\n    array.push(Number(data.num));\n  });\n  return array;\n}\n \n/***************************** ステート管理 ************************************************************** */\nconst[state, setState] = useState(props.orderData); /* 全体の在庫*/\nconst[num, setNumber] = useState(cartNum());  /* 現在の注文数ステータス */\n\n\n/***************************** セレクトの数量表示 ************************************************************** */\nconst selectNumber =(number)=>{\n  let array = [];\n  for(let i=0; i<= Number(number); i++){\n    array.push(i);\n  }\n  return array;\n}\n/***********************サーバー送信注文確定***************************************************************** */\nconst sendServer = ()=>{\n    let result = window.confirm('注文を確定してよろしいですか？');\n    if(result){\n      const params = new FormData();\n    params.append('email', props.userData[0].email);\n    params.append('name', props.userData[0].name);\n\n     /* PHP送信　*/\n    axios.post('http://yukiabineko.sakura.ne.jp/mail.php',\n　　　 params,\n      {\n        headers:{\n          'content-type': 'multipart/form-data',\n        },\n      }\n    ).then((res)=>{\n        console.log(res.data);\n    }).catch(()=>{\n    })\n\n\n  let sendData = props.buyCarts;\n   let obj = {}\n   obj['id'] = props.userData[0].id;\n   obj['data'] = sendData\n\n   /* rails送信　*/\n   axios.post('http://uematsu-backend.herokuapp.com/shoppings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n\n        alert(response.data.message); \n        axios.get(`https://uematsu-backend.herokuapp.com/users/${props.userData[0].id}`).then(function(response){\n           let action = sendLoginData (response.data);\n           props.dispatch(action);\n\n        }).catch(function(err){\n         console.log(err);\n        });\n      })\n      .catch(function(){\n        alert('error');\n      }) \n    \n    props.history.push('/customor');  /*ユーザーページへ移動*/\n    props.dispatch(cartEmpty());  /*買い物カゴリセット*/\n\n    }\n    \n  }\n  /**********************************商品アイテム削除************************************************************************************************ */\n  const deleteItem = (index, name, n)=>{\n    let action = cartDeleteCart(index);\n    props.dispatch(action);\n    \n    let action2 = ordersStockChange(name, n);\n    props.dispatch(action2);\n\n\n    /*選択数ステートも更新*/\n    let number = num.slice();\n    number.splice(index, 1);\n    \n\n    setNumber(number);\n    \n    \n\n  }\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n    loginUserCheck();\n    })\n/******************************セレクト切り替え********************************************************** */\nconst doSelect = (e)=>{\n  let currentNumber = Number(num[Number(e.target.name)]);\n  let changeNumber = Number(e.target.value);\n  let calcNumber = changeNumber - currentNumber;\n  let cartItemName = props.buyCarts[Number(e.target.name)].name;\n  let stateData = state.slice();\n  \n\n  stateData.forEach((data,i)=>{\n    let dataNumber = Number(data.stock);\n    \n    if(data.name === cartItemName){   /*セレクトの商品と全商品検証*/\n      /*増やしたか？　減らしたか? */\n      \n      if(calcNumber > 0){\n         stateData[i].stock = dataNumber - calcNumber;  /*数量増やした場合全体在庫減る*/\n          /*大元のストレージも変更*/\n          let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n          let changePropDatas = propOrders;\n        \n          let action = ordersSend(changePropDatas);\n          props.dispatch(action);\n         \n      }\n      else if(calcNumber <0){\n        stateData[i].stock = dataNumber + (currentNumber - changeNumber); /*数量増やした場合全体在庫増えるまたマイナスになるので計算反転*/\n         /*大元のストレージも変更*/\n        let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n        let changePropDatas = propOrders;\n      \n        let action = ordersSend(changePropDatas);\n        props.dispatch(action);\n      }\n    }\n  });\n  /*redux buycart変更*/\n  let buycart = props.buyCarts.slice();\n\n  let thiscartData = {\n    name: cartItemName,\n    num: changeNumber,\n    price: props.buyCarts[Number(e.target.name)].price,\n    process:props.buyCarts[Number(e.target.name)].process\n  }\n  /*リスト(買い物カゴ)の内変更かけたものを入れ替え*/\n\n  buycart[Number(e.target.name)] = thiscartData;\n  /*ストア送信(update)*/\n\n  let delAction =  cartUpdate(buycart);\n  props.dispatch(delAction);\n  \n\n  /*在庫ステート変更*/\n\n  setState(stateData);\n  let numArray = num.slice();\n  numArray[Number(e.target.name)] = changeNumber;\n  setNumber(numArray);\n}\n/************************時間変更************************************************* */\n  const timesChange =(e)=>{\n    let index = Number(e.target.name);\n    let carts = props.buyCarts.slice();\n    carts[index].time = e.target.value;\n    let action = cartUpdate(carts);\n    props.dispatch(action);\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n       <div className=\"text-center mt-5\">\n         <h1 style={title}>\n           <span style={span}><FontAwesomeIcon icon ={faShoppingCart} /></span>\n           注文確認\n        </h1>\n       </div>\n       <div className=\"bg-white p-2\"></div>\n       <div className=\"bg-white pb-3\">\n          {props.buyCarts.length >0? \n          <Form>\n           <Table bordered className=\"w-100\">\n             <tbody>\n               {props.buyCarts.map((data,index)=>(\n                 <tr>\n                  <Table>\n                   <tr>\n                     <th style={th}>\n                        <span className=\"text-primary mr-2 h5\">\n                          <FontAwesomeIcon icon={faFish} />\n                        </span>\n                        商品名\n                     </th>\n                     <td className=\"text-dark text-center font-weight-bold align-middle\">{data.name}</td>\n                   </tr>\n                  \n                   <tr>\n                    <th style={th}>\n                      <span className=\"text-primary mr-2 h5\">\n                          <FontAwesomeIcon icon={faYenSign} />\n                        </span>\n                          価格\n                      </th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">{data.price}</td>\n                   </tr>\n\n                   <tr>\n                    <th style={th} className=\"align-middle\">\n                      <span className=\"text-primary mr-2 h5\">\n                        <FontAwesomeIcon icon={faCalculator} />\n                      </span>\n                        数\n                    </th>\n                      <td className=\"text-dark text-center font-weight-bold\">\n                        <label>{\"現在\" + num[index]}</label>\n                        <Form.Control as=\"select\" size=\"sm\" custom value={num[index]} onChange={(index)=>doSelect(index)} name={index} >\n                        {state.map((order)=>(\n                          order.name === data.name? \n                          /*在庫にすでに選択されている数量足した数*/\n                          \n                            selectNumber(Number(order.stock) + Number(num[index])).map((value)=>(\n                              <option key={value}>{value}</option>\n                            ))\n                            : \n                            ''\n                        ))}\n                        </Form.Control>\n                      </td>\n                   </tr>\n                    \n                   <tr>\n                    <th style={th}>\n                      <span className=\"text-primary mr-2 h5\">\n                        <FontAwesomeIcon icon={faUtensils} />\n                      </span>\n                        加工法\n                    </th>\n                    <td className=\"text-dark text-center font-weight-bold align-middle\">{data.process}</td>\n                   </tr>\n\n\n                    <tr>\n                      <th style={th}>\n                        <span className=\"text-primary mr-2 h5\">\n                            <FontAwesomeIcon icon={faUtensils} />\n                        </span>\n                        受け取り時間\n                      </th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">\n                        <input \n                          name={index}\n                          type=\"time\" \n                          value={data.time}  \n                          className=\"form-control\"\n                          onChange={timesChange}\n                          />\n                      </td>\n                    </tr>\n                    \n                    <tr>\n                      <th style={th}>合計</th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">{Number(data.price) * Number(num[index])}</td>\n                    </tr>\n\n                    <tr>\n                       <td colSpan=\"2\" className=\"text-dark text-center font-weight-bold\">\n                         <Button \n                            variant=\"danger\"\n                            onClick={()=>deleteItem(index, data.name, num[index])}\n                            className=\"btn-block\"\n                          >\n                          削除\n                         </Button>\n                       </td>\n                    </tr>\n                  </Table>\n                 </tr>\n               ))}\n             </tbody>\n           </Table>\n           <div className=\"text-center\">\n             <Button  \n               variant=\"primary\"\n               className=\"btn-lg btn-block mb-5\"\n               onClick={sendServer}\n             >\n             <span><FontAwesomeIcon icon={faCashRegister} /></span>\n             注文確定\n             </Button>\n           </div>\n         </Form> \n           : \n          <Empty />\n         }\n      </div>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneConfirm))\n","\n/*当日日付のみ表示するための分岐処理*/\n\nexport const viewDataBranch = (date)=>{\n  /*本日*/\n\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n  /*注文データ*/\n\n  const createDate = new Date(date);\n  const c_year = createDate.getFullYear();\n  const c_month = createDate.getMonth() + 1;\n  const c_day = createDate.getDate();\n\n  /*照合*/\n  if( year === c_year && month === c_month && day === c_day){\n     return 1;\n  }\n  else{\n     return 0;\n  }\n\n}\n/********************************************************************************************* */\n/*オーダーで今日の日付のものがあるかチェック*/\n\nexport const todayOdrersChecker = (shoppings)=>{\n  let target = 0;\n  shoppings.forEach((shopping)=> {\n     let data = viewDataBranch(shopping.shopping_date);\n     /*各オーダーで今日日付のものがあれば加算*/\n     if(data === 1) target ++;\n  });\n  return target;\n}\n/*(ヘッダー表示用,商品リスト用)明日の日付アイテムあるか確認 */\n\nexport const todayOrderExisting =(shoppings)=>{\n   let todayObjects = [];\n   let date = new Date();\n   let year = date.getFullYear();\n   let month = date.getMonth() + 1;\n   date.setDate(date.getDate() + 1); \n   let day = date.getDate();  /*tomorrow */\n\n   if(shoppings){\n      shoppings.forEach((shopping)=>{\n         let t_date = new Date(shopping.shopping_date);\n         let t_year = t_date.getFullYear();\n         let t_month = t_date.getMonth() + 1;\n         let t_day = t_date.getDate();\n         if( year === t_year && month === t_month && day === t_day){\n            todayObjects.push(shopping);\n         }\n      });\n   }\n   return todayObjects;\n}\n/*売上速報ページ売上合計計算*/\nexport  const totalSales = (datas)=>{\n  let total = 0\n  if(datas){\n   datas.map((data)=>{\n      total += Number(data.合計);\n   })\n  }\n  return total;\n}\n","import { useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { viewDataBranch, todayOdrersChecker } from \"./settiing\";\nimport { daySetting } from '../users/setting';\nimport { timeSetting } from '../setting';\n\n const customButton ={\n   border: \"none\",\n   borderBottom: \"1px solid #0000bb\",\n   background: \"none\",\n   color: \"#0000bb\",\n   outline: 'none',\n   fontWeight: 'bold'\n }\n\n function PcIndex(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n\n  /************************ステート*************************************** */\n  const[shopingData, setState] = useState(\n    localData ?localData : []\n  )\n  \n  /*************APIによるshopping一覧**********************************/\n  /*async function shoppingsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/shoppings')\n      .then((res)=>{\n         localStorage.removeItem('shoppings');\n         setState(res.data);\n         localStorage.setItem('shoppings', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(shoppingsCall()); */\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/***************************************ステータス分岐********************************************************************** */\n  const orderStatus = (status)=>{\n    switch (status) {\n      case 0:\n        return <div className=\"bg-info text-center text-white mt-3\">申請中</div>;\n      case 1:\n        return <div className=\"bg-warning text-center text-white mt-3\">加工済み</div>;\n      case 2:\n        return <div className=\"bg-danger text-center text-white mt-3\">受け渡し済み</div>;\n    default:\n        break;\n    }\n  }\n  /****************************************カスタムbutton hover*************************************************** */\n  const hoverButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"#BAD3FF\";\n  }\n  /****************************************カスタムbutton out*************************************************** */\n  const outButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"none\";\n  }\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.showShoppingStatus(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\" className=\"font-weight-bold text-info\">注文確認表</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          {(shopingData.length >0 && todayOdrersChecker(shopingData) > 0)? \n            <Table bordered striped>\n              <thead>\n                <th className=\"bg-primary text-white text-center\">日付</th>\n                <th className=\"bg-primary text-white text-center\">受け渡し時間</th>\n                <th className=\"bg-primary text-white text-center\">商品名</th>\n                <th className=\"bg-primary text-white text-center\">お客様名</th>\n                <th className=\"bg-primary text-white text-center\">価格</th>\n                <th className=\"bg-primary text-white text-center\">個数</th>\n                <th className=\"bg-primary text-white text-center\">加工法</th>\n                <th className=\"bg-primary text-white text-center\">合計金額{todayOdrersChecker(shopingData).length}</th>\n              </thead>\n              <tbody>\n                {shopingData.map((data,i)=>(\n                  /* 当日のみ表示 */\n\n                  viewDataBranch(data.shopping_date) === 1? \n                  <tr>\n                  <td className=\"font-weight-bold text-center align-middle\">{daySetting(data.shopping_date)}</td>\n                  <td className=\"font-weight-bold text-danger align-middle text-center\">{timeSetting(data.receiving_time)}</td>\n                  <td className=\"font-weight-bold text-center align-center\">\n                    <button \n                      style={customButton} \n                      id={`customButton${i}`}\n                      onMouseOver={()=>hoverButton(i)}\n                      onMouseOut={()=>outButton(i)}\n                      className=\"customButton\"\n                      onClick={()=>showShoppingStatus(data)}\n                      >{data.name}</button>\n                    \n                    <br/>\n                    {orderStatus(data.status)}\n                  </td>\n                  <td className=\"font-weight-bold text-center align-middle\">{`${data.user_name}様`}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">{data.price}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.num}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.process}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">\n                    { Number(data.price) * Number(data.num) }\n                  </td>\n                </tr>\n                   : \n                   ''\n                ))}\n              </tbody>\n            </Table>\n            : \n            <div className=\"bg-secondary text-center text-white font-weight-bold p-3\">データがありません。</div>\n          }\n          \n        </Col>\n      </Row>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { viewDataBranch, todayOdrersChecker } from \"./settiing\";\nimport { daySetting } from '../users/setting';\nimport { timeSetting } from '../setting';\n\n const customButton ={\n   border: \"none\",\n   borderBottom: \"1px solid #0000bb\",\n   background: \"none\",\n   color: \"#0000bb\",\n   outline: 'none',\n   fontWeight: 'bold'\n }\n\n function PcIndex(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n\n  /************************ステート*************************************** */\n  const[shopingData, setState] = useState(\n    localData ? localData : []\n  )\n  \n  /*************APIによるshopping一覧**********************************/\n  /*async function shoppingsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/shoppings')\n      .then((res)=>{\n         localStorage.removeItem('shoppings');\n         setState(res.data);\n         localStorage.setItem('shoppings', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(shoppingsCall());*/\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/***************************************ステータス分岐********************************************************************** */\n  const orderStatus = (status)=>{\n    switch (status) {\n      case 0:\n        return <div className=\"bg-info text-center text-white mt-3\">申請中</div>;\n      case 1:\n        return <div className=\"bg-warning text-center text-white mt-3\">加工済み</div>;\n      case 2:\n        return <div className=\"bg-danger text-center text-white mt-3\">受け渡し済み</div>;\n    default:\n        break;\n    }\n  }\n  /****************************************カスタムbutton hover*************************************************** */\n  const hoverButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"#BAD3FF\";\n  }\n  /****************************************カスタムbutton out*************************************************** */\n  const outButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"none\";\n  }\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.showShoppingStatus(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div className=\"w-100\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\" className=\"font-weight-bold text-info\">注文確認表</h2>\n      </div>\n      <div className=\"w-100 bg-white\">\n          {(shopingData.length >0 && todayOdrersChecker(shopingData) > 0)? \n            <Table striped className=\"w-100\" >\n              <tbody>\n                {shopingData.map((data,i)=>(\n                  /* 当日のみ表示 */\n\n                  viewDataBranch(data.shopping_date) === 1? \n                  <tr>\n                    <Table bordered>\n                      <tbody>\n                        <tr>\n                          <td colSpan=\"5\" className=\"font-weight-bold text-danger bg-white text-center\">受け取り時間:{timeSetting(data.receiving_time)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">受け渡し日</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">{daySetting(data.shopping_date)}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">商品名</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-center\">\n                            <button \n                              style={customButton} \n                              id={`customButton${i}`}\n                              onMouseOver={()=>hoverButton(i)}\n                              onMouseOut={()=>outButton(i)}\n                              className=\"customButton\"\n                              onClick={()=>showShoppingStatus(data)}\n                              >{data.name}</button>\n                            \n                            <br/>\n                            {orderStatus(data.status)}\n                          </td>\n                        </tr>\n                         \n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">お客様名</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">{`${data.user_name}様`}</td>\n                        </tr>\n\n                        <tr>\n                           <th className=\"bg-primary text-white text-center align-middle\">価格</th>\n                           <td className=\"font-weight-bold text-center text-danger align-middle\">{data.price}</td>\n                           <td className=\"font-weight-bold text-center text-danger align-middle\">\n                            ({ Number(data.price) * Number(data.num) })\n                           </td>\n                           <th className=\"bg-primary text-white text-center align-middle\">個数</th>\n                           <td className=\"font-weight-bold text-center align-middle\">{data.num}</td>\n                        </tr>\n\n                        <tr>\n                          <th className=\"bg-primary text-white text-center align-middle\">加工法</th>\n                          <td colSpan=\"4\" className=\"font-weight-bold text-center align-middle\">{data.process}</td>\n                        </tr>\n\n\n                      </tbody>\n                    </Table>\n                </tr>\n                   : \n                   ''\n                ))}\n              </tbody>\n            </Table>\n            : \n            <div className=\"bg-secondary text-center text-white font-weight-bold p-3\">データがありません。</div>\n          }\n          \n      </div>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport MediaQuery from \"react-responsive\";\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\n\n\n function Index(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.sendShoppingData(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex \n          showShoppingStatus={(data)=>showShoppingStatus(data)}\n        />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex \n           showShoppingStatus={(data)=>showShoppingStatus(data)}\n        />\n      </MediaQuery>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUtensils, faTruck, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { chartSend } from '../store/Store';\n\nconst font ={\n  fontSize: '24px'\n}\n\nconst  Show = (props)=>{\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck);\n\n    /*ステータスによる条件訳*/\n\n    const statusLayout = ()=>{\n      switch (props.show.status) {\n        case 0:\n          return <div className=\"bg-info text-white text-center\">申請中</div>;\n        case 1:\n          return <div className=\"bg-warning text-white text-center\">加工済み</div>;\n        case 2:\n          return <div className=\"bg-danger text-white text-center\">受け渡し済み</div>;\n        default:\n          break;\n      }\n    }\n    /* ステータス変更サーバー送信 */\n    \n    const sendStatusNumber = (num)=>{\n\n       /* rails側への送信*/\n      \n       const params = {\n        id: props.show.id,\n        name: props.show.user_name,\n        status: num\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/shoppings/${props.show.id}`, params)\n      .then(function (response) {\n        /*処理後更新*/\n         axios\n            .get('https://uematsu-backend.herokuapp.com/shoppings')\n            .then((res)=>{\n              localStorage.removeItem('shoppings');\n              localStorage.setItem('shoppings', JSON.stringify(res.data));\n              props.history.push('/shoppings');\n            })\n            .catch((error)=>{\n              console.log(error);\n            })\n        axios\n        .get('https://uematsu-backend.herokuapp.com/sales')\n        .then((res)=>{\n            let action = chartSend(res.data);\n            props.dispatch(action);\n        })\n        .catch((error)=>{\n          console.log(error);\n        })\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        \n      })\n      .catch(function(){\n        alert('error');\n      })\n     \n    }\n    \n  return(\n   <>\n    <div className=\"text-center mt-5\">\n      <h2 className=\"font-weight-bold\">注文状況確認/変更</h2>\n    </div>\n    <Row>\n      < Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n        {props.show? \n          <div>\n          {/*　注文情報 */ }\n\n          <Table bordered>\n            <tbody>\n              <tr>\n                <th className=\"bg-primary text-white\">商品名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{props.show.name}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">お客様名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{`${props.show.user_name}様`}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">価格</th>\n                <td className=\"font-weight-bold\">{props.show.price}</td>\n                <th className=\"bg-primary text-white\">注文数</th>\n                <td className=\"font-weight-bold\">{props.show.num}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">合計金額</th>\n                <td className=\"font-weight-bold\">{Number(props.show.price) * Number(props.show.num)}</td>\n                <th className=\"bg-primary text-white\">注文状況</th>\n                <td className=\"font-weight-bold\">{statusLayout()}</td>\n               \n              </tr>\n            </tbody>\n          </Table>\n\n          {/* 変更エリア */}\n           <p className=\"font-weight-bold\">現在の注文商品の状況を変更するには<br/>対応するボタンを押してください。</p>\n           <fieldset className=\"bg-secondary p-2\">\n            {props.show.status === 0? \n              <>\n                 <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(1)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n              /* ステータス加工済み */\n              \n              props.show.status === 1 ? \n              <>\n                 <Button \n                    variant=\"primary\"\n                    className=\"btn-block p-4 font-weight-bold text-white \"\n                    onClick={()=>sendStatusNumber(0)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                   申請中に変更\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={ faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n               /* ステータス受け渡し済み */\n\n               <>\n               <Button \n                  variant=\"primary\"\n                  className=\"btn-block p-4 font-weight-bold text-white \"\n                  onClick={()=>sendStatusNumber(0)}\n                  style={font}\n                >\n                <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                 申請中に変更\n               </Button>\n               <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n            </>\n\n            }\n           </fieldset>\n          </div>\n           : \n          ''\n        }\n      </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { todayOrderExisting } from './settiing';\nimport { timeSetting } from '../setting';\n\n /******************************従業員側明日の予約確認ページ********************************************************** */\n\nconst  Reservation = (props)=>{\n \n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-light font-weight-bold\">明日の予約一覧表</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 10, offset: 1 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         {todayOrderExisting(JSON.parse(localStorage.getItem('shoppings'))).map((data,i)=>(\n           <>\n           <div className=\"font-weight-bold h3\">【{data.user_name}さん】</div>\n           <Table bordered className=\"mt-3\">\n             <tbody>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">商品名</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{data.name}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">依頼調理法</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{data.process}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">受け取り時間</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{timeSetting(data.receiving_time)}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">商品単価</th>\n                 <td className=\"font-weight-bold\">{data.price}</td>\n                 <th className=\"bg-primary text-white font-weight-bold\">注文数量</th>\n                 <td className=\"font-weight-bold\">{data.num}</td>\n                 <th className=\"bg-primary text-white font-weight-bold\">合計金額</th>\n                 <td className=\"font-weight-bold\">{data.price * data.num}</td>\n               </tr>\n               <tr>\n\n               </tr>\n             </tbody>\n           </Table>\n           </>\n         ))}\n           \n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Reservation));","/*売上速報ページ売上合計計算*/\nexport  const totalSales = (datas)=>{\n  let total = 0\n  if(datas){\n    datas.map((data)=>{\n      let num = data.合計? Number(data.合計) : 0;\n      total += num;\n    })\n  }\n  return total;\n \n}\n/*totalSales元に比率計算*/\nexport  const salesRate = (data, datas)=>{\n    let allTotal = totalSales(datas);\n    return data.合計? Math.floor(( Number(data.合計)  / allTotal) *100) : \"\";\n}","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'react-bootstrap';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer } from 'recharts';\nimport { totalSales, salesRate } from './setting';\n\n function PcIndex(props){\n  \n  const datas = props.chartData;\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  return(\n    <div>\n       <div className=\"text-center text-white mt-4\">\n        　<h1 className=\"font-weight-bold\">売上速報</h1>\n          <h3 className=\"font-weight-bold\">【2月】</h3>\n       </div>\n       <ResponsiveContainer width=\"100%\" height={300} className=\"bg-white\">\n            <BarChart  data={datas} margin={{ top: 5, right: 0, left: 10, bottom: 5, }}>\n            　　 <CartesianGrid strokeDasharray=\"3 3\" />\n            　　　<XAxis dataKey=\"day\" /><YAxis />\n            　　　<Tooltip />\n                <Legend />\n                <Bar dataKey=\"合計\" fill=\"orange\" />\n            </BarChart>\n        </ResponsiveContainer>\n\n        <div className=\"text-center font-weight-bold text-white mt-4\">\n            <h3 className=\"font-weight-bold\">【売上実績合計】{ totalSales(datas) }円</h3>\n        </div>\n        <div className=\"bg-white p-5 pt-2 pb-2\">\n        {datas? \n             <Table bordered>\n             <thead>\n                 <tr>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">日付</th>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">曜日</th>\n                     <th colSpan=\"3\" className=\"bg-primary text-white font-weight-bold text-center\">売上</th>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">販売数</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">売上金額</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">構成比</th>\n                 </tr>\n             </thead>\n             <tbody>\n                 {datas.map((data)=>(\n                     <tr>\n                       <td className=\"font-weight-bold text-center\">{data.day}</td>\n                       <td className=\"font-weight-bold text-center\">{data.week}</td>\n                       <td className=\"font-weight-bold text-center\">{data.num}</td>\n                       <td className=\"font-weight-bold text-center\">{data.合計}</td>\n                       <td className=\"font-weight-bold text-center\">{ salesRate(data, datas) }</td>\n                     </tr>\n                 ))}\n             </tbody>\n         </Table>\n            : \n          <div className=\"bg-secondary p-5 font-weight-bold text-white text-center\">データがありません。</div>\n          }\n         \n        </div>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'react-bootstrap';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer } from 'recharts';\nimport { totalSales, salesRate} from './setting';\n\n\n\n function PcIndex(props){\n  const datas = props.chartData;\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  return(\n    <div className=\"w-100\">\n       <div className=\"text-center text-white mt-4\">\n        　<h1 className=\"font-weight-bold\">売上速報</h1>\n          <h3 className=\"font-weight-bold\">【2月】</h3>\n       </div>\n\n       <ResponsiveContainer width=\"100%\" height={300} className=\"bg-white w-100\">\n            <BarChart  data={datas} margin={{ top: 5, right: 0, left: 10, bottom: 5, }}>\n            　　 <CartesianGrid strokeDasharray=\"3 3\" />\n            　　　<XAxis dataKey=\"date\" /><YAxis />\n            　　　<Tooltip />\n                <Legend />\n                <Bar dataKey=\"合計\" fill=\"orange\" />\n            </BarChart>\n        </ResponsiveContainer>\n\n        <div className=\"text-center font-weight-bold text-white mt-2\">\n            <h4 className=\"font-weight-bold text-primary\">【売上実績合計】{ totalSales(datas) }円</h4>\n        </div>\n        <div className=\"bg-white w-100 pb-2\">\n          {datas? \n             <Table bordered>\n             <thead>\n                 <tr>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">日付</th>\n                     <th rowSpan=\"2\" className=\"bg-primary text-white font-weight-bold text-center align-middle\">曜日</th>\n                     <th colSpan=\"3\" className=\"bg-primary text-white font-weight-bold text-center\">売上</th>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">販売数</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">売上金額</th>\n                   <th className=\"bg-primary text-white font-weight-bold text-center\">構成比</th>\n                 </tr>\n             </thead>\n             <tbody>\n                 {datas.map((data)=>(\n                     <tr>\n                       <td className=\"font-weight-bold text-center\">{data.day}</td>\n                       <td className=\"font-weight-bold text-center\">{data.week}</td>\n                       <td className=\"font-weight-bold text-center\">{data.num}</td>\n                       <td className=\"font-weight-bold text-center\">{data.合計}</td>\n                       <td className=\"font-weight-bold text-center\">{ salesRate(data, datas) }</td>\n                     </tr>\n                 ))}\n             </tbody>\n         </Table>\n            : \n          <div className=\"bg-secondary p-5 font-weight-bold text-white text-center\">データがありません。</div>\n          }\n         \n        </div>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","import { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport MediaQuery from \"react-responsive\";\nimport PcIndex from './PcIndex';\nimport PhoneIndex from './PhoneIndex';\n\n\n function Index(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n\n  return(\n    <div>\n       <MediaQuery minDeviceWidth={767}>\n        <PcIndex />\n      </MediaQuery>\n    \n      <MediaQuery maxDeviceWidth={767}>\n        <PhoneIndex />\n      </MediaQuery>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from \"react\";\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport axios from 'axios';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Index from './users/Index';\nimport Login from './Login';\nimport userNew from './users/New'\nimport Edit from './users/Edit'\nimport UserShow from './users/Show';\nimport EmpShow from './users/EmpShow';\nimport PhoneEmpShow from './users/PhoneEmpShow';\nimport UserOrder from './users/Order';\nimport ItemIndex from './items/Index';\nimport ItemNew from './items/New';\nimport ItemEdit from './items/Edit';\nimport Process from './items/Process';\nimport OrderIndex from './orders/Index';\nimport OrderNew from './orders/New';\nimport OrderEdit from './orders/Edit';\nimport CustomorIndex from './customer/Index'\nimport CustomorShow from './customer/Show'\nimport CustomorPhoneShow  from './customer/PhoneShow'\nimport Confirm from './customer/confirm';\nimport PhoneConfirm from './customer/PhoneConfirm';\nimport ShoppingIndex from './shopping/Index';\nimport ShoppingShow from './shopping/Show';\nimport Reservation from './shopping/Reservation';\nimport SalesIndex from './sale/Index';\nimport { connect } from \"react-redux\";\nimport { logoutAction, cartEmpty } from './store/Store';\nimport {  todayOrderExisting } from './shopping/settiing';\n\n function App(props){\n  const[state, setState] = useState({\n    editId: 0,\n    deleteId: 0,\n    itemEditId:0,\n    processId: 0,\n    OrderEditId: 0,\n    customerItem: null,\n    shoppingShow: null,\n    cartItem: null\n  })\n  const userlogout = ()=>{\n    let action = logoutAction();\n    props.dispatch(action);\n\n    let cartAction = cartEmpty(); /*買い物かごリセット*/\n    props.dispatch(cartAction);\n    /*買い物かご操作のリセット(ストレージ)*/\n\n    axios\n    .get('https://uematsu-backend.herokuapp.com/orders')\n    .then((res)=>{\n       localStorage.setItem('orders', JSON.stringify(res.data));\n       \n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n    setState({\n     data: JSON.parse(localStorage.getItem('orders'))\n   })\n    \n  }\n\n  const getEditId = (id)=>{\n\n    setState({\n      editId: id,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getItemEditId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: item,\n      processId: state.processId,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getProcessId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: item,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getOrderEditId = (id)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: id,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*お客様買うボタンより*/\n  const customerItem = (item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*ストック数およびお買い物リストの更新*/\n  const changeItem =(item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*個別の注文状況の表示用アイテム*/\n  const shoppingData = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: data,\n      cartItem: state.cartItem\n    })\n  }\n  /*買い物カゴ送信処理*/\n\n  const cartItem = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: data\n    })\n  }\n  \n  return(\n    <BrowserRouter>\n    <div className='fixed-top'> \n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark fixed-top\">\n      <a className=\"navbar-brand text-white\" href=\"#\"><FontAwesomeIcon icon={faUtensils} />&nbsp;\n            加工依頼アプリ</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n        \n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {props.userData.length >0?\n            props.userData[0].admin === true? \n             /*従業員サイド */\n            <>\n              <li class=\"nav-item pt-3 pb-3 active\">\n                <span className=\"font-weight-bold text-warning\"><FontAwesomeIcon icon={faUser} />{props.userData[0].name}さん</span>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/customor\" className=\"text-light p-3\">お買い物</Link>\n             </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/\" className=\"text-light p-3\">お客様一覧</Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/items\" className=\"text-light p-3\">商品一覧</Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/orders\" className=\"text-light p-3\">店頭商品一覧</Link>\n             </li>\n             <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/shoppings\" className=\"text-light p-3\">本日注文状況</Link>\n             </li>\n             <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/sales\" className=\"text-light p-3\">売上速報</Link>\n             </li>\n             {/*明日のオーダーがあれば表示*/ }\n\n             { todayOrderExisting(JSON.parse(localStorage.getItem('shoppings'))).length >0? \n               <li className=\"nav-item pt-3 pb-3\">\n                 <Link to=\"/reservation\" className=\"text-light p-3\">明日の予約状況</Link>\n               </li> \n              : \n              ''\n              }\n          \n            </>\n            /*お客様サイド */\n              : \n              <>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/customor\" className=\"text-light p-3\">お買い物</Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users/show\" className=\"text-light p-3\">お客様ページ</Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users_order\" className=\"text-light p-3\">注文確認</Link>\n                </li>\n              </>\n            : \n            <></>\n          }\n        </ul>\n\n        <ul className=\"navbar-nav\">\n        {props.userData.length >0? \n           <li className=\"nav-item pt-3 pb-3\">\n             <button \n              className=\"logout\"\n              onClick={userlogout}\n              data-testid=\"logintrue\"\n            >ログアウト</button>\n           </li>\n          : \n          <li className=\"nav-item pt-3 pb-3\"><Link to=\"/login\" className=\"text-light p-3\" data-testid=\"loginfalse\">ログイン</Link></li>\n          }\n        </ul>\n      </div>\n      \n    </nav>\n     \n      </div><br/><br/>\n      <Route exact path=\"/\" render={()=>\n        <Index \n          editIdget={(id)=>getEditId(id)} \n        />} /> \n      <Route path=\"/login\" render={()=><Login />} />\n      <Route path=\"/users/new\" component={userNew} />\n      <Route path=\"/users/edit\" render={ () => <Edit id={state.editId} />} />\n      <Route path=\"/users/show\" component={UserShow} />\n      <Route path=\"/users_empshow\"  render={()=><EmpShow />} />\n      <Route path=\"/users_phone_empshow\"  render={()=><PhoneEmpShow />} />\n\n      <Route path=\"/users_order\" component={UserOrder} />\n      <Route path=\"/items\"  render={()=><ItemIndex \n        itemEditIdget={(item)=>getItemEditId(item)} \n        processIdget={(item)=>getProcessId(item)}\n        />} />\n      <Route path=\"/items_new\" component={ItemNew} />\n      <Route path=\"/items_process\" render={ () => <Process item={state.processId} />}  />\n      <Route path=\"/items_edit\" render={ () => <ItemEdit item={state.itemEditId} />}  />\n      <Route path=\"/orders\" render={()=><OrderIndex orderEditIdget={(id)=>getOrderEditId(id)} />} />\n      <Route path=\"/orders_new\" component={OrderNew} />\n      <Route path=\"/orders_edit\" render={ () => <OrderEdit id={state.OrderEditId} />} />\n      <Route path=\"/customor\"  \n        render={()=>\n        <CustomorIndex \n          sendCustomerData={(item)=>customerItem(item)} \n          sendCartItemToConfirm={(item)=>cartItem(item)}\n          fixItemData={state.customerItem}\n        />} />\n      <Route path=\"/customor_show\" \n        render={()=>\n          <CustomorShow \n            itemData={state.customerItem}\n            changeItemData={(item)=>changeItem(item)}\n      />} />\n      <Route path=\"/phone_customor_show\" \n        render={()=>\n          <CustomorPhoneShow \n            itemData={state.customerItem}\n            changeItemData={(item)=>changeItem(item)}\n      />} />\n     <Route path=\"/customer_confirm\"\n      render={()=>\n        <Confirm\n          orderData={state.cartItem}\n      />} />\n\n     <Route path=\"/phone_customer_confirm\"\n        render={()=>\n          <PhoneConfirm\n              orderData={state.cartItem}\n          />} />\n        \n     <Route path=\"/shoppings\" \n      render={()=>\n        <ShoppingIndex \n          sendShoppingData={(data)=>shoppingData(data)}\n        />} />\n     <Route path=\"/shoppings_show\" \n      render={()=>\n        <ShoppingShow \n          show={state.shoppingShow}\n        />} />\n       <Route path=\"/reservation\" \n        render={()=>\n          <Reservation\n            \n          />} />\n      <Route path=\"/sales\" component={SalesIndex} />\n     \n    </BrowserRouter>\n  )\n}\nexport default connect((state)=>state)(App)\n\n\n\n/*\ncomponentDidMount() {\n    const fetchInit = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" }\n    };\n\n    fetch(new URL(process.env.REACT_APP_SERVER_URL), fetchInit)\n      .then(response => response.json())\n      .then(response => this.setState(response));\n  }\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport datastore from './store/Store';\nimport { Beforeunload } from 'react-beforeunload';\n\n\nReactDOM.render(\n  <Provider store={datastore}>\n    <Beforeunload onBeforeunload={() => \"data\"}>\n     <App />\n    </Beforeunload>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}