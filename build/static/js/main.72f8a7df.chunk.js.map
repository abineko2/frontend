{"version":3,"sources":["store/Store.js","users/setting.js","users/Index.jsx","Login.jsx","users/New.jsx","users/Edit.jsx","users/MyPagination.jsx","users/History.jsx","users/Show.jsx","users/EmpShow.jsx","setting.js","users/Reservation.jsx","users/Order.jsx","items/Index.jsx","items/New.jsx","items/Edit.jsx","items/Process.jsx","items/setItemData.js","orders/Index.jsx","orders/New.jsx","orders/setItem.js","orders/Edit.jsx","images/fishs2.jpg","customer/PCIndex.jsx","customer/phoneStyle.js","customer/PhoneIndex.jsx","customer/Index.jsx","customer/setting.js","customer/Show.jsx","customer/NoData.jsx","customer/confirm.jsx","customer/PhoneConfirm.jsx","shopping/settiing.js","shopping/Index.jsx","shopping/Show.jsx","shopping/Reservation.jsx","App.js","reportWebVitals.js","index.js"],"names":["init_data","userData","orderItem","buyCarts","historyData","pageData","loginReducer","state","action","newData","slice","splice","push","user","logoutReducer","ordersReducer","data","ordersStockChangeReducer","datas","map","name","stock","Number","num","cartReducer","cartResetReducer","cartUpdateReducer","items","forEach","item","cartDeleteReducer","userHistoryReducer","history","searchReducer","sendLoginData","type","ordersSend","ordersStockChange","cartDeleteCart","index","cartUpdate","historyDataSend","searchSend","createStore","ordercheck","count","date","status","shopping_date","orderHistoryStatus","className","daySetting","newDate","Date","getFullYear","getMonth","getDate","todayParams","today","year","month","day","customerTodayOrders","allData","todayOrder","createDate","c_year","c_month","c_day","customerTomorrowOrders","tomorrowOrder","setDate","customerOrders","Orders","customers","users","customerUsers","admin","totalMoneyCalc","orders","total","order","price","statusView","userLink","border","background","color","outline","fontWeight","textDecoration","withRouter","connect","props","useState","localStorage","getItem","JSON","parse","setState","a","axios","get","then","res","setItem","stringify","catch","error","console","log","userCall","length","data-testid","Row","Col","md","span","offset","Table","striped","bordered","hover","value","style","onClick","i","id","dispatch","email","Button","variant","editIdget","window","confirm","delete","response","alert","message","deleteUser","password","inputText","e","target","Form","onSubmit","preventDefault","post","confirmation","data2","user_id","err","Group","Label","Control","placeholder","onChange","required","display","show","setShow","userInput","class","getuserData","patch","first","last","Math","floor","active","Pagination","Item","seachDatarequest","process","loginUserCheck","create","rowSpan","colSpan","timeSetting","baseData","hour","getHours","min","getMinutes","toDoubleDigits","ulArea","marginTop","image","width","height","Image","src","alt","roundedCircle","receiving_time","itemLink","imageShow","localData","modalData","itemData","removeItem","itemsCall","openModal","category","itemEditIdget","editPage","processIdget","processItem","deleteItem","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","rounded","processes","info","file","setImage","itemInput","params","FormData","append","headers","File","label","multiple","accept","files","as","cols","rows","useEffect","setProcess","options","selectedOption","setSelectedOption","obj","isMulti","defaultValue","processing_name","deleteProcess","orderCall","orderEditIdget","deleteOrder","formSelectItems","dochange","sendData","defaultvalue","getitemData","rightAreaTable","overflow","nameTitle","padding","maxWidth","margin","buycheck","fontSize","textAlign","borderLeft","buttonHeight","fixItemData","sendCustomerData","buyItem","icon","faCartPlus","itemTotalMoney","sendCartItemToConfirm","faCashRegister","HeaderImagePhone","ArticlePhone","marginBottom","UlPhone","listStyle","LlPhone","phoneBuyCartMain","margimBottom","minDeviceWidth","maxDeviceWidth","selectItemCheck","localstorageChange","table","number","time","propData","check","sameItemCount","sameItemCheck","minusNumber","changeItemData","array","stockOption","split","NoData","title","fontFamily","marginRight","th","orderData","cartNum","setNumber","timesChange","carts","faShoppingCart","faFish","faYenSign","faCalculator","faUtensils","size","custom","currentNumber","changeNumber","calcNumber","cartItemName","stateData","dataNumber","propOrders","buycart","thiscartData","delAction","numArray","doSelect","selectNumber","n","action2","viewDataBranch","todayOdrersChecker","shoppings","shopping","todayOrderExisting","todayObjects","t_date","t_year","t_month","t_day","customButton","borderBottom","shopingData","shoppingsCall","orderStatus","onMouseOver","document","getElementById","hoverButton","onMouseOut","outButton","sendShoppingData","showShoppingStatus","user_name","font","sendStatusNumber","statusLayout","faTruck","faClipboard","editId","deleteId","itemEditId","processId","OrderEditId","customerItem","shoppingShow","cartItem","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","faUser","to","cartAction","exact","path","render","getEditId","component","userNew","UserShow","UserOrder","OrderEdit","getItemEditId","getProcessId","ItemNew","getOrderEditId","OrderNew","changeItem","shoppingData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","datastore","onBeforeunload"],"mappings":"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","file":"static/js/main.72f8a7df.chunk.js","sourcesContent":["import { createStore } from \"redux\";\n\nlet init_data ={\n  userData: [],\n  orderItem: null,\n  buyCarts: [],\n  historyData: null,\n  pageData: null\n}\n\nconst storeReducer = (state = init_data, action)=>{\n  switch (action.type) {\n    case 'LOGIN':\n      return loginReducer(state, action);\n    case 'LOGOUT':\n      return logoutReducer(state, action);\n    case 'ORDER':\n      return ordersReducer(state, action);\n    case 'ORDERSTOCK':\n      return ordersStockChangeReducer(state, action);\n    case 'CARTADD':\n      return cartReducer(state, action);\n    case 'CARTRESET':\n      return cartResetReducer(state, action);\n    case 'CARTDELETE':\n      return cartDeleteReducer(state, action);\n    case 'CARTUPDATE':\n      return cartUpdateReducer(state, action);\n    case 'USERHISTORY':\n      return userHistoryReducer(state, action);  \n    case 'SEARCHDATA':\n      return searchReducer(state, action);  \n    default:\n      return state\n  }\n}\n/**************[-----redux処理---------]*********************************************************************** */\nconst loginReducer = (state, action)=>{\n  let newData = state.userData.slice();\n  newData.splice(0);\n  newData.push(action.user);\n \n  return{\n    userData: newData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData\n  }\n}\nconst logoutReducer =(state, action)=>{\n    let newData = state.userData.slice();\n    newData.splice(0);\n    return{\n      userData: newData,\n      buyCarts: state.buyCarts,historyData: state.historyData\n    }\n  }\nconst ordersReducer = (state, action)=>{\n  let data = state.orderItem;\n  data = action.data;\n \n  return{\n    userData: state.userData,\n    orderItem: data,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData\n  }\n}\n/*買い物確認削除ボタン*/\nconst ordersStockChangeReducer = (state, action) =>{\n  let datas = state.orderItem.slice();\n  datas.map((data)=>{\n    if(data.name === action.name){\n      let stock = Number(data.stock);\n      stock += Number(action.num); /*在庫元に戻す*/\n      data.stock = stock;\n    }\n  });\n  return{\n    userData: state.userData,\n    orderItem: datas,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: state.pageData\n  }\n}\nconst cartReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.push(action.data);\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData\n  }\n}\nconst cartResetReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData\n  }\n}\nconst cartUpdateReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  action.items.forEach((item) => {\n    data.push(item);\n  });\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: data,\n    historyData: state.historyData,\n    pageData: state.pageData\n  }\n}\nconst cartDeleteReducer = (state, action)=>{\n  let datas = state.buyCarts.slice();\n  datas.splice(action.num, 1);\n  \n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: datas,\n    historyData: state.historyData,\n    pageData: state.pageData\n  }\n}\n\nconst userHistoryReducer = (state, action)=>{\n  let history = action.data;\n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: history,\n    pageData: state.pageData\n  }\n}\n/*ページネーション検索*/\nconst searchReducer = (state, action)=>{\n  let data = action.data;\n  \n  return{\n    userData: state.userData,\n    orderItem: state.orderItem,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData,\n    pageData: data\n  }\n}\n/**************[-----コンポーネント送受メソッド処理---------]*********************************************************************** */\nexport  const sendLoginData = (user)=>{\n  return{\n    type:'LOGIN',\n    user: user\n  };\n}\nexport const logoutAction =()=>{\n  return{\n    type: 'LOGOUT'\n  }\n}\nexport const cartsAdd = (item)=>{\n  return{\n    type: 'CARTADD',\n    data: item\n  }\n}\nexport const ordersSend = (data)=>{\n  return{\n    type: 'ORDER',\n    data: data\n  }\n}\nexport const ordersStockChange = (name, num)=>{\n  return{\n    type: 'ORDERSTOCK',\n    name: name,\n    num: num\n  }\n}\nexport const cartEmpty = ()=>{\n  return{\n    type: 'CARTRESET'\n  }\n}\nexport const cartDeleteCart = (index)=>{\n  return{\n    type: 'CARTDELETE',\n    num: index\n  }\n}\nexport const cartUpdate = (items)=>{\n  return{\n    type: 'CARTUPDATE',\n    items: items\n  }\n}\nexport const historyDataSend = (data)=>{\n  return{\n    type: 'USERHISTORY',\n    data: data\n  }\n}\nexport const searchSend = (data)=>{\n  return{\n    type: 'SEARCHDATA',\n    data: data\n  }\n}\nexport default createStore(storeReducer)","import React from 'react';\n\n/*注文された商品中受け渡し済み以外申請中と加工済みの件数検知*/\n\nexport const ordercheck = (datas) =>{\n   let count = 0;\n   let date = null;\n  if(datas){\n    datas.forEach(data => {\n        if(data.status === 0 || data.status === 1){\n            count += 1;\n            date = data.shopping_date;\n        }\n    });\n    return {\n        count:  count + '件注文',\n        date: date\n    }\n  }\n  else{\n    return '履歴なし';\n  }\n}\n/* 注文された商品の履歴状況分岐  */\n\nexport const orderHistoryStatus = (status) =>{\n  switch (status) {\n    case 0:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 1:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 2:\n      return <div className=\"font-weight-bold\">完了済み</div>\n    default:\n      break;\n  }\n}\n/****************************************************************************************************** */\n/*日付の表示設定*/\nexport const daySetting = (date)=>{\n  let newDate = new Date(date);\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let day = newDate.getDate();\n  return year + '年' + month + '月' +day +'日';\n}\n/***************************************************************************************************** */\n/*共通パラメーター*/\nconst todayParams =()=>{\n  /*本日*/\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n  return{\n    year: year,\n    month: month,\n    day: day\n  }\n}\n\n/*当日日付のみのデータ抽出 */\n\nexport const customerTodayOrders = (allData)=>{\n  let todayOrder = [];\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( todayParams().year === c_year && todayParams().month === c_month && todayParams().day === c_day){\n        todayOrder.push(data);\n      }\n    })\n  }\n  return todayOrder;\n}\n\n/*明日日付のみのデータ抽出 */\n\nexport const customerTomorrowOrders = (allData)=>{\n  let tomorrowOrder = [];\n  const today = new Date();\n  today.setDate(today.getDate() + 1);\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( year === c_year && month === c_month && day === c_day){\n        tomorrowOrder.push(data);\n      }\n    })\n  }\n  return tomorrowOrder;\n}\n\n\n\n\n\n  /*当日以外の日付のみのデータ抽出 */\n\nexport const customerOrders = (allData)=>{\n  let Orders = [];\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if(todayParams().year >= c_year && todayParams().month >= c_month && todayParams().day > c_day){\n        Orders.push(data);\n      }\n    })\n  }\n  return Orders;\n}\n/*お客様一覧でユーザーのうち従業員を省いた一覧*/\n\nexport const customers =(users)=>{\n  let customerUsers = [];\n  users.forEach((user)=>{\n    if(!(user.admin === true)){\n      customerUsers.push(user);\n    }\n  });\n  return customerUsers;\n}\n/*お客様注文確認ページにて合計金額計算 */\n\nexport const totalMoneyCalc =(orders)=>{\n  let total = 0;\n  orders.map((order)=>{\n    total += order.price * order.num;\n  })\n  return total;\n}\n\nexport const statusView = (status)=>{\n  switch (status) {\n    case 0:\n      return <div className=\"bg-info\">申請中</div>;\n    case 1:\n      return <div className=\"bg-warning\">加工済みです</div>;\n    case 2:\n      return <div className=\"bg-danger\">受け渡し済み</div>;\n    default:\n      break;\n  }\n}\n","import {  useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport {historyDataSend} from '../store/Store';\nimport { customers } from './setting';\n\n\nconst userLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   async function userCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/users')\n       .then((res)=>{\n          localStorage.setItem('users', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('users'))\n      })\n  }\n    useState(userCall());\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editIdget(id);\n     props.history.push(\"/users/edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteUser(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/users/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   const userShowaccess = (id)=>{\n    axios\n    .get(`https://uematsu-backend.herokuapp.com/history/show/${id}`)\n    .then((res)=>{\n       const action = historyDataSend(res.data);\n       props.dispatch(action);\n\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n     props.history.push('/users_empshow');\n   }\n \n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">会員一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">名前</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">メールアドレス</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {customers(state.data).map((value)=>(\n                  <tr key={value.name}>\n                     <td className=\"text-center align-middle\">\n                       <button \n                         style={userLink} \n                         onClick={(i)=>userShowaccess(value.id)}\n                       >{value.name}</button>\n                    </td>\n                    <td  className=\"text-center align-middle\">\n                      {value.email}\n                    </td>\n                    <td>\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteUser(value.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button,Modal } from 'react-bootstrap';\nimport './App.css'\nimport { withRouter } from 'react-router'\nimport axios from 'axios'\nimport { connect} from 'react-redux';\nimport { sendLoginData, searchSend } from './store/Store';\n\nconst  Login = (props)=>{\n\n  const[state, setState] = useState({\n    email: '',\n    password: ''\n  })\n\n  const newUserComponent = ()=>{\n    props.history.push('/users/new');  \n  }\n  const accesslogin = (e)=>{\n    e.preventDefault();\n    let data = {\n      email: state.email,\n      password: state.password,\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/sessions', data)\n      .then(function (response) {\n\n        if(response.data.name){\n            let action = sendLoginData(response.data);\n            props.dispatch(action);\n            /*railsからメッセージ*/\n            alert('ログインしました'); \n            setState({\n              name: '',\n              email: '',\n              password: '',\n              confirmation: ''\n            })\n            let data2 = {\n              user_id: response.data.id,\n              num: 1\n            }\n            \n            axios.post('https://uematsu-backend.herokuapp.com/history/search', data2)\n            .then(function (response) {\n              let action = searchSend(response.data);\n              props.dispatch(action);\n            })\n            .catch(function(){\n              alert('error');\n            })\n            response.data.admin == true? props.history.push('/') :  props.history.push('/users/show');\n          }\n          else{\n            alert('ログイン失敗');\n          }\n      })\n      .catch(function(err){\n        alert(err);\n      })\n      \n  }\n  const inputText = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]:value});\n  }\n  return(\n   <>\n    <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-secondary\" data-testid=\"logintitle\">ログイン</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n          <Form onSubmit={accesslogin} data-testid=\"loginForm\">\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control \n                type=\"email\" \n                name=\"email\"\n                placeholder=\"(例)sample@example.com\" \n                className=\"h8\" \n                onChange={inputText}\n                required\n                value={state.email}\n                data-testid=\"ml\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label>\n              <Form.Control\n                 type=\"password\" \n                 name=\"password\"\n                 placeholder=\"(例)password\" \n                 onChange={inputText}\n                 required\n                 value={state.password}\n                 data-testid=\"ps\"\n              />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              <Button \n                variant=\"primary\" \n                onClick={newUserComponent}\n                className=\"btn-block mt-3\">\n                新規登録\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Login))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmation: ''\n  })\n  \n\n  const loginComponent = ()=>{\n    props.history.push('/login')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.post('https://uematsu-backend.herokuapp.com/users', data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規会員登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={loginComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(New)","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  Edit = (props)=>{\n\n const getuserData = ()=>{\n  let user = []\n  let datas = JSON.parse(localStorage.getItem('users'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     user.push(data);\n    }\n  });\n  return user\n }\n  let user = getuserData();\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: user.length>0? user[0].name : '',\n    email: user.length>0?  user[0].email : '',\n    password: '',\n    confirmation: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n\n  const homeComponent = ()=>{\n    props.history.push('/')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.patch(`https://uematsu-backend.herokuapp.com/users/${props.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2>{state.name}情報編集</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={homeComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Edit));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Pagination } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { searchSend } from '../store/Store';\n\nconst  MyPagination = (props)=>{\n  let items = [];\n  const[state, setState] = useState({\n    first: 1,\n    last: ((props.userData[0].orders[0]) && props.userData[0].orders[0].length>=5)? \n    Math.floor(props.userData[0].orders[0].length/5 >10)?  10 : Math.floor(props.userData[0].orders[0].length/5)   : 1,\n    active: 1\n  });\n  for(let i=state.first; i<=state.last; i++){\n    items.push(\n      <Pagination.Item key={i} active={i == state.active} onClick={()=>seachDatarequest(i)}>{i}</Pagination.Item>\n    )\n  }\n  const seachDatarequest = (i)=>{\n    let data = {\n      user_id: props.userData[0].id,\n      num: i\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/history/search', data)\n    .then(function (response) {\n      let action = searchSend(response.data);\n      props.dispatch(action);\n    })\n    .catch(function(){\n      alert('error');\n    })\n    setState({\n      first: state.first,\n      last: state.last,\n      active: i\n    })\n  }  \n  \n  return(\n   <>\n    <Pagination >{items}</Pagination>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(MyPagination))","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { orderHistoryStatus } from \"./setting\";\nimport MyPagination from './MyPagination';\n\nconst  History = (props)=>{\n\n  return(\n   <div>\n     <MyPagination />\n    {props.pageData? \n      <>\n       <Table bordered className=\"mt-3\">\n         <thead>\n           <tr>\n             <th className=\"bg-primary text-white text-center\">注文日</th>\n             <th className=\"bg-primary text-white text-center\">注文商品</th>\n             <th className=\"bg-primary text-white text-center\">加工法</th>\n             <th className=\"bg-primary text-white text-center\">価格</th>\n             <th className=\"bg-primary text-white text-center\">注文数</th>\n             <th className=\"bg-primary text-white text-center\">状況</th>\n           </tr>\n         </thead>\n         <tbody>\n           {props.pageData.map((data)=>(\n             <tr>\n               <td className=\"font-weight-bold text-center\">{data.shopping_date}</td>\n               <td className=\"font-weight-bold text-center\">{data.name}</td>\n               <td className=\"font-weight-bold text-center\">{data.process}</td>\n               <td className=\"font-weight-bold text-center\">{data.price}</td>\n               <td className=\"font-weight-bold text-center\">{data.num}</td>\n               <td className=\"font-weight-bold text-center\">{orderHistoryStatus(data.status)}</td>\n             </tr>\n           ))}\n         </tbody>\n       </Table>\n      </>\n      : \n      <div className=\"p-5 bg-secondary mt-3 text-white font-weight-bold\">履歴がありません。</div>\n    }\n   </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(History))","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { historyDataSend, ordersSend } from '../store/Store';\nimport { ordercheck, daySetting } from './setting';\nimport History from './History';\nimport MyPagination from './MyPagination';\n\n\n/**************************************************************************************** */\nconst  Show = (props)=>{\n const sendShoppindData = ()=>{\n  axios\n  .get('https://uematsu-backend.herokuapp.com/orders')\n  .then((res)=>{\n     let action = ordersSend(res.data);\n     props.dispatch(action);\n     \n  })\n  .catch((error)=>{\n     console.log(error);\n  })\n }\n useState(sendShoppindData);\n   \n  /*************APIによるuser一覧**********************************/\n   async function orderCall(){\n     \n    await axios\n      .get(`https://uematsu-backend.herokuapp.com/history/show/${props.userData[0].id}`)\n      .then((res)=>{\n         const action = historyDataSend(res.data);\n         props.dispatch(action);\n\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n }\n \n\n\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck)\n  return(\n   <>\n      {props.userData.length >0?\n       <>\n        <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n          <h2 className=\"text-white font-weight-bold\">{props.userData[0].name}さんページ</h2>\n        </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <Row>\n            <Col md={{span :7}}>\n              <p className=\"font-weight-bold\">会員情報</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">名前</th>\n                   <td>{props.userData[0].name}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">メールアドレス</th>\n                   <td>{props.userData[0].email}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用開始日</th>\n                   <td>{daySetting(props.userData[0].create)}</td>\n                 </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col md={{span :5}}>\n            <p className=\"font-weight-bold\">ご利用状況</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用回数</th>\n                   <td className=\"text-center\">{props.userData[0].orders[0]? props.userData[0].orders[0].length : 0 }</td>\n                 </tr>\n               \n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">現在注文有無</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).count? ordercheck(props.userData[0].orders[0]).count : '未使用'}</td>\n                 </tr>\n\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">注文日</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).date? ordercheck(props.userData[0].orders[0]).date : '未使用'}</td>\n                 </tr>\n               \n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>    \n      </Row>\n      </>\n        : \n        loginUserCheck()\n      }\n      {/* 履歴エリア */}\n\n      <div className=\"text-center mt-3 font-weight-bold\">\n          <h2 className=\"text-light font-weight-bold\">商品依頼履歴</h2>\n      </div>\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 mt-2 pb-4 bg-light shadow\">\n          {/* ログアウト中は無効 */}\n          \n          {props.userData.length >0? <History /> : ''}\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { daySetting, customerTodayOrders,customerOrders } from './setting';\n\n\n\n/**************************************************************************************** */\nconst  EmpShow = (props)=>{\n   \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\" className=\"text-light font-weight-bold\">{props.historyData? props.historyData.name : ''}&nbsp;注文履歴</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【現在注文中の表品一覧】</p>\n         {(props.historyData && customerTodayOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerTodayOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n      {/* 当日以外の履歴 */}\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【過去の注文一覧】</p>\n         {(props.historyData && customerOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(EmpShow))\n","\nexport const timeSetting = (baseData)=>{\n   let date = new Date(baseData);\n   let hour = date.getHours();\n   let min = date.getMinutes();\n   return hour + \":\" + toDoubleDigits(min);\n}\nconst toDoubleDigits = function(num) {\n   num += \"\";\n   if (num.length === 1) {\n     num = \"0\" + num;\n   }\n  return num;     \n} ","import React, { useState } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport {customerTomorrowOrders , totalMoneyCalc } from './setting';\nimport { timeSetting } from '../setting';\n\nconst ulArea ={\n  marginTop: '-4%'\n}\nconst image={\n  width: '100px',\n  height: '100px'\n}\n\n/*****************************お客様用注文一覧ページ*********************************************************** */\nconst  Reservation = (props)=>{\n  return(\n    <>  \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <div className=\"text-center\">【明日予約商品】</div>\n          {((props.userData.length>0) && ( customerTomorrowOrders (props.userData[0].orders[0]).length >0))? \n           <h3 className=\"mt-2\">【注文合計金額: \n           <span className=\"text-danger font-weight-bold\">\n             {totalMoneyCalc(customerTomorrowOrders(props.userData[0].orders[0]))}\n           </span>円】</h3>\n          : \n          ''\n          }\n         \n          <ul class=\"list-group\" style={ulArea}>\n          {((props.userData.length>0) && ( customerTomorrowOrders (props.userData[0].orders[0]).length >0))? customerTomorrowOrders(props.userData[0].orders[0]).map((data)=>(\n            <li className=\"list-group-item mt-5\">\n              <Row>\n                <Col md=\"12\">\n                  <ul className=\"list-inline\">\n                    <li className=\"list-inline-item h4 ml-5\">\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${data.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </li>\n                    <li className=\"list-inline-item h5 mr-5\">商品名:{data.name}</li>\n                    <li className=\"list-inline-item h5 mr-3\">価格:<span className=\"text-danger\">{data.price}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">注文数:{data.num}</li>\n                    <li className=\"list-inline-item h5 mr-3\">合計:<span className=\"text-danger\">{data.price *data.num}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">依頼加工:{data.process}</li>\n                    <li className=\"list-inline-item h5 mr-3\">受け取り時間:{timeSetting(data.receiving_time)}</li>\n                  </ul>\n                \n                </Col>\n              </Row>\n            </li>\n          )) :   <div className=\"p-5 text-white text-center mt-5 bg-secondary font-weight-bold\">データがありません</div>}\n          </ul>\n        </Col>\n      </Row>\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(Reservation));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\nimport { customerTodayOrders, totalMoneyCalc, statusView } from './setting';\nimport Reservation from './Reservation';\nimport { timeSetting } from '../setting';\n\nconst ulArea ={\n  marginTop: '-4%'\n}\nconst image={\n  width: '100px',\n  height: '100px'\n}\n\n/*****************************お客様用注文一覧ページ*********************************************************** */\nconst  Order = (props)=>{\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  \n  return(\n    <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"font-weight-bold text-light\">現在注文商品</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <div className=\"text-center\">【本日受取商品】</div>\n          {((props.userData.length>0) && (customerTodayOrders(props.userData[0].orders[0]).length >0))?\n           <h3 className=\"mt-2\">【注文合計金額: \n           <span className=\"text-danger font-weight-bold\">\n             {totalMoneyCalc(customerTodayOrders(props.userData[0].orders[0]))}\n           </span>円】</h3>\n           : \n           ''}\n          \n          <ul class=\"list-group\" style={ulArea}>\n          {((props.userData.length>0) && (customerTodayOrders(props.userData[0].orders[0]).length >0))? customerTodayOrders(props.userData[0].orders[0]).map((data)=>(\n            <li className=\"list-group-item mt-5\">\n              <Row>\n                <Col md=\"12\">\n                  <ul className=\"list-inline\">\n                    <li className=\"list-inline-item h4 ml-5\">\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${data.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </li>\n                    <li className=\"list-inline-item h5 mr-5\">商品名:{data.name}</li>\n                    <li className=\"list-inline-item h5 mr-3\">価格:<span className=\"text-danger\">{data.price}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">注文数:{data.num}</li>\n                    <li className=\"list-inline-item h5 mr-3\">合計:<span className=\"text-danger\">{data.price *data.num}</span>円</li>\n                    <li className=\"list-inline-item h5 mr-3\">依頼加工:{data.process}</li>\n                    <li className=\"list-inline-item h5 mr-3\">受け取り時間:{timeSetting(data.receiving_time)}</li>\n                    <li className=\"list-inline-item text-white pt-2 pb-2 mr-3\">{ statusView(data.status) }</li>\n                  </ul>\n                \n                </Col>\n              </Row>\n            </li>\n          )) :   <div className=\"p-5 text-white text-center mt-5 bg-secondary font-weight-bold\">データがありません</div>}\n          </ul>\n        </Col>\n      </Row>\n      <br/>\n      <Reservation />\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(Order));\n/***************************************************************************************************** */","import { useEffect, useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutAction } from '../store/Store';\n\n\nconst itemLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst image={\n  width: '80px',\n  height: '80px'\n}\nconst imageShow={\n  width: '150px',\n  height: '150px'\n}\n\n\n function Index(props){\n  let localData = JSON.parse(localStorage.getItem('items'))\n  let modalData = [];\n\n\n  /************************ステート*************************************** */\n  const[itemData, setState] = useState(\n    localData ? localData : []\n  )\n  /*--モーダル--*/\n  const [show, setShow] = useState({\n    status: false,\n    data: []\n  });\n\n  const handleClose = () => setShow({status: false, data: show.data});\n  \n  /*************APIによるitem一覧**********************************/\n  async function itemsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n         localStorage.removeItem('items');\n         setState(res.data);\n         localStorage.setItem('items', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(itemsCall());\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0 && props.itemData === null){\n        props.history.push('/login');  \n      }\n    }\n\n  useState(loginUserCheck());\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.itemEditIdget(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************削除********************************************* */\n  const deleteItem = (i)=>{\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/items/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n  }\n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processIdget(item);\n    props.history.push('/items_process');\n  }\n  /*****************************モーダル開く********************************************** */\n  const openModal = (item)=>{\n    modalData.splice(0);\n    modalData.push(item);\n  \n    setShow({\n      status: true,\n      data: modalData\n    })\n  }\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\">商品一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Button \n            variant=\"primary\"\n            onClick={newPage}\n          >新規商品登録</Button>\n         \n          {itemData.length > 0 ?\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">画像</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">カテゴリー</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {itemData.map((item,i)=>(\n                  <tr>\n                    <td>\n                      <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </td>\n                    <td className=\"align-middle\">\n                      <button \n                         style={itemLink} \n                         onClick={(i)=>openModal(item)}\n                       >{item.name}</button>\n                    </td>\n                    <td className=\"text-right text-danger align-middle font-weight-bold\">{item.price}</td>\n                    <td className=\"align-middle\">{item.category}</td>\n                    <td className=\"align-middle\">\n                    <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(item)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                     <Button \n                        variant=\"primary\"\n                        onClick={(i)=>processItem(item)}\n                        className=\"ml-3\"\n                      >加工法管理</Button>\n                    \n                    <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteItem(item.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n               \n            </Table>\n            :\n            <div className=\"text-center bg-info text-white font-weight-bold p-5 mt-3\">\n              データを表示できません。\n            </div>\n            }\n        </Col>\n      </Row>\n      <Modal\n         show={show.status}\n         onHide={handleClose}\n         backdrop=\"static\"\n         keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"font-weight-bold\">\n             {show.data.length ===0? '' : `${show.data[0].name}詳細`}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table bordered>\n           <tbody>  \n             <tr>\n               <td colSpan=\"2\" className=\"text-center\">\n                <Image \n                  src={show.data.length ===0? '' : `http://yukiabineko.sakura.ne.jp/react/${show.data[0].name}.jpg`} \n                  alt=\"表示できません\" \n                  style={imageShow} \n                  rounded \n                />\n               </td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">商品名</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].name}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">価格</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].price}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">カテゴリー</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].category}</td>\n             </tr>\n             {show.data.length ===0? \n               '' \n                : \n               <tr>\n                 <th className=\"bg-primary text-white align-middle\">可能調理法</th>\n                 <td>\n                   {show.data[0].processes.map((process)=>(\n                     <td>{process}</td>\n                   ))}\n                 </td>\n               </tr>\n             }\n             <tr>\n               <th colSpan=\"2\" className=\"text-center bg-primary text-white\">商品説明</th>\n             </tr>\n             <tr>\n               <td colSpan=\"2\">{show.data.length ===0? '' : show.data[0].info}</td>\n             </tr>\n           </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[image, setImage] = useState({\n    file: null\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    price: '',\n    category: '',\n    info: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const indexComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const itemInput = (e)=>{\n   const target = e.target;\n   const name = target.name;\n   const value = target.value;\n   setState({...state, [name]: value})\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n      /* PHPへの送信 */\n      const params = new FormData();\n      params.append('file', image.file);\n      params.append('name', state.name);\n      axios.post('https://yukiabineko.sakura.ne.jp/send-react.php',\n      　　　　　　　params,\n                  {\n                    headers:{\n                      'content-type': 'multipart/form-data',\n                    },\n                  }\n      ).then((res)=>{\n          console.log(res.data);\n      }).catch(()=>{\n      })\n\n\n      /* rails側への送信*/\n      \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.post('https://uematsu-backend.herokuapp.com/items', data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n      setShow({display: 'none'});\n    }\n    setImage({\n      file: null\n    })\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規商品登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={indexComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendItemParameter}>\n            <Form.Group>\n              <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>カテゴリー</Form.Label>\n              <div class=\"balloon1\" style={show}>\n                <p>選択してください。</p>\n              </div>\n                <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                  <option value=\"\">選択してください  </option>\n                 {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                   <option key={i} value={value}>{value}</option>\n                 )}\n                </Form.Control>\n            </Form.Group>\n               \n            <Form.Group>\n              <Form.Label>商品説明</Form.Label>\n              <textarea \n                name=\"info\" \n                cols=\"30\" \n                rows=\"10\" \n                value={state.info}\n                onChange={itemInput}\n                className=\"form-control\">{state.info}</textarea>\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  ItemEdit = (props)=>{\n\n \n   let item = props.item;\n/*********************************state******************************************************* */\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[state, setState] = useState({\n    name: item.name,\n    price: item.price,\n    category: item.category,\n    info: item.info\n  })\n\n  const[image, setImage] = useState({\n    file: null\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\n\nuseState(loginUserCheck());\n\n\n  const homeComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const itemInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n       /* PHPへの送信 */\n       const params = new FormData();\n       params.append('file', image.file);\n       params.append('name', state.name);\n       axios.post('http://yukiabineko.sakura.ne.jp/send-react.php',\n       　　　　　　　params,\n                   {\n                     headers:{\n                       'content-type': 'multipart/form-data',\n                     },\n                   }\n       ).then((res)=>{\n           console.log(res.data);\n       }).catch(()=>{\n         alert('ERROR');\n       })\n\n       /* rails側への送信*/ \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/items/${props.item.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n        props.history.push('/items');\n      })\n      .catch(function(){\n        alert('error');\n      })\n      setShow({display: 'none'});\n    }\n    \n  }\n  return(\n    <>\n       <div className=\"text-center mt-5 mb-4\">\n         <h2 data-testid=\"userNewtitle\">{state.name}編集</h2>\n       </div>\n       <Row>\n         <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <Button \n           variant=\"secondary\" \n           onClick={homeComponent}\n           className=\"mb-3\"\n         >\n          戻る\n         </Button>\n           <Form onSubmit={sendItemParameter}>\n             <Form.Group>\n               <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n             </Form.Group>\n             <Form.Group>\n               <Form.Label>商品名</Form.Label>\n               <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>価格</Form.Label>\n               <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>カテゴリー</Form.Label>\n               <div class=\"balloon1\" style={show}>\n                 <p>選択してください。</p>\n               </div>\n                 <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                   <option value=\"\">選択してください  </option>\n                  {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                    <option key={i} value={value}>{value}</option>\n                  )}\n                 </Form.Control>\n             </Form.Group>\n                \n             <Form.Group>\n               <Form.Label>商品説明</Form.Label>\n               <textarea \n                 name=\"info\" \n                 cols=\"30\" \n                 rows=\"10\" \n                 value={state.info}\n                 onChange={itemInput}\n                 className=\"form-control\">{state.info}</textarea>\n             </Form.Group>\n \n               <Button \n                 type=\"submit\" \n                 variant=\"primary\" \n                 className=\"btn-block mt-4\">\n                   送信\n               </Button>\n           </Form>\n           \n         </Col>\n       </Row>\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(ItemEdit));\n/***************************************************************************************************** */","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Table, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { getOption } from './setItemData';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\n\nconst Process = (props)=>{\n/********************加工データ************************************************************** */\n  const getProcessData = ()=>{\n     axios\n        .get(`https://uematsu-backend.herokuapp.com/processings/${props.item.id}`)\n        .then((res)=>{\n           \n           localStorage.removeItem('process');\n           localStorage.setItem('process', JSON.stringify(res.data));\n           setProcess(res.data);\n        \n        })\n        .catch((error)=>{\n           console.log(error);\n        })\n     }\n\n/*************************ステートおよび各種セット************************************************ */\n   useEffect(()=>{\n     getProcessData();\n   })\n   let item = props.item;\n   let options = getOption();\n\n   const[process, setProcess] = useState([]);\n   const [selectedOption, setSelectedOption] = useState(null);\n/***********************加工データサーバー送信**************************************** */\n   const addProcess = (e)=>{\n     e.preventDefault();\n     let data = selectedOption;\n     let obj={};\n     obj[\"id\"] = props.item.id;\n     obj[\"data\"] = selectedOption;\n     axios.post('https://uematsu-backend.herokuapp.com/processings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n    \n   }\n   /******************************ログイン/未ログイン切り替え********************************************************** */\n   const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n  useEffect(()=>{\n    loginUserCheck();\n  })\n /****************************************削除加工法*************************************************************** */\n    const deleteProcess = (i,count)=>{\n      if(window.confirm('削除してよろしいですか？')){\n        axios\n          .delete(`https://uematsu-backend.herokuapp.com/processings/${i}`)\n          .then((response)=>{\n            alert(response.data.message); \n            let data = process.slice();\n            data.splice(count,1);\n            setProcess(data);\n          })\n          .catch((error)=>{\n            console.log(error);\n          })\n      }\n    }\n\n  return(\n   <>\n    <div className=\"text-center font-weight-bold h2 mt-5 mb-3\">{item.name}加工法管理画面</div>\n    <Row>\n      <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n      <Form onSubmit={addProcess}>\n        <Form.Group>\n          <Form.Label>加工法の登録</Form.Label>\n          <Select\n          　isMulti\n            defaultValue={selectedOption}\n            onChange={setSelectedOption}\n            options={options}\n          />\n        </Form.Group>\n        <Form.Control type=\"submit\" className=\"bg-primary text-white\"  value=\"追加\" />\n      </Form>\n      {process.length >0?\n       <>\n         <div className=\"text-center font-weight-bold mt-5\">登録加工法一覧</div>\n         <Table bordered>\n           <thead>\n             <tr>\n               <th className=\"text-white bg-dark text-center\">加工法</th>\n               <th className=\"text-white bg-dark text-center\"></th>\n             </tr>\n           </thead>\n           <tbody>\n             {process.map((data,count)=>(\n               <tr>\n                 <td className=\"text-center\">{data.processing_name}</td>\n                 <td>\n                   <Button\n                    variant=\"danger\"\n                    className=\"btn-block\"\n                    onClick={(i)=>deleteProcess(data.id, count)}\n                   >削除</Button>\n                 </td>\n               </tr>\n             ))}\n           </tbody>\n         </Table>\n       </>\n       : \n       <></>\n       }\n      </Col>\n    </Row>  \n\n\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Process))","\n export const getOption = ()=>{\n   return [\n    { value: '刺身', label: '刺身' },\n    { value: '切り身', label: '切り身' },\n    { value: '煮物用', label: '煮物用' },\n    { value: '塩焼き用', label: '塩焼き用' },\n    { value: 'フライ用', label: 'フライ用' },\n    { value: '刺身/切り身', label: '刺身/切り身' },\n   ];\n }","import { useEffect, useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ordersSend } from '../store/Store';\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   async function orderCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/orders')\n       .then((res)=>{\n          localStorage.setItem('orders', JSON.stringify(res.data));\n          let action = ordersSend(res.data);\n          props.dispatch(action);\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('orders'))\n      })\n  }\n    useState(orderCall());\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.orderEditIdget(id);\n     props.history.push(\"/orders_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteOrder(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/orders/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   /****************************商品全リセット*********************************************** */\n   function ResetOrder(){\n    if(window.confirm('リセットしてよろしいですか？')){\n      axios\n       .get('https://uematsu-backend.herokuapp.com/orders/deleteAll')\n       .then((response)=>{\n        localStorage.removeItem('orders');\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    }\n   }\n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">店頭商品一覧</h2>\n      </div>\n      <Row>\n\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Button \n            variant=\"primary\"\n            onClick={()=>props.history.push('orders_new')}\n            className=\"mr-2\"\n          >店頭商品追加</Button>\n           {/*状況によりリセットボタン*/}\n\n          {state.data.length >0? \n            <Button \n              variant=\"danger\"\n              onClick={ResetOrder}\n             >リセット</Button>\n             : \n             ''\n            }\n          {/*テーブル*/}\n\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">合計金額</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">在庫</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {state.data.map((value)=>(\n                  <tr key={value.name}>\n                    <td className=\"text-center align-middle\">{value.name}</td>\n                    <td  className=\"text-center align-middle\">{value.price}</td>\n                    <td  className=\"text-center align-middle\">{Number(value.price) * Number(value.stock)}</td>\n                    <td  className=\"text-center align-middle\">{value.stock}</td>\n                    <td>\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteOrder(value.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div className=\"bg-secondary p-5 text-center text-white font-weight-bold mt-1\">データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.browser.cjs';\nimport { formSelectItems } from './setItem';\nimport { connect } from 'react-redux';\n\nconst  New = (props)=>{\n  const[state, setState] = useState({\n    price: '',\n    stock: ''\n  });\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = formSelectItems();\n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const backIndex = ()=>{\n    props.history.push('/orders');\n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name: selectedOption.value, price: state.price, stock: state.stock};\n    axios.post('https://uematsu-backend.herokuapp.com/orders', sendData)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n      props.history.push('/orders');\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">店頭商品追加</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={backIndex}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Select\n                options={options}\n                defaultvalue={selectedOption}\n                onChange={setSelectedOption}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import axios from 'axios';\n\nexport const formSelectItems = ()=>{\n  const itemData =JSON.parse(localStorage.getItem('items'));\n  if(!itemData){\n    axios\n    .get('https://uematsu-backend.herokuapp.com/items')\n    .then((res)=>{\n       localStorage.removeItem('items');\n       localStorage.setItem('items', JSON.stringify(res.data));\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n  }\n  let options = [];\n  itemData.forEach(item=>{\n    options.push({value: item.name, label: item.name});\n  })\n  return options;\n  \n}","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  OrderEdit = (props)=>{\n\n const getitemData = ()=>{\n  let orders = []\n  let datas = JSON.parse(localStorage.getItem('orders'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     orders.push(data);\n    }\n  });\n  return orders\n }\n let orders = getitemData();\n \n\n/*********************************state******************************************************* */\n  \n  const[state, setState] = useState({\n    name: orders.length>0? orders[0].name : [],\n    price:orders.length>0? orders[0].price :[],\n    stock: orders.length>0? orders[0].stock : []\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  const homeComponent = ()=>{\n    props.history.push('/orders')  \n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name:state.name, price: state.price, stock: state.stock};\n    axios.patch(`https://uematsu-backend.herokuapp.com/orders/${props.id}`, sendData)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n      props.history.push('/orders');\n  }\n  \n  return(\n    <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">{orders.length>0? orders[0].name : ''}編集</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={homeComponent}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <div className=\"font-weight-bold\">{state.name}</div>\n              <Form.Control \n                type=\"hidden\"\n                name=\"name\"\n                value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n   )\n}\nexport default withRouter(connect(state=>state)(OrderEdit));\n/***************************************************************************************************** */","export default __webpack_public_path__ + \"static/media/fishs2.d6a1f15c.jpg\";","import { useEffect, useState } from 'react';\nimport { Image, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport { connect } from 'react-redux';\nimport image from '../images/fishs2.jpg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart } from '../store/Store';\n\n\nconst rightAreaTable={\n  height: '200px',\n  overflow: 'scroll'\n}\n\nconst nameTitle={\n  background: '#136FFF',\n  padding: '5px',\n  color:'white',\n  border:'1px solid #f0f0f0',\n  maxWidth: '100%',\n  margin: '0'\n}\nconst buycheck={\n  padding: '5px 0',\n  background: 'brown',\n  color:'white',\n  fontSize:'16px',\n  textAlign: 'center',\n  borderLeft:'6px solid #c0c0c0'\n\n}\nconst buttonHeight={\n  height:'100px'\n}\n\n function PcIndex(props){\n  let localData = null;\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id == data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n\n  /***********************ステート*************************************** */\n  const[itemData, setState] = useState(\n    props.orderItem? props.orderItem : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n/*******************************************買い物ボタン*********************************************************************** */\n  const buyItem = (item)=>{\n    props.sendCustomerData(item);\n    props.history.push('/customor_show');\n  }\n/*******************************************買い物カゴアイテム削除*********************************************************************** */\nconst deleteCartItem = (index)=>{\n  let action = cartDeleteCart(index);\n  props.dispatch(action);\n}\n/********************************************買い物カゴ合計金額*************************************************************************************** */\n const itemTotalMoney = ()=>{\n   let total = 0;\n   props.buyCarts.map((data)=>{\n     total += Number(data.price) * Number(data.num);\n   })\n   return total;\n }\n /********************************************に買い物確認情報送信*************************************************************************************** */\n const sendShoppingData =()=>{\n   props.sendCartItemToConfirm(itemData);\n   props.history.push('/customer_confirm');\n }\n  return(\n    <div>\n      <img src={image} alt=\"画像\" className=\"costomer-imag\"/>\n       <div className=\"customor-main\">\n    　　　<h1 className=\"customor-main-title\">本日入荷商品紹介</h1>\n         <article>\n           <section class=\"gallery\">\n             {itemData.length>0? <h2 className=\"customer-article-title\">商品紹介</h2> : <div className=\"bg-secondary text-center text-white p-5 font-weight-bold\">ただいま入荷商品がありません。</div>}\n             {itemData.length > 0 ? \n               <ul>\n                 {itemData.map((item)=>(\n                   <li>\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" roundedCircle /><br/>\n                       <ul>\n                         <li style={nameTitle}>{`商品名${item.name}`}</li>\n                         <li style={nameTitle}>\n                           価格&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.price}</span>円\n                         </li>\n                         <li style={nameTitle}>\n                           在庫&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.stock}</span>(尾/個)\n                         </li>\n                         <li style={nameTitle} className=\"bg-white\">\n                           {props.userData.length>0 && props.userData[0].admin? \n                             '' \n                             : \n                             Number(item.stock) > 0? \n                              <button \n                                className=\"btn btn-success btn-block\"\n                                onClick={()=>buyItem(item)}\n                              >\n                               <FontAwesomeIcon icon={faCartPlus}  />買い物する\n                              </button>\n                             : \n                             <span className=\"text-danger font-weight-bold\">売り切れ</span>\n                           }\n                         </li>\n                       </ul>\n                     \n                   </li>\n                 ))}\n               </ul>\n                :\n               ''\n              }\n            \n           </section>\n\n         </article>\n\n         {props.userData.length>0 && props.userData[0].admin? \n            <div className=\"customor-right\">\n              <h5 style={buycheck}>管理者表示</h5>\n              <div className=\"p-3 bg-lignt font-weight-bold\">管理者のため表示されません</div>\n            </div>\n            : \n            <div className=\"customor-right\">\n            <h5 style={buycheck}>買い物確認</h5>\n             <p className=\"font-weight-bold text-center\">{props.userData.length>0? props.userData[0].name : ''}さん</p>\n             <p className=\"font-weight-bold bg-light p-2\">買い物点数&emsp;<span className=\"text-danger\">{props.buyCarts.length}</span>件</p>\n             \n             {props.buyCarts.length >0 ? \n              <div style={ rightAreaTable}>\n               <Table bordered>\n                 <thead className=\"bg-primary text-white\">\n                   <th>商品名</th>\n                   <th>個数</th>\n                   \n                 </thead>\n                 <tbody>\n                   {props.buyCarts.map((data,index)=>(\n                     <tr>\n                       <td className=\"align-middle text-center\">\n                         {data.name}<br/>\n                         ({data.process})\n                      </td>\n                       <td className=\"text-center\">\n                         {data.num}<br/>\n                         {/*<button\n                          className=\"btn btn-danger\"\n                          onClick={()=>deleteCartItem(index)}\n                         >削除</button>*/}\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </Table>\n               </div>\n               : \n               ''\n             }\n           \n             <p className=\"m-0\">合計金額</p>\n             <p className=\"font-weight-bold bg-dark p-2 text-white text-right\">{itemTotalMoney()}</p>\n             {props.buyCarts.length >0? \n               <button \n                 className=\"btn btn-primary btn-block font-weight-bold\" \n                 onClick={sendShoppingData}\n                 style={buttonHeight}>\n                 <FontAwesomeIcon icon={faCashRegister} />\n                   &nbsp;買い物確認\n              </button>\n               : \n               ''\n             }\n          </div>\n          }\n         \n      </div>\n\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PcIndex))","/*******************index*********************************************** */\n/*ヘッダー画像*/\nexport const HeaderImagePhone ={\n   width: '100%'\n}\n\n/*商品ページ画像エリア全体*/\n\nexport const ArticlePhone={\n  width:'100%',\n  maxWidth: '100%',\n  background: '#fff',\n  marginBottom: \"10%\"\n}\n\n/*画像ul*/\n\nexport const UlPhone={\n  listStyle: 'none',\n  margin: '0',\n  width: '100%',\n  marginBottom: '4%'\n}\n\n/*画像ll*/\n\nexport const LlPhone={\n  width: '100%',\n  maxWidth: '100%',\n  margin: '5% -15%'\n}\n/*買い物カゴエリア全体 */\nexport const phoneBuyCartMain = {\n  background: \"#f0f0f0\",\n  marginTop: \"5%\",\n  margimBottom: \"2%\",\n  padding: \"5% 0\"\n}\n/*******************confirm*********************************************** */","import { useEffect, useState } from 'react';\nimport { Image, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport image from '../images/fishs2.jpg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart } from '../store/Store';\nimport { HeaderImagePhone,ArticlePhone, UlPhone, LlPhone, phoneBuyCartMain } from './phoneStyle';\n\nconst style={\n  width:'980px'\n}\n\nconst rightAreaTable={\n  height: '200px',\n  overflow: 'scroll'\n}\n\nconst nameTitle={\n  background: '#136FFF',\n  padding: '5px',\n  color:'white',\n  border:'1px solid #f0f0f0',\n  maxWidth: '100%',\n  margin: '0',\n  width: '100%'\n}\nconst buycheck={\n  padding: '5px 0',\n  background: 'brown',\n  color:'white',\n  fontSize:'16px',\n  textAlign: 'center',\n  borderLeft:'6px solid #c0c0c0'\n\n}\nconst buttonHeight={\n  height:'100px'\n}\n\n function PhoneIndex(props){\n  let localData = null;\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id == data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n\n  /***********************ステート*************************************** */\n  const[itemData, setState] = useState(\n    props.orderItem? props.orderItem : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n/*******************************************買い物ボタン*********************************************************************** */\n  const buyItem = (item)=>{\n    props.sendCustomerData(item);\n    props.history.push('/customor_show');\n  }\n/*******************************************買い物カゴアイテム削除*********************************************************************** */\nconst deleteCartItem = (index)=>{\n  let action = cartDeleteCart(index);\n  props.dispatch(action);\n}\n/********************************************買い物カゴ合計金額*************************************************************************************** */\n const itemTotalMoney = ()=>{\n   let total = 0;\n   props.buyCarts.map((data)=>{\n     total += Number(data.price) * Number(data.num);\n   })\n   return total;\n }\n /********************************************に買い物確認情報送信*************************************************************************************** */\n const sendShoppingData =()=>{\n   props.sendCartItemToConfirm(itemData);\n   props.history.push('/phone_customer_confirm');\n }\n  return(\n    <div>\n      <img src={image} alt=\"画像\" style={HeaderImagePhone} />\n       <div style={HeaderImagePhone} className=\"text-center\">\n    　　　<h4>本日入荷商品紹介</h4>\n         <article style={ArticlePhone}>\n           <section>\n             {itemData.length>0? <h2 className=\"customer-article-title\">商品紹介</h2> : <div className=\"bg-secondary text-center text-white p-5 font-weight-bold\">ただいま入荷商品がありません。</div>}\n             {itemData.length > 0 ? \n               <ul style={UlPhone}>\n                 {itemData.map((item)=>(\n                   <li style={LlPhone}>\n                       <Image style={HeaderImagePhone} src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" roundedCircle /><br/>\n                       <ul style={UlPhone}>\n                         <li style={nameTitle}>{`商品名${item.name}`}</li>\n                         <li style={nameTitle}>\n                           価格&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.price}</span>円\n                         </li>\n                         <li style={nameTitle}>\n                           在庫&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.stock}</span>(尾/個)\n                         </li>\n                         <li style={nameTitle} className=\"bg-white\">\n                           {props.userData.length>0 && props.userData[0].admin? \n                             '' \n                             : \n                             Number(item.stock) > 0? \n                              <button \n                                className=\"btn btn-success btn-block\"\n                                onClick={()=>buyItem(item)}\n                              >\n                               <FontAwesomeIcon icon={faCartPlus}  />買い物する\n                              </button>\n                             : \n                             <span className=\"text-danger font-weight-bold\">売り切れ</span>\n                           }\n                         </li>\n                       </ul>\n                     \n                   </li>\n                 ))}\n               </ul>\n                :\n               ''\n              }\n            \n           </section>\n\n         </article>\n\n         {props.userData.length>0 && props.userData[0].admin? \n            <div style={phoneBuyCartMain}>\n              <h5 style={buycheck}>管理者表示</h5>\n              <div className=\"p-3 bg-lignt font-weight-bold\">管理者のため表示されません</div>\n            </div>\n            : \n            <div style={phoneBuyCartMain}>\n            <h5 style={buycheck}>買い物確認</h5>\n             <p className=\"font-weight-bold text-center\">{props.userData.length>0? props.userData[0].name : ''}さん</p>\n             <p className=\"font-weight-bold bg-light p-2\">買い物点数&emsp;<span className=\"text-danger\">{props.buyCarts.length}</span>件</p>\n             \n             {props.buyCarts.length >0 ? \n              <div style={ rightAreaTable}>\n               <Table bordered>\n                 <thead className=\"bg-primary text-white\">\n                   <th>商品名</th>\n                   <th>個数</th>\n                   \n                 </thead>\n                 <tbody>\n                   {props.buyCarts.map((data,index)=>(\n                     <tr>\n                       <td className=\"align-middle text-center\">\n                         {data.name}<br/>\n                         ({data.process})\n                      </td>\n                       <td className=\"text-center\">\n                         {data.num}<br/>\n                         {/*<button\n                          className=\"btn btn-danger\"\n                          onClick={()=>deleteCartItem(index)}\n                         >削除</button>*/}\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </Table>\n               </div>\n               : \n               ''\n             }\n           \n             <p className=\"m-0\">合計金額</p>\n             <p className=\"font-weight-bold bg-dark p-2 text-white text-right\">{itemTotalMoney()}</p>\n             {props.buyCarts.length >0? \n               <button \n                 className=\"btn btn-primary btn-block font-weight-bold\" \n                 onClick={sendShoppingData}\n                 style={buttonHeight}>\n                 <FontAwesomeIcon icon={faCashRegister} />\n                   &nbsp;買い物確認\n              </button>\n               : \n               ''\n             }\n          </div>\n          }\n         \n      </div>\n\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneIndex))","import { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport MediaQuery from \"react-responsive\";\nimport { connect } from 'react-redux';\nimport { cartDeleteCart, ordersSend } from '../store/Store';\nimport PcIndex from './PCIndex';\nimport PhoneIndex from './PhoneIndex';\n\n function Index(props){\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    props.orderItem.forEach((data,i)=>{\n      if(props.fixItemData.id == data.id){\n        props.orderItem[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n  \n  /************************ステート*************************************** */\n  const[itemData, setState] = useState(\n    props.orderItem? props.orderItem : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useEffect(()=>{\n     loginUserCheck();\n   })\n  return(\n    <div>\n    <MediaQuery minDeviceWidth={767}>\n      <PcIndex \n        sendCustomerData={props.sendCustomerData}  \n        sendCartItemToConfirm={props.sendCartItemToConfirm}\n        fixItemData={props.fixItemData}\n      />\n    </MediaQuery>\n    \n    <MediaQuery maxDeviceWidth={767}>\n      <PhoneIndex \n          sendCustomerData={props.sendCustomerData}  \n          sendCartItemToConfirm={props.sendCartItemToConfirm}\n          fixItemData={props.fixItemData}\n      />\n    </MediaQuery>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","\n/*買い物かごで同一商品が含まれているのかをチェック あればaddされない*/\n\nimport { data } from \"jquery\";\n\nexport const sameItemCheck = (datas, name, process)=>{\n  let sameItemCount = 0;\n  datas.map((data)=>{\n    if((data.name === name) && (data.process === process)){\n        sameItemCount ++ ;\n    }\n  });\n  if(sameItemCount >0){\n      return true;\n  }\n  else{\n      return false;\n  }\n}\n\n/*セレクト時商品選択されていないかチェック*/\n\nexport const selectItemCheck = (name)=>{\n   if(name === '--加工法を選択してください--' || name === ''){\n        return false\n   }\n   else{\n       return true;\n   }\n}\n\n/*セレクト時ローカルストレージ在庫更新*/\n\nexport const localstorageChange = (name,stock, datas)=>{\n  \n  datas.map((data)=>{\n    if(data.name === name){\n      data.stock = stock;\n    }\n  });\n return datas;\n}\n\n/*注文確認ボタンにて削除ボタン押し下時に大元propsの在庫反映*/\n\nexport const pushDeleteButtonTolocalData = (name,orderNumber,datas)=>{\n  datas.map((data)=>{\n    if(data.name === name){\n      let localnum = Number(data.stock);\n      localnum += Number(orderNumber);\n      data.stock = localnum;\n    }\n  });\n  \n}","import React, { useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { cartsAdd } from '../store/Store';\nimport { sameItemCheck,  selectItemCheck } from './setting';\n\nconst table ={\n  width: '100%',\n  border: '1px solid #c0c0c0'\n}\nconst select={\n  width:'30%',\n  height:'40px'\n}\n\n/**************************************************************************************** */\n\nconst  Show = (props)=>{\n  const[state, setState] = useState({\n    number: null,\n    process: '',\n    time: null,\n    total: props.itemData? props.itemData.price : 0\n  })\n  const stockOption = ()=>{\n    let array = []\n    for(let i=0; i<=Number(props.itemData.stock); i++){\n       array.push(i)\n    }\n    return array\n  }\n  /******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n /********************************カテゴリーの配列化************************************************** */\n const categoryArray = ()=>{\n   return  props.itemData.process.split(',')\n }\n /********************************注文数変更************************************************** */\n const numberChange = (e)=>{\n   setState({\n     number: e.target.value,\n     process: state.process, \n     time: state.time,\n     total:  Number(props.itemData.price) * Number(e.target.value)\n   })\n}\n/********************************加工方法変更************************************************** */\nconst processChange = (e)=>{\n  setState({\n    number: state.number,\n    process: e.target.value,\n    time: state.time,\n    total:  state.total\n  })\n}\n/********************************受け取り時間************************************************** */\nconst timeChange = (e)=>{\n  setState({\n    number: state.number,\n    process: state.process,\n    time: e.target.value,\n    total:  state.total\n  })\n}\n/********************************サブミット************************************************** */\n\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let propData = props.itemData;\n    \n    let check = sameItemCheck(props.buyCarts, propData.name, state.process);\n    let stock = Number(props.itemData.stock);\n    let minusNumber = Number(state.number);\n    if(minusNumber > 0 &&  selectItemCheck(state.process)){\n      if(!check){\n        stock -= minusNumber;\n        propData.stock = stock;\n        props.changeItemData(propData);\n        let action = cartsAdd({name: propData.name, num: state.number, price: propData.price, process:　state.process, time: state.time});\n        props.dispatch(action);\n        props.history.push('/customor/index');\n      }\n      else{\n        alert('すでに注文しています。');\n      }\n    }\n    else if(minusNumber ===0){\n      alert('数量を入力してください。');\n    }\n    else if(! selectItemCheck(state.process)){\n      alert('加工法を選択してください。');\n    }\n    else{\n      alert('数量もしくは加工法が未入力です。');\n    }\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n   {props.itemData? \n     <>\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-info\">{props.itemData.name}注文</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n            <form onSubmit={doSubmit} className=\"W-100\">\n             <Table  style={table}>\n               <thead>\n                 <th className=\"bg-dark text-center text-white\">商品名</th>\n                 <th className=\"bg-dark text-center text-white\">価格</th>\n                 <th className=\"bg-dark text-center text-white\">買い上げ数</th>\n                 <th className=\"bg-dark text-center text-white\">加工法</th>\n                 <th className=\"bg-dark text-center text-white\">受け取り時間</th>\n                 <th className=\"bg-dark text-center text-white\">合計金額</th>\n               </thead>\n               <tbody>\n                 <tr>\n                   <td className=\"font-weight-bold text-center align-middle\">{props.itemData.name}</td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{props.itemData.price}</td>\n                   <td className=\"font-weight-bold text-center\">\n                     <select className=\"form-control\" onChange={numberChange}>\n                       {stockOption().map((num)=>(\n                         <option>{num}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle\">\n                   <select className=\"form-control\" onChange={processChange}>\n                       <option value=\"\">--加工法を選択してください--</option>\n                       {categoryArray().map((process)=>(\n                         <option>{process}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td>\n                     <input \n                        type=\"time\" \n                        value={state.time}  \n                        className=\"form-control\"\n                        onChange={timeChange}\n                     />\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{state.total}</td>\n                 </tr>\n               </tbody>\n             </Table>\n              <div className=\"text-left\">\n                <input type=\"submit\" value=\"追加\"　className=\"btn btn-primary btn-lg\" />\n              </div>\n             </form>\n        </Col>    \n      </Row>\n     </>\n     : \n     ''\n     }\n      \n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","\nimport '../App.css'\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\n\nconst NoData = ()=>{\n  return(\n    <div className=\"p-5 bg-secondary text-center font-weight-bold text-white mt-4 \">注文商品はありません。</div>\n  )\n}\nexport default NoData;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport { cartEmpty, cartUpdate, ordersStockChange } from '../store/Store';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faFish, faYenSign, faCalculator, faUtensils, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart, sendLoginData, ordersSend} from '../store/Store';\nimport Empty from './NoData';\nimport { localstorageChange } from './setting';\n\nconst title={\n  fontFamily: 'ヒラギノ明朝',\n  color: '#0000CD',\n  fontWeight: 'bold',\n  marginTop: '8%'\n}\nconst span ={\n  color: '#6927FF',\n  marginRight: '20px'\n}\nconst th={\n  background: '#8EB8FF',\n  color: '#eee',\n  textAlign: 'center'\n}\n\n/**************************************************************************************** */\n\nconst  Confirm = (props)=>{\n \n/*カートの商品の数量のみ配列化 */\n\nconst cartNum = ()=>{\n  let array = [];\n  props.buyCarts.forEach((data) => {\n    array.push(Number(data.num));\n  });\n  return array;\n}\n \n/***************************** ステート管理 ************************************************************** */\nconst[state, setState] = useState(props.orderData); /* 全体の在庫*/\nconst[num, setNumber] = useState(cartNum());  /* 現在の注文数ステータス */\n\n\n/***************************** セレクトの数量表示 ************************************************************** */\nconst selectNumber =(number)=>{\n  let array = [];\n  for(let i=0; i<= Number(number); i++){\n    array.push(i);\n  }\n  return array;\n}\n/***********************サーバー送信注文確定***************************************************************** */\nconst sendServer = ()=>{\n    let result = window.confirm('注文を確定してよろしいですか？');\n    if(result){\n      const params = new FormData();\n    params.append('email', props.userData[0].email);\n    params.append('name', props.userData[0].name);\n\n     /* PHP送信　*/\n    axios.post('http://yukiabineko.sakura.ne.jp/mail.php',\n　　　 params,\n      {\n        headers:{\n          'content-type': 'multipart/form-data',\n        },\n      }\n    ).then((res)=>{\n        console.log(res.data);\n    }).catch(()=>{\n    })\n\n\n  let sendData = props.buyCarts;\n   let obj = {}\n   obj['id'] = props.userData[0].id;\n   obj['data'] = sendData\n\n   /* rails送信　*/\n   axios.post('http://uematsu-backend.herokuapp.com/shoppings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n\n        alert(response.data.message); \n        axios.get(`https://uematsu-backend.herokuapp.com/users/${props.userData[0].id}`).then(function(response){\n           let action = sendLoginData (response.data);\n           props.dispatch(action);\n\n        }).catch(function(err){\n         console.log(err);\n        });\n      })\n      .catch(function(){\n        alert('error');\n      }) \n    \n    props.history.push('/customor');  /*ユーザーページへ移動*/\n    props.dispatch(cartEmpty());  /*買い物カゴリセット*/\n\n    }\n    \n  }\n  /**********************************商品アイテム削除************************************************************************************************ */\n  const deleteItem = (index, name, n)=>{\n    let action = cartDeleteCart(index);\n    props.dispatch(action);\n    \n    let action2 = ordersStockChange(name, n);\n    props.dispatch(action2);\n\n\n    /*選択数ステートも更新*/\n    let number = num.slice();\n    number.splice(index, 1);\n    \n\n    setNumber(number);\n    \n    \n\n  }\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n    loginUserCheck();\n    })\n/******************************セレクト切り替え********************************************************** */\nconst doSelect = (e)=>{\n  let currentNumber = Number(num[Number(e.target.name)]);\n  let changeNumber = Number(e.target.value);\n  let calcNumber = changeNumber - currentNumber;\n  let cartItemName = props.buyCarts[Number(e.target.name)].name;\n  let stateData = state.slice();\n  \n\n  stateData.forEach((data,i)=>{\n    let dataNumber = Number(data.stock);\n    \n    if(data.name === cartItemName){   /*セレクトの商品と全商品検証*/\n      /*増やしたか？　減らしたか? */\n      \n      if(calcNumber > 0){\n         stateData[i].stock = dataNumber - calcNumber;  /*数量増やした場合全体在庫減る*/\n          /*大元のストレージも変更*/\n          let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n          let changePropDatas = propOrders;\n        \n          let action = ordersSend(changePropDatas);\n          props.dispatch(action);\n         \n      }\n      else if(calcNumber <0){\n        stateData[i].stock = dataNumber + (currentNumber - changeNumber); /*数量増やした場合全体在庫増えるまたマイナスになるので計算反転*/\n         /*大元のストレージも変更*/\n        let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n        let changePropDatas = propOrders;\n      \n        let action = ordersSend(changePropDatas);\n        props.dispatch(action);\n      }\n    }\n  });\n  /*redux buycart変更*/\n  let buycart = props.buyCarts.slice();\n\n  let thiscartData = {\n    name: cartItemName,\n    num: changeNumber,\n    price: props.buyCarts[Number(e.target.name)].price,\n    process:props.buyCarts[Number(e.target.name)].process\n  }\n  /*リスト(買い物カゴ)の内変更かけたものを入れ替え*/\n\n  buycart[Number(e.target.name)] = thiscartData;\n  /*ストア送信(update)*/\n\n  let delAction =  cartUpdate(buycart);\n  props.dispatch(delAction);\n  \n\n  /*在庫ステート変更*/\n\n  setState(stateData);\n  let numArray = num.slice();\n  numArray[Number(e.target.name)] = changeNumber;\n  setNumber(numArray);\n}\n/************************時間変更************************************************* */\n  const timesChange =(e)=>{\n    let index = Number(e.target.name);\n    let carts = props.buyCarts.slice();\n    carts[index].time = e.target.value;\n    let action = cartUpdate(carts);\n    props.dispatch(action);\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n       <div className=\"text-center mt-5 mb-3\">\n         <h1 style={title}>\n           <span style={span}><FontAwesomeIcon icon ={faShoppingCart} /></span>\n           注文確認\n        </h1>\n       </div>\n       <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          {props.buyCarts.length >0? \n          <Form>\n           <Table bordered className=\"mt-3\">\n             <thead>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faFish} />\n                  </span>\n                  商品名\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faYenSign} />\n                  </span>\n                  価格\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faCalculator} />\n                  </span>\n                  数\n               </th>\n               <th style={th}>\n                 <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faUtensils} />\n                  </span>\n                  加工法\n               </th>\n               <th style={th}>\n                 <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faUtensils} />\n                  </span>\n                  受け取り時間\n               </th>\n               <th style={th}>合計</th>\n               <th style={th}></th>\n             </thead>\n             <tbody>\n               {props.buyCarts.map((data,index)=>(\n                 <tr>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.name}</td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.price}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                      <label>{\"現在\" + num[index]}</label>\n                      <Form.Control as=\"select\" size=\"sm\" custom value={num[index]} onChange={(index)=>doSelect(index)} name={index} >\n                       {state.map((order)=>(\n                         order.name === data.name? \n                         /*在庫にすでに選択されている数量足した数*/\n                         \n                           selectNumber(Number(order.stock) + Number(num[index])).map((value)=>(\n                             <option key={value}>{value}</option>\n                           ))\n                           : \n                           ''\n                       ))}\n                      </Form.Control>\n                   </td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{data.process}</td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">\n                    <input \n                          name={index}\n                          type=\"time\" \n                          value={data.time}  \n                          className=\"form-control\"\n                          onChange={timesChange}\n                      />\n                   </td>\n                   <td className=\"text-dark text-center font-weight-bold align-middle\">{Number(data.price) * Number(num[index])}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                     <Button \n                       variant=\"danger\"\n                       onClick={()=>deleteItem(index, data.name, num[index])}\n                     >\n                    削除\n                     </Button>\n                   </td>\n                 </tr>\n               ))}\n             </tbody>\n           </Table>\n           <div className=\"text-center\">\n             <Button  \n               variant=\"primary\"\n               className=\"btn-lg\"\n               onClick={sendServer}\n             >\n             <span><FontAwesomeIcon icon={faCashRegister} /></span>\n             注文確定\n             </Button>\n           </div>\n         </Form> \n           : \n          <Empty />\n         }\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Confirm))\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport { cartEmpty, cartUpdate, ordersStockChange } from '../store/Store';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faFish, faYenSign, faCalculator, faUtensils, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart, sendLoginData, ordersSend} from '../store/Store';\nimport Empty from './NoData';\nimport { localstorageChange } from './setting';\n\n\nconst table ={\n  width: '100%'\n}\n\nconst title={\n  fontFamily: 'ヒラギノ明朝',\n  color: '#0000CD',\n  fontWeight: 'bold',\n  marginTop: '8%'\n}\nconst span ={\n  color: '#6927FF',\n  marginRight: '20px'\n}\nconst th={\n  background: '#8EB8FF',\n  color: '#eee',\n  textAlign: 'center'\n}\n\n/**************************************************************************************** */\n\nconst  PhoneConfirm = (props)=>{\n \n/*カートの商品の数量のみ配列化 */\n\nconst cartNum = ()=>{\n  let array = [];\n  props.buyCarts.forEach((data) => {\n    array.push(Number(data.num));\n  });\n  return array;\n}\n \n/***************************** ステート管理 ************************************************************** */\nconst[state, setState] = useState(props.orderData); /* 全体の在庫*/\nconst[num, setNumber] = useState(cartNum());  /* 現在の注文数ステータス */\n\n\n/***************************** セレクトの数量表示 ************************************************************** */\nconst selectNumber =(number)=>{\n  let array = [];\n  for(let i=0; i<= Number(number); i++){\n    array.push(i);\n  }\n  return array;\n}\n/***********************サーバー送信注文確定***************************************************************** */\nconst sendServer = ()=>{\n    let result = window.confirm('注文を確定してよろしいですか？');\n    if(result){\n      const params = new FormData();\n    params.append('email', props.userData[0].email);\n    params.append('name', props.userData[0].name);\n\n     /* PHP送信　*/\n    axios.post('http://yukiabineko.sakura.ne.jp/mail.php',\n　　　 params,\n      {\n        headers:{\n          'content-type': 'multipart/form-data',\n        },\n      }\n    ).then((res)=>{\n        console.log(res.data);\n    }).catch(()=>{\n    })\n\n\n  let sendData = props.buyCarts;\n   let obj = {}\n   obj['id'] = props.userData[0].id;\n   obj['data'] = sendData\n\n   /* rails送信　*/\n   axios.post('http://uematsu-backend.herokuapp.com/shoppings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n\n        alert(response.data.message); \n        axios.get(`https://uematsu-backend.herokuapp.com/users/${props.userData[0].id}`).then(function(response){\n           let action = sendLoginData (response.data);\n           props.dispatch(action);\n\n        }).catch(function(err){\n         console.log(err);\n        });\n      })\n      .catch(function(){\n        alert('error');\n      }) \n    \n    props.history.push('/customor');  /*ユーザーページへ移動*/\n    props.dispatch(cartEmpty());  /*買い物カゴリセット*/\n\n    }\n    \n  }\n  /**********************************商品アイテム削除************************************************************************************************ */\n  const deleteItem = (index, name, n)=>{\n    let action = cartDeleteCart(index);\n    props.dispatch(action);\n    \n    let action2 = ordersStockChange(name, n);\n    props.dispatch(action2);\n\n\n    /*選択数ステートも更新*/\n    let number = num.slice();\n    number.splice(index, 1);\n    \n\n    setNumber(number);\n    \n    \n\n  }\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n    loginUserCheck();\n    })\n/******************************セレクト切り替え********************************************************** */\nconst doSelect = (e)=>{\n  let currentNumber = Number(num[Number(e.target.name)]);\n  let changeNumber = Number(e.target.value);\n  let calcNumber = changeNumber - currentNumber;\n  let cartItemName = props.buyCarts[Number(e.target.name)].name;\n  let stateData = state.slice();\n  \n\n  stateData.forEach((data,i)=>{\n    let dataNumber = Number(data.stock);\n    \n    if(data.name === cartItemName){   /*セレクトの商品と全商品検証*/\n      /*増やしたか？　減らしたか? */\n      \n      if(calcNumber > 0){\n         stateData[i].stock = dataNumber - calcNumber;  /*数量増やした場合全体在庫減る*/\n          /*大元のストレージも変更*/\n          let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n          let changePropDatas = propOrders;\n        \n          let action = ordersSend(changePropDatas);\n          props.dispatch(action);\n         \n      }\n      else if(calcNumber <0){\n        stateData[i].stock = dataNumber + (currentNumber - changeNumber); /*数量増やした場合全体在庫増えるまたマイナスになるので計算反転*/\n         /*大元のストレージも変更*/\n        let propOrders = localstorageChange(cartItemName, stateData[i].stock, props.orderItem);\n        let changePropDatas = propOrders;\n      \n        let action = ordersSend(changePropDatas);\n        props.dispatch(action);\n      }\n    }\n  });\n  /*redux buycart変更*/\n  let buycart = props.buyCarts.slice();\n\n  let thiscartData = {\n    name: cartItemName,\n    num: changeNumber,\n    price: props.buyCarts[Number(e.target.name)].price,\n    process:props.buyCarts[Number(e.target.name)].process\n  }\n  /*リスト(買い物カゴ)の内変更かけたものを入れ替え*/\n\n  buycart[Number(e.target.name)] = thiscartData;\n  /*ストア送信(update)*/\n\n  let delAction =  cartUpdate(buycart);\n  props.dispatch(delAction);\n  \n\n  /*在庫ステート変更*/\n\n  setState(stateData);\n  let numArray = num.slice();\n  numArray[Number(e.target.name)] = changeNumber;\n  setNumber(numArray);\n}\n/************************時間変更************************************************* */\n  const timesChange =(e)=>{\n    let index = Number(e.target.name);\n    let carts = props.buyCarts.slice();\n    carts[index].time = e.target.value;\n    let action = cartUpdate(carts);\n    props.dispatch(action);\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n       <div className=\"text-center mt-5\">\n         <h1 style={title}>\n           <span style={span}><FontAwesomeIcon icon ={faShoppingCart} /></span>\n           注文確認\n        </h1>\n       </div>\n       <div className=\"bg-white p-2\"></div>\n       <div className=\"bg-white pb-3\">\n          {props.buyCarts.length >0? \n          <Form>\n           <Table bordered className=\"w-100\">\n             <tbody>\n               {props.buyCarts.map((data,index)=>(\n                 <tr>\n                  <Table>\n                   <tr>\n                     <th style={th}>\n                        <span className=\"text-primary mr-2 h5\">\n                          <FontAwesomeIcon icon={faFish} />\n                        </span>\n                        商品名\n                     </th>\n                     <td className=\"text-dark text-center font-weight-bold align-middle\">{data.name}</td>\n                   </tr>\n                  \n                   <tr>\n                    <th style={th}>\n                      <span className=\"text-primary mr-2 h5\">\n                          <FontAwesomeIcon icon={faYenSign} />\n                        </span>\n                          価格\n                      </th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">{data.price}</td>\n                   </tr>\n\n                   <tr>\n                    <th style={th} className=\"align-middle\">\n                      <span className=\"text-primary mr-2 h5\">\n                        <FontAwesomeIcon icon={faCalculator} />\n                      </span>\n                        数\n                    </th>\n                      <td className=\"text-dark text-center font-weight-bold\">\n                        <label>{\"現在\" + num[index]}</label>\n                        <Form.Control as=\"select\" size=\"sm\" custom value={num[index]} onChange={(index)=>doSelect(index)} name={index} >\n                        {state.map((order)=>(\n                          order.name === data.name? \n                          /*在庫にすでに選択されている数量足した数*/\n                          \n                            selectNumber(Number(order.stock) + Number(num[index])).map((value)=>(\n                              <option key={value}>{value}</option>\n                            ))\n                            : \n                            ''\n                        ))}\n                        </Form.Control>\n                      </td>\n                   </tr>\n                    \n                   <tr>\n                    <th style={th}>\n                      <span className=\"text-primary mr-2 h5\">\n                        <FontAwesomeIcon icon={faUtensils} />\n                      </span>\n                        加工法\n                    </th>\n                    <td className=\"text-dark text-center font-weight-bold align-middle\">{data.process}</td>\n                   </tr>\n\n\n                    <tr>\n                      <th style={th}>\n                        <span className=\"text-primary mr-2 h5\">\n                            <FontAwesomeIcon icon={faUtensils} />\n                        </span>\n                        受け取り時間\n                      </th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">\n                        <input \n                          name={index}\n                          type=\"time\" \n                          value={data.time}  \n                          className=\"form-control\"\n                          onChange={timesChange}\n                          />\n                      </td>\n                    </tr>\n                    \n                    <tr>\n                      <th style={th}>合計</th>\n                      <td className=\"text-dark text-center font-weight-bold align-middle\">{Number(data.price) * Number(num[index])}</td>\n                    </tr>\n\n                    <tr>\n                       <td colSpan=\"2\" className=\"text-dark text-center font-weight-bold\">\n                         <Button \n                            variant=\"danger\"\n                            onClick={()=>deleteItem(index, data.name, num[index])}\n                            className=\"btn-block\"\n                          >\n                          削除\n                         </Button>\n                       </td>\n                    </tr>\n                  </Table>\n                 </tr>\n               ))}\n             </tbody>\n           </Table>\n           <div className=\"text-center\">\n             <Button  \n               variant=\"primary\"\n               className=\"btn-lg btn-block mb-5\"\n               onClick={sendServer}\n             >\n             <span><FontAwesomeIcon icon={faCashRegister} /></span>\n             注文確定\n             </Button>\n           </div>\n         </Form> \n           : \n          <Empty />\n         }\n      </div>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(PhoneConfirm))\n","import { faDivide } from '@fortawesome/free-solid-svg-icons';\nimport React from 'react';\n\n/*当日日付のみ表示するための分岐処理*/\n\nexport const viewDataBranch = (date)=>{\n  /*本日*/\n\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n  /*注文データ*/\n\n  const createDate = new Date(date);\n  const c_year = createDate.getFullYear();\n  const c_month = createDate.getMonth() + 1;\n  const c_day = createDate.getDate();\n\n  /*照合*/\n  if( year === c_year && month === c_month && day === c_day){\n     return 1;\n  }\n  else{\n     return 0;\n  }\n\n}\n/********************************************************************************************* */\n/*オーダーで今日の日付のものがあるかチェック*/\n\nexport const todayOdrersChecker = (shoppings)=>{\n  let target = 0;\n  shoppings.forEach((shopping)=> {\n     let data = viewDataBranch(shopping.shopping_date);\n     /*各オーダーで今日日付のものがあれば加算*/\n     if(data === 1) target ++;\n  });\n  return target;\n}\n/*(ヘッダー表示用,商品リスト用)明日の日付アイテムあるか確認 */\n\nexport const todayOrderExisting =(shoppings)=>{\n   let todayObjects = [];\n   let date = new Date();\n   let year = date.getFullYear();\n   let month = date.getMonth() + 1;\n   date.setDate(date.getDate() + 1); \n   let day = date.getDate();  /*tomorrow */\n\n   if(shoppings){\n      shoppings.forEach((shopping)=>{\n         let t_date = new Date(shopping.shopping_date);\n         let t_year = t_date.getFullYear();\n         let t_month = t_date.getMonth() + 1;\n         let t_day = t_date.getDate();\n         if( year == t_year && month == t_month && day == t_day){\n            todayObjects.push(shopping);\n         }\n      });\n   }\n   return todayObjects;\n}\n","import { useEffect, useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { viewDataBranch, todayOdrersChecker } from \"./settiing\";\nimport { daySetting } from '../users/setting';\n\n const customButton ={\n   border: \"none\",\n   borderBottom: \"1px solid #0000bb\",\n   background: \"none\",\n   color: \"#0000bb\",\n   outline: 'none',\n   fontWeight: 'bold'\n }\n\n function Index(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n\n  /************************ステート*************************************** */\n  const[shopingData, setState] = useState(\n    localData ? localData : []\n  )\n  \n  /*************APIによるshopping一覧**********************************/\n  async function shoppingsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/shoppings')\n      .then((res)=>{\n         localStorage.removeItem('shoppings');\n         setState(res.data);\n         localStorage.setItem('shoppings', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(shoppingsCall());\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/***************************************ステータス分岐********************************************************************** */\n  const orderStatus = (status)=>{\n    switch (status) {\n      case 0:\n        return <div className=\"bg-info text-center text-white mt-3\">申請中</div>;\n      case 1:\n        return <div className=\"bg-warning text-center text-white mt-3\">加工済み</div>;\n      case 2:\n        return <div className=\"bg-danger text-center text-white mt-3\">受け渡し済み</div>;\n    default:\n        break;\n    }\n  }\n  /****************************************カスタムbutton hover*************************************************** */\n  const hoverButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"#BAD3FF\";\n  }\n  /****************************************カスタムbutton out*************************************************** */\n  const outButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"none\";\n  }\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.sendShoppingData(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\" className=\"font-weight-bold text-info\">注文確認表</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          {(shopingData.length >0 && todayOdrersChecker(shopingData) > 0)? \n            <Table bordered striped>\n              <thead>\n              <th className=\"bg-primary text-white text-center\">受け渡し日</th>\n                <th className=\"bg-primary text-white text-center\">商品名</th>\n                <th className=\"bg-primary text-white text-center\">お客様名</th>\n                <th className=\"bg-primary text-white text-center\">価格</th>\n                <th className=\"bg-primary text-white text-center\">個数</th>\n                <th className=\"bg-primary text-white text-center\">加工法</th>\n                <th className=\"bg-primary text-white text-center\">合計金額{todayOdrersChecker(shopingData).length}</th>\n              </thead>\n              <tbody>\n                {shopingData.map((data,i)=>(\n                  /* 当日のみ表示 */\n\n                  viewDataBranch(data.shopping_date) === 1? \n                  <tr>\n                  <td className=\"font-weight-bold text-center align-middle\">{daySetting(data.shopping_date)}</td>\n                  <td className=\"font-weight-bold text-center align-center\">\n                    <button \n                      style={customButton} \n                      id={`customButton${i}`}\n                      onMouseOver={()=>hoverButton(i)}\n                      onMouseOut={()=>outButton(i)}\n                      className=\"customButton\"\n                      onClick={()=>showShoppingStatus(data)}\n                      >{data.name}</button>\n                    \n                    <br/>\n                    {orderStatus(data.status)}\n                  </td>\n                  <td className=\"font-weight-bold text-center align-middle\">{`${data.user_name}様`}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">{data.price}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.num}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.process}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">\n                    { Number(data.price) * Number(data.num) }\n                  </td>\n                </tr>\n                   : \n                   ''\n                ))}\n              </tbody>\n            </Table>\n            : \n            <div className=\"bg-secondary text-center text-white font-weight-bold p-3\">データがありません。</div>\n          }\n          \n        </Col>\n      </Row>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUtensils, faTruck, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst font ={\n  fontSize: '24px'\n}\n\nconst  Show = (props)=>{\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck);\n\n    /*ステータスによる条件訳*/\n\n    const statusLayout = ()=>{\n      switch (props.show.status) {\n        case 0:\n          return <div className=\"bg-info text-white text-center\">申請中</div>;\n        case 1:\n          return <div className=\"bg-warning text-white text-center\">加工済み</div>;\n        case 2:\n          return <div className=\"bg-danger text-white text-center\">受け渡し済み</div>;\n        default:\n          break;\n      }\n    }\n    /* ステータス変更サーバー送信 */\n    \n    const sendStatusNumber = (num)=>{\n\n       /* rails側への送信*/\n      \n       const params = {\n        id: props.show.id,\n        name: props.show.user_name,\n        status: num\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/shoppings/${props.show.id}`, params)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n      props.history.push('/shoppings');\n    }\n    \n  return(\n   <>\n    <div className=\"text-center mt-5\">\n      <h2 className=\"font-weight-bold\">注文状況確認/変更</h2>\n    </div>\n    <Row>\n      < Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n        {props.show? \n          <div>\n          {/*　注文情報 */ }\n\n          <Table bordered>\n            <tbody>\n              <tr>\n                <th className=\"bg-primary text-white\">商品名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{props.show.name}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">お客様名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{`${props.show.user_name}様`}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">価格</th>\n                <td className=\"font-weight-bold\">{props.show.price}</td>\n                <th className=\"bg-primary text-white\">注文数</th>\n                <td className=\"font-weight-bold\">{props.show.num}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">合計金額</th>\n                <td className=\"font-weight-bold\">{Number(props.show.price) * Number(props.show.num)}</td>\n                <th className=\"bg-primary text-white\">注文状況</th>\n                <td className=\"font-weight-bold\">{statusLayout()}</td>\n               \n              </tr>\n            </tbody>\n          </Table>\n\n          {/* 変更エリア */}\n           <p className=\"font-weight-bold\">現在の注文商品の状況を変更するには<br/>対応するボタンを押してください。</p>\n           <fieldset className=\"bg-secondary p-2\">\n            {props.show.status === 0? \n              <>\n                 <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(1)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n              /* ステータス加工済み */\n              \n              props.show.status === 1 ? \n              <>\n                 <Button \n                    variant=\"primary\"\n                    className=\"btn-block p-4 font-weight-bold text-white \"\n                    onClick={()=>sendStatusNumber(0)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                   申請中に変更\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={ faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n               /* ステータス受け渡し済み */\n\n               <>\n               <Button \n                  variant=\"primary\"\n                  className=\"btn-block p-4 font-weight-bold text-white \"\n                  onClick={()=>sendStatusNumber(0)}\n                  style={font}\n                >\n                <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                 申請中に変更\n               </Button>\n               <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n            </>\n\n            }\n           </fieldset>\n          </div>\n           : \n          ''\n        }\n      </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useState } from 'react';\nimport { Row, Col, Table } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { todayOrderExisting } from './settiing';\nimport { timeSetting } from '../setting';\n\n /******************************従業員側明日の予約確認ページ********************************************************** */\n\nconst  Reservation = (props)=>{\n \n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-light font-weight-bold\">明日の予約一覧表</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 10, offset: 1 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         {todayOrderExisting(JSON.parse(localStorage.getItem('shoppings'))).map((data,i)=>(\n           <>\n           <div className=\"font-weight-bold h3\">【{data.user_name}さん】</div>\n           <Table bordered className=\"mt-3\">\n             <tbody>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">商品名</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{data.name}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">依頼調理法</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{data.process}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">受け取り時間</th>\n                 <td colSpan=\"5\" className=\"font-weight-bold\">{timeSetting(data.receiving_time)}</td>\n               </tr>\n               <tr>\n                 <th className=\"bg-primary text-white font-weight-bold\">商品単価</th>\n                 <td className=\"font-weight-bold\">{data.price}</td>\n                 <th className=\"bg-primary text-white font-weight-bold\">注文数量</th>\n                 <td className=\"font-weight-bold\">{data.num}</td>\n                 <th className=\"bg-primary text-white font-weight-bold\">合計金額</th>\n                 <td className=\"font-weight-bold\">{data.price * data.num}</td>\n               </tr>\n               <tr>\n\n               </tr>\n             </tbody>\n           </Table>\n           </>\n         ))}\n           \n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Reservation));","import React, { useState } from \"react\";\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport axios from 'axios';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Index from './users/Index';\nimport Login from './Login';\nimport userNew from './users/New'\nimport Edit from './users/Edit'\nimport UserShow from './users/Show';\nimport EmpShow from './users/EmpShow';\nimport UserOrder from './users/Order';\nimport ItemIndex from './items/Index';\nimport ItemNew from './items/New';\nimport ItemEdit from './items/Edit';\nimport Process from './items/Process';\nimport OrderIndex from './orders/Index';\nimport OrderNew from './orders/New';\nimport OrderEdit from './orders/Edit';\nimport CustomorIndex from './customer/Index'\nimport CustomorShow from './customer/Show'\nimport Confirm from './customer/confirm';\nimport PhoneConfirm from './customer/PhoneConfirm';\nimport ShoppingIndex from './shopping/Index';\nimport ShoppingShow from './shopping/Show';\nimport Reservation from './shopping/Reservation';\nimport { connect } from \"react-redux\";\nimport { logoutAction, cartEmpty } from './store/Store';\nimport {  todayOrderExisting } from './shopping/settiing';\n\n function App(props){\n  const[state, setState] = useState({\n    editId: 0,\n    deleteId: 0,\n    itemEditId:0,\n    processId: 0,\n    OrderEditId: 0,\n    customerItem: null,\n    shoppingShow: null,\n    cartItem: null\n  })\n  const userlogout = ()=>{\n    let action = logoutAction();\n    props.dispatch(action);\n\n    let cartAction = cartEmpty(); /*買い物かごリセット*/\n    props.dispatch(cartAction);\n    /*買い物かご操作のリセット(ストレージ)*/\n\n    axios\n    .get('https://uematsu-backend.herokuapp.com/orders')\n    .then((res)=>{\n       localStorage.setItem('orders', JSON.stringify(res.data));\n       \n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n    setState({\n     data: JSON.parse(localStorage.getItem('orders'))\n   })\n    \n  }\n\n  const getEditId = (id)=>{\n\n    setState({\n      editId: id,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getItemEditId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: item,\n      processId: state.processId,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getProcessId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: item,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getOrderEditId = (id)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: id,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*お客様買うボタンより*/\n  const customerItem = (item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*ストック数およびお買い物リストの更新*/\n  const changeItem =(item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*個別の注文状況の表示用アイテム*/\n  const shoppingData = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: data,\n      cartItem: state.cartItem\n    })\n  }\n  /*買い物カゴ送信処理*/\n\n  const cartItem = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: data\n    })\n  }\n  \n  return(\n    <BrowserRouter>\n    <div className='fixed-top'> \n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark fixed-top\">\n      <a className=\"navbar-brand text-white\" href=\"#\"><FontAwesomeIcon icon={faUtensils} />&nbsp;\n            加工依頼アプリ</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n        \n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {props.userData.length >0?\n            props.userData[0].admin === true? \n             /*従業員サイド */\n            <>\n              <li class=\"nav-item pt-3 pb-3 active\">\n                <span className=\"font-weight-bold text-warning\"><FontAwesomeIcon icon={faUser} />{props.userData[0].name}さん</span>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/customor\" className=\"text-light p-3\">お買い物</Link>\n             </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/\" className=\"text-light p-3\">お客様一覧</Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/items\" className=\"text-light p-3\">商品一覧</Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/orders\" className=\"text-light p-3\">店頭商品一覧</Link>\n             </li>\n             <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/shoppings\" className=\"text-light p-3\">本日注文状況</Link>\n             </li>\n             {/*明日のオーダーがあれば表示*/ }\n\n             { todayOrderExisting(JSON.parse(localStorage.getItem('shoppings'))).length >0? \n               <li className=\"nav-item pt-3 pb-3\">\n                 <Link to=\"/reservation\" className=\"text-light p-3\">明日の予約状況</Link>\n               </li> \n              : \n              ''\n              }\n          \n            </>\n            /*お客様サイド */\n              : \n              <>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/customor\" className=\"text-light p-3\">お買い物</Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users/show\" className=\"text-light p-3\">お客様ページ</Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users_order\" className=\"text-light p-3\">注文確認</Link>\n                </li>\n              </>\n            : \n            <></>\n          }\n        </ul>\n\n        <ul className=\"navbar-nav\">\n        {props.userData.length >0? \n           <li className=\"nav-item pt-3 pb-3\">\n             <button \n              className=\"logout\"\n              onClick={userlogout}\n              data-testid=\"logintrue\"\n            >ログアウト</button>\n           </li>\n          : \n          <li className=\"nav-item pt-3 pb-3\"><Link to=\"/login\" className=\"text-light p-3\" data-testid=\"loginfalse\">ログイン</Link></li>\n          }\n        </ul>\n      </div>\n      \n    </nav>\n     \n      </div><br/><br/>\n      <Route exact path=\"/\" render={()=>\n        <Index \n          editIdget={(id)=>getEditId(id)} \n        />} /> \n      <Route path=\"/login\" render={()=><Login />} />\n      <Route path=\"/users/new\" component={userNew} />\n      <Route path=\"/users/edit\" render={ () => <Edit id={state.editId} />} />\n      <Route path=\"/users/show\" component={UserShow} />\n      <Route path=\"/users_empshow\"  render={()=><EmpShow\n        \n        />} />\n      <Route path=\"/users_order\" component={UserOrder} />\n      <Route path=\"/items\"  render={()=><ItemIndex \n        itemEditIdget={(item)=>getItemEditId(item)} \n        processIdget={(item)=>getProcessId(item)}\n        />} />\n      <Route path=\"/items_new\" component={ItemNew} />\n      <Route path=\"/items_process\" render={ () => <Process item={state.processId} />}  />\n      <Route path=\"/items_edit\" render={ () => <ItemEdit item={state.itemEditId} />}  />\n      <Route path=\"/orders\" render={()=><OrderIndex orderEditIdget={(id)=>getOrderEditId(id)} />} />\n      <Route path=\"/orders_new\" component={OrderNew} />\n      <Route path=\"/orders_edit\" render={ () => <OrderEdit id={state.OrderEditId} />} />\n      <Route path=\"/customor\"  \n        render={()=>\n        <CustomorIndex \n          sendCustomerData={(item)=>customerItem(item)} \n          sendCartItemToConfirm={(item)=>cartItem(item)}\n          fixItemData={state.customerItem}\n        />} />\n      <Route path=\"/customor_show\" \n      render={()=>\n        <CustomorShow \n          itemData={state.customerItem}\n          changeItemData={(item)=>changeItem(item)}\n         \n      />} />\n     <Route path=\"/customer_confirm\"\n      render={()=>\n        <Confirm\n          orderData={state.cartItem}\n      />} />\n\n     <Route path=\"/phone_customer_confirm\"\n        render={()=>\n          <PhoneConfirm\n              orderData={state.cartItem}\n          />} />\n        \n     <Route path=\"/shoppings\" \n      render={()=>\n        <ShoppingIndex \n          sendShoppingData={(data)=>shoppingData(data)}\n        />} />\n     <Route path=\"/shoppings_show\" \n      render={()=>\n        <ShoppingShow \n          show={state.shoppingShow}\n        />} />\n       <Route path=\"/reservation\" \n        render={()=>\n          <Reservation\n            \n          />} />\n     \n    </BrowserRouter>\n  )\n}\nexport default connect((state)=>state)(App)\n\n\n\n/*\ncomponentDidMount() {\n    const fetchInit = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" }\n    };\n\n    fetch(new URL(process.env.REACT_APP_SERVER_URL), fetchInit)\n      .then(response => response.json())\n      .then(response => this.setState(response));\n  }\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport datastore from './store/Store';\nimport { Beforeunload } from 'react-beforeunload';\n\n\nReactDOM.render(\n  <Provider store={datastore}>\n    <Beforeunload onBeforeunload={() => \"data\"}>\n     <App />\n    </Beforeunload>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}